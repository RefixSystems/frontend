{"version":3,"file":"static/js/7248.e8b39375.chunk.js","mappings":"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","sources":["components/FetchLoader.js","pages/Admin/Notification/Notification.js"],"sourcesContent":["import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { RotatingLines } from 'react-loader-spinner'; \nimport loader from '../assests/images/loader.gif';\n\nconst FetchLoader = () => {\n  return (\n    <Container className=\"vh-100 d-flex flex-column justify-content-center align-items-center\">\n      {/* Add your GIF image below */}\n      <img \n        src={loader} \n        alt=\"Loading...\" \n        style={{ width: '150px', height: '150px' }} \n      />\n      {/* Optional: Use a text loader if needed */}\n      <div className=\"text mt-3\">Loading ...</div>\n    </Container>\n  );\n};\n\nexport default FetchLoader;\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Button, Container, Row, Col, Form } from 'react-bootstrap';\nimport {\n  useDeleteNotificationMutation,\n  useGetNotificationQuery,\n} from '../../../redux/api/NotificationApi';\nimport { MdDelete, MdEmail } from 'react-icons/md';\nimport { getRole } from '../../../Constants/Global';\nimport FetchLoader from '../../../components/FetchLoader';\nimport DeleteModel from '../../../components/DeleteModel';\nimport { toast } from 'react-toastify';\nimport NoAccess from '../../../components/NoAccess';\nimport NoDataFound from '../../../components/NoDataFound';\nimport { format } from 'date-fns';\nimport { useTheme } from '../../../Contexts/ThemeContext';\nimport { useNavigate } from 'react-router-dom';\nimport { getPhoneNumber } from '../../../Constants/PhoneNumberGlobal';\nconst NotificationPage = () => {\n  const { color } = useTheme();\n  const [selectedNotification, setSelectedNotification] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [deleteShow, setDeleteShow] = useState(false);\n  const [viewedNotifications, setViewedNotifications] = useState([]);\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [sendemail, setSendEmail] = useState('');\n\n  const role = getRole();\n  const phoneNumberGlobal = getPhoneNumber();\n\n  const [deleteAllNotification] = useDeleteNotificationMutation();\n  const navigate = useNavigate();\n  const { data, refetch, isLoading, error } = useGetNotificationQuery({\n    role: role,\n    phoneNumber: phoneNumberGlobal,\n  });\n  const formatTime = (date) => format(new Date(date), ' h:mm a');\n  useEffect(() => {\n    // Retrieve viewed notifications from local storage on mount\n    const viewed =\n      JSON.parse(localStorage.getItem('viewedNotifications')) || [];\n    setViewedNotifications(viewed);\n  }, []);\n\n  const handleShowModal = (notification) => {\n    if (notification && notification.orderDetails) {\n      const details = notification.orderDetails[0] ?? {};\n      setPhoneNumber(details.phoneNumber);\n      setSendEmail(details.email);\n    }\n    setSelectedNotification(notification);\n    setShowModal(true);\n\n    if (!viewedNotifications.includes(notification._id)) {\n      const updatedViewedNotifications = [\n        ...viewedNotifications,\n        notification._id,\n      ];\n      setViewedNotifications(updatedViewedNotifications);\n      // Save to local storage\n      localStorage.setItem(\n        'viewedNotifications',\n        JSON.stringify(updatedViewedNotifications)\n      );\n    }\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const deleteHandleShow = () => {\n    setDeleteShow(true);\n  };\n\n  const deleteHandleClose = () => {\n    setDeleteShow(false);\n  };\n\n  const handleDeleteNotification = async () => {\n    try {\n      const response = await deleteAllNotification({\n        role: role,\n        phoneNumber: phoneNumberGlobal,\n      });\n      setDeleteShow(false);\n      if (response?.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        refetch();\n      } else {\n        toast.error(response?.error?.data?.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const formatDate = (datetime) => {\n    const date = new Date(datetime);\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return date.toLocaleDateString(undefined, options);\n  };\n\n  // const formatTime = (datetime) => {\n  //   const date = new Date(datetime);\n  //   return date.toLocaleTimeString(undefined, {\n  //     hour: '2-digit',\n  //     minute: '2-digit',\n  //   });\n  // };\n\n  return (\n    <div>\n      {isLoading ? (\n        <FetchLoader />\n      ) : (\n        <Container fluid className=\"mt-3 \">\n          <Row className=\"boxShadow p-4 mb-4 mt-4\">\n            <Col className=\"d-flex flex-row justify-content-between mt-1\">\n              <h4 className=\"fw-bold\">Notifications</h4>\n              {data && data.data && data.data.length === 0 ? (\n                <></>\n              ) : (\n                <div>\n                  <Button\n                    variant=\"danger\"\n                    className=\"p-2 m-1\"\n                    onClick={deleteHandleShow}\n                  >\n                    <MdDelete size={20} />\n                    <span className=\"d-none d-md-inline\"> Clear All</span>\n                  </Button>\n                </div>\n              )}\n            </Col>\n          </Row>\n          {data && data.data && data.data.length === 0 ? (\n            <Row className=\"justify-content-center \">\n              <Col\n                xs=\"auto\"\n                className=\"justify-content-center align-item-center\"\n              >\n                <div>\n                  <NoDataFound />\n                </div>\n              </Col>\n            </Row>\n          ) : (\n            data?.data?.map((notification) => (\n              <Row\n                key={notification._id}\n                className=\"boxShadow p-3 mb-4\"\n                style={{ cursor: 'pointer' }}\n                onClick={() => handleShowModal(notification)}\n              >\n                <Col xs={12}>\n                  <div\n                    className={`notification-item ${!viewedNotifications.includes(notification._id) ? 'unviewed' : ''}`}\n                  >\n                    <h4>{notification.title}</h4>\n                    <p>{notification.subtitle}</p>\n                  </div>\n                  <div className=\"d-flex justify-content-between m-1\">\n                    <span>{formatDate(notification.createdAt)}</span>\n                    <span>{formatTime(notification.createdAt)}</span>\n                  </div>\n                </Col>\n              </Row>\n            ))\n          )}\n        </Container>\n      )}\n\n      <Modal show={showModal} onHide={handleCloseModal} centered    dialogClassName=\"review-modal\">\n        <Modal.Header closeButton>\n          <Modal.Title>Notification Details</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {selectedNotification &&\n          selectedNotification.orderDetails.length > 0 ? (\n            selectedNotification.orderDetails.map((detail, index) => (\n              <div key={index}>\n                {Object.entries(detail).map(\n                  ([key, value]) =>\n                    key !== '_id' &&\n                    key !== 'products' && (\n                      <Form.Group key={key} className=\"mb-3\">\n                        <Form.Label>\n                          <strong>{key}</strong>\n                        </Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          readOnly\n                          disabled\n                          value={value}\n                        />\n                      </Form.Group>\n                    )\n                )}\n                <hr />\n              </div>\n            ))\n          ) : (\n            <NoDataFound />\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button style={{backgroundColor:color}} onClick={handleCloseModal}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <DeleteModel\n        YES={handleDeleteNotification}\n        DELETESTATE={deleteShow}\n        ONCLICK={deleteHandleClose}\n        DESCRIPTION=\"Are you sure you want to delete all notifications\"\n        DELETETITLE=\"Notification\"\n      />\n    </div>\n  );\n};\n\nexport default NotificationPage;\n"],"names":["FetchLoader","_jsxs","Container","className","children","_jsx","src","loader","alt","style","width","height","NotificationPage","_data$data","color","useTheme","selectedNotification","setSelectedNotification","useState","showModal","setShowModal","deleteShow","setDeleteShow","viewedNotifications","setViewedNotifications","phoneNumber","setPhoneNumber","sendemail","setSendEmail","role","getRole","phoneNumberGlobal","getPhoneNumber","deleteAllNotification","useDeleteNotificationMutation","data","refetch","isLoading","error","useNavigate","useGetNotificationQuery","useEffect","viewed","JSON","parse","localStorage","getItem","handleCloseModal","fluid","Row","Col","length","_Fragment","Button","variant","onClick","deleteHandleShow","MdDelete","size","xs","NoDataFound","map","notification","cursor","orderDetails","_notification$orderDe","details","email","includes","_id","updatedViewedNotifications","setItem","stringify","handleShowModal","concat","title","subtitle","datetime","createdAt","Date","toLocaleDateString","undefined","year","month","day","date","format","Modal","show","onHide","centered","dialogClassName","Header","closeButton","Title","Body","detail","index","Object","entries","_ref","key","value","Form","Group","Label","Control","type","readOnly","disabled","Footer","backgroundColor","DeleteModel","YES","async","response","_response$error","_response$error$data","toast","success","message","autoClose","console","DELETESTATE","ONCLICK","deleteHandleClose","DESCRIPTION","DELETETITLE"],"sourceRoot":""}