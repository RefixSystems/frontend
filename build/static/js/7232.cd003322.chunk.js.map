{"version":3,"file":"static/js/7232.cd003322.chunk.js","mappings":"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","sources":["components/FetchLoader.js","components/TablePaginationComponent.js","pages/Admin/CustomLaptopRequests/CustomLaptopRequests.js"],"sourcesContent":["import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { RotatingLines } from 'react-loader-spinner'; \nimport loader from '../assests/images/loader.gif';\n\nconst FetchLoader = () => {\n  return (\n    <Container className=\"vh-100 d-flex flex-column justify-content-center align-items-center\">\n      {/* Add your GIF image below */}\n      <img \n        src={loader} \n        alt=\"Loading...\" \n        style={{ width: '150px', height: '150px' }} \n      />\n      {/* Optional: Use a text loader if needed */}\n      <div className=\"text mt-3\">Loading ...</div>\n    </Container>\n  );\n};\n\nexport default FetchLoader;\n","import React, { useMemo } from 'react';\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from 'react-table';\nimport { Button, Col, Container, Row, Table } from 'react-bootstrap';\nimport { BiLeftArrow, BiRightArrow } from 'react-icons/bi';\nimport { FaSort } from 'react-icons/fa';\nimport { AiFillLeftCircle, AiFillRightCircle } from 'react-icons/ai';\nimport ReactPaginate from 'react-paginate';\nimport { IconContext } from 'react-icons/lib';\nimport './FilterComponent.css';\nimport { useTheme } from '../Contexts/ThemeContext';\n\nconst BasicTable = (props) => {\n  const { color } = useTheme();\n  const columns = useMemo(() => props.COLUMNS, [props.COLUMNS]);\n  const data = useMemo(() => props.MOCK_DATA || [], [props.MOCK_DATA]);\n  const { getTableProps, getTableBodyProps, headerGroups, prepareRow, page } =\n    useTable(\n      {\n        columns,\n        data,\n        autoResetWidth: false,\n      },\n      useGlobalFilter,\n      useSortBy,\n      usePagination\n    );\n\n  return (\n    <div>\n      <Container fluid className=\"ml-xxl-n4 ml-xl-n4 ml-lg-n4\">\n        <Row>\n          <Table\n            className=\"justify-content-center align-items-center\"\n            striped\n            hover\n            {...getTableProps()}\n            responsive={true}\n            style={{ width: '100%', marginLeft: '25px' }}\n          >\n            <thead>\n              {headerGroups.map((headerGroup, index) => (\n                <tr {...headerGroup.getHeaderGroupProps()} key={index}>\n                  {headerGroup.headers.map((column, index) => (\n                    <th\n                      {...column.getHeaderProps()}\n                      key={index}\n                      className=\"text-center text-dark\"\n                      style={{\n                        width: `${column.width}px`,\n                        whiteSpace: 'nowrap',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                      }}\n                      onClick={(e) => {\n                        // Check if the click was not on the sort icon and if the column is not \"ACTIONS\"\n                        if (\n                          !e.target.classList.contains('fa-sort') &&\n                          column.render('Header') !== 'ACTIONS'\n                        ) {\n                          // Change sorting on a single tap\n                          column.toggleSortBy(!column.isSortedDesc);\n                        }\n                      }}\n                    >\n                      {column.render('Header') === 'ACTIONS' ? (\n                        <>{column.render('Header')}</>\n                      ) : (\n                        <div>\n                          {column.render('Header')}\n                          <FaSort className=\"mx-2\" />\n                        </div>\n                      )}\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {page.length > 0 ? (\n                page.map((row, index) => {\n                  prepareRow(row);\n                  return (\n                    <tr {...row.getRowProps()} key={index}>\n                      {row.cells.map((cell, cellIndex) => {\n                        const isActionColumn =\n                          cell.column.id === 'action' ||\n                          cell.column.id === 'localShop' ||\n                          cell.column.id === 'serviceCenter' ||\n                          cell.column.id === 'ourServices' ||\n                          cell.column.id === 'addInCarousel';\n                        return (\n                          <td\n                            {...cell.getCellProps()}\n                            key={cellIndex}\n                            className=\"text-secondary text-start\"\n                            style={{\n                              textOverflow: 'ellipsis',\n                              overflow: 'hidden',\n                              whiteSpace: 'nowrap',\n                              maxWidth: '20ch',\n                              backgroundColor: index <= props.count-1 ?\"#cfd1d1\":\"\",\n                            }}\n                          >\n                            {isActionColumn\n                              ? cell.render('Cell')\n                              : cell.value\n                                ? cell.render('Cell')\n                                : '-'}\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td\n                    colSpan={columns.length}\n                    className=\"text-center text-dark\"\n                  >\n                    No Data Found\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n          <Col\n            className={`${\n              page.length > 0 ? 'd-flex' : 'd-none'\n            } flex-row justify-content-center align-items-center`}\n          >\n            <Col className=\"d-flex justify-content-start align-items-center flex-wrap\">\n              <span className=\"m-1\">\n                Showing{''}\n                <strong className=\"m-2\">\n                  {props.startIndex} to {props.endIndex} of{' '}\n                  <strong className=\"m-2\"> {props.totalItems} entries</strong>\n                </strong>\n              </span>\n            </Col>\n            <Col className=\" mt-3 d-none d-sm-none d-md-none d-xxl-flex d-xl-flex d-lg-flex justify-content-end align-items-center\">\n              <ReactPaginate\n                breakLabel=\"...\"\n                onPageChange={(selectedPage) =>\n                  props.setCurrentPage(selectedPage.selected + 1)\n                }\n                pageRangeDisplayed={5}\n                pageCount={props.totalPages}\n                renderOnZeroPageCount={null}\n                activeClassName={'active'}\n                pageClassName={'page-item'}\n                pageLinkClassName=\"page-link\"\n                previousClassName=\"page-item\"\n                previousLinkClassName=\"page-link\"\n                nextClassName=\"page-item\"\n                nextLinkClassName=\"page-link\"\n                containerClassName=\"pagination\"\n                previousLabel={\n                  <IconContext.Provider value={{ color: color, size: '28px' }}>\n                    <AiFillLeftCircle />\n                  </IconContext.Provider>\n                }\n                nextLabel={\n                  <IconContext.Provider value={{ color: color, size: '28px' }}>\n                    <AiFillRightCircle />\n                  </IconContext.Provider>\n                }\n              />\n            </Col>\n            <Col className=\"d-flex d-sm-flex d-md-flex d-xxl-none d-xl-none d-lg-none justify-content-end align-items-center\">\n              <Button\n                style={{ backgroundColor: color, border: 'none' }}\n                onClick={() => props.setCurrentPage(props.currentPage - 1)}\n                disabled={props.currentPage === 1}\n                className=\"m-2\"\n              >\n                <BiLeftArrow size={14} />\n              </Button>\n              <Button\n                style={{ backgroundColor: color, border: 'none' }}\n                onClick={() => {\n                  props.setCurrentPage(props.currentPage + 1);\n                }}\n                disabled={props.currentPage === props.totalPages}\n              >\n                <BiRightArrow size={14} />\n              </Button>\n            </Col>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\nexport default BasicTable;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Modal,\n  Form,\n  Spinner,\n} from 'react-bootstrap';\nimport BasicTable from '../../../components/TablePaginationComponent';\nimport { BsSearch, BsX } from 'react-icons/bs';\nimport { toast } from 'react-toastify';\nimport { FaEdit } from 'react-icons/fa';\nimport DeleteModel from '../../../components/DeleteModel';\nimport { MdDelete } from 'react-icons/md';\nimport {\n  useDeleteCustomLaptopRequestsMutation,\n  useEditCustomLaptopRequestsMutation,\n  useGetCustomLaptopRequestsQuery,\n} from '../../../redux/api/CustomLaptopRequestsApi';\nimport { getRole } from '../../../Constants/Global';\nimport FetchLoader from '../../../components/FetchLoader';\nimport NoAccess from '../../../components/NoAccess';\nimport { useTheme } from '../../../Contexts/ThemeContext';\nimport { format } from 'date-fns';\n\nconst CustomLaptopRequests = () => {\n  const { color } = useTheme();\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [startIndex, setStartIndex] = useState(1);\n  const [endIndex, setEndIndex] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalItems, setTotalItems] = useState(0);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchInput, setSearchInput] = useState('');\n  const [isSearching, setIsSearching] = useState(false);\n  const [editId, setEditId] = useState(null);\n  const [editShow, setEditShow] = useState(false);\n  const [deleteShow, setDeleteShow] = useState(false);\n  const [idToDelete, setIdToDelete] = useState('');\n  const [status, setstatus] = useState('');\n  const [note, setNote] = useState('');\n\n  const [read, setRead] = useState(false);\n  const [fullAccess, setFullAccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const role = getRole();\n\n  const {\n    data: CustomLaptopRequestsData,\n    refetch,\n    isLoading,\n  } = useGetCustomLaptopRequestsQuery({\n    page: currentPage,\n    search: searchTerm,\n    role: role,\n  });\n  const [editCustomLaptopRequestsData] = useEditCustomLaptopRequestsMutation();\n  const [deleteCustomLaptopRequests] = useDeleteCustomLaptopRequestsMutation();\n  const formatDateTime = (date) => format(new Date(date), 'dd-MMM-yyyy h:mm a');\n  useEffect(() => {\n    if (CustomLaptopRequestsData && CustomLaptopRequestsData.data) {\n      setData(CustomLaptopRequestsData.data);\n      setStartIndex(CustomLaptopRequestsData.pagination.startIndex);\n      setCurrentPage(currentPage);\n      setTotalItems(CustomLaptopRequestsData.pagination.totalItems);\n      setEndIndex(CustomLaptopRequestsData.pagination.endIndex);\n      setTotalPages(CustomLaptopRequestsData.pagination.totalPages);\n      setFullAccess(CustomLaptopRequestsData.moduleAccess.fullAccess);\n      setRead(CustomLaptopRequestsData.moduleAccess.read);\n    }\n  }, [CustomLaptopRequestsData, currentPage, role]);\n\n  const handleClear = () => {\n    setSearchInput('');\n    setSearchTerm('');\n  };\n\n  const handleSearch = () => {\n    setIsSearching(true);\n    setSearchTerm(searchInput);\n    refetch({ page: currentPage, search: searchInput }).then(() => {\n      setIsSearching(false);\n    });\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  const handleEditShow = (id) => {\n    const editCustomLaptop = data.find((d) => d._id === id);\n\n    if (editCustomLaptop) {\n      setEditId(id);\n      setstatus(editCustomLaptop.status);\n      setNote(editCustomLaptop.note);\n      setEditShow(true);\n    }\n  };\n\n  const handleEditClose = () => {\n    setEditShow(false);\n    setEditId(null);\n    setstatus('');\n    // seteditCustomLaptop('');\n  };\n\n  const deleteHandleShow = (id) => {\n    setIdToDelete(id);\n    setDeleteShow(true);\n  };\n\n  const deleteHandleClose = () => {\n    setDeleteShow(false);\n  };\n\n  const handleNoteChange = (e) => {\n    setNote(e.target.value);\n  };\n\n  const handlestatusChange = (e) => {\n    setstatus(e.target.value);\n  };\n\n  const handleDeleteCustomLaptopRequests = async () => {\n    try {\n      const response = await deleteCustomLaptopRequests({\n        id: idToDelete,\n        role: role,\n      });\n      setDeleteShow(false);\n      setIdToDelete('');\n      if (response?.data) {\n        toast.success(response?.data?.message, { autoClose: 1000 });\n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleEditData = async () => {\n    if (!status || !note) {\n      toast.error('Please fill all the fields', { autoClose: 1000 });\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const data = {\n        status: status,\n        note: note,\n      };\n\n      const response = await editCustomLaptopRequestsData({\n        id: editId,\n        role: role,\n        data: data,\n      });\n\n      if (response.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        setEditShow(false);\n        refetch();\n      } else {\n        toast.error(response.error.data.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const COLUMNS = [\n    {\n      Header: 'ID',\n      accessor: 's_no',\n    },\n    {\n      Header: 'User Name',\n      accessor: 'userName',\n    },\n    {\n      Header: 'Phone Number',\n      accessor: 'phoneNumber',\n    },\n    {\n      Header: 'Email',\n      accessor: 'email',\n    },\n    {\n      Header: 'Processor ',\n      accessor: 'processor',\n    },\n    {\n      Header: 'Operating System',\n      accessor: 'operatingSystem',\n    },\n    {\n      Header: 'Ram',\n      accessor: 'ram',\n    },\n    {\n      Header: 'Screen Size',\n      accessor: 'screenSize',\n    },\n    {\n      Header: 'Quantity',\n      accessor: 'quantity',\n    },\n    {\n      Header: 'Type',\n      accessor: 'type',\n    },\n    {\n      Header: 'Message',\n      accessor: 'message',\n    },\n \n    {\n      Header: 'Note',\n      accessor: 'note',\n    },\n    {\n      Header: 'Status',\n      accessor: 'status',\n    },\n    {\n      Header: 'Created At',\n      accessor: 'createdAt',\n      Cell: ({ value }) => formatDateTime(value),\n    },\n    {\n      Header: 'Updated At',\n      accessor: 'updatedAt',\n      Cell: ({ value }) => formatDateTime(value),\n    },\n  ];\n\n  if (fullAccess) {\n    COLUMNS.push({\n      Header: 'ACTIONS',\n      accessor: 'action',\n      Cell: (props) => {\n        const rowIdx = props.row.original._id;\n        return (\n          <div className=\"d-flex align-items-center justify-content-center flex-row\">\n            <Button variant=\"warning\" onClick={() => handleEditShow(rowIdx)}>\n              <FaEdit />\n            </Button>\n            <Button\n              variant=\"danger\"\n              className=\"ms-2\"\n              onClick={() => deleteHandleShow(rowIdx)}\n            >\n              <MdDelete />\n            </Button>\n          </div>\n        );\n      },\n    });\n  }\n\n  return (\n    <div>\n      {isLoading ? (\n        <FetchLoader />\n      ) : (\n        <>\n          {read ? (\n            <Container fluid className=\"mt-3 \">\n              <Row className=\"boxShadow p-4 mb-4 mt-4\">\n                <Col className=\"d-flex flex-row justify-content-between mt-1\">\n                  <h4 className=\"fw-bold\">Custom Laptop Requests</h4>\n                </Col>\n              </Row>\n              <Row className=\"boxShadow p-3 mb-4 d-flex flex-lg-row flex-column flex-xxl-row flex-xl-row flex-sm-column flex-md-row\">\n                <Col className=\"my-4 mx-2\" xxl={3} xl={3} lg={3} sm={6} md={6}>\n                  <div className=\"input-group\">\n                    <span className=\"input-group-text\">\n                      <BsSearch />\n                    </span>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Search Custom Laptop Requests...\"\n                      className=\"form-control\"\n                      value={searchInput}\n                      onChange={(e) => setSearchInput(e.target.value)}\n                      onKeyPress={handleKeyPress}\n                    />\n                    {searchInput && (\n                      <span className=\"input-group-text\" onClick={handleClear}>\n                        <BsX />\n                      </span>\n                    )}\n                  </div>\n                </Col>\n                <Col\n                  className=\"d-flex flex-column text-center my-4\"\n                  xxl={2}\n                  xl={2}\n                  lg={2}\n                  sm={3}\n                  md={3}\n                >\n                  <Button\n                    style={{ backgroundColor: color, border: 'none' }}\n                    onClick={handleSearch}\n                    disabled={isSearching || searchInput === ''}\n                  >\n                    {isSearching ? (\n                      <>\n                        <Spinner\n                          as=\"span\"\n                          animation=\"border\"\n                          size=\"sm\"\n                          role=\"status\"\n                          aria-hidden=\"true\"\n                          className=\"me-2\"\n                        />\n                        Searching...\n                      </>\n                    ) : (\n                      'Search'\n                    )}\n                  </Button>\n                </Col>\n              </Row>\n              <Row className=\"boxShadow p-4 mb-4\">\n                <BasicTable\n                  COLUMNS={COLUMNS}\n                  MOCK_DATA={data}\n                  currentPage={currentPage}\n                  startIndex={startIndex}\n                  endIndex={endIndex}\n                  setCurrentPage={setCurrentPage}\n                  totalItems={totalItems}\n                  totalPages={totalPages}\n                />\n              </Row>\n\n              <DeleteModel\n                YES={handleDeleteCustomLaptopRequests}\n                DELETESTATE={deleteShow}\n                ONCLICK={deleteHandleClose}\n                DESCRIPTION=\"Are you sure want to delete this CustomLaptopRequests\"\n                DELETETITLE=\"Custom Laptop Requests\"\n              />\n            </Container>\n          ) : (\n            <NoAccess />\n          )}\n        </>\n      )}\n\n      <Modal show={editShow} onHide={handleEditClose} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Request</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"deviceNameInput\">\n              <Form.Label>\n                Note <span className=\"text-danger\">*</span>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={note}\n                onChange={handleNoteChange}\n                placeholder=\"Enter the Note here\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"statusDropdown\" className=\"mt-3\">\n              <Form.Label>Status:</Form.Label>\n              <Form.Select\n                value={status}\n                placeholder=\"Enter the status here\"\n                onChange={handlestatusChange}\n              >\n                <option value=\"\" disabled selected>\n                  Select an option\n                </option>\n                <option value=\"Pending\">Pending</option>\n                <option value=\"Cancelled\">Cancelled</option>\n                <option value=\"Confirmed\">Confirmed</option>\n              </Form.Select>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleEditClose}>\n            Cancel\n          </Button>\n          <Button\n            style={{ backgroundColor: color, border: 'none' }}\n            onClick={handleEditData}\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  className=\"me-2\"\n                />\n                Updating...\n              </>\n            ) : (\n              'Update'\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default CustomLaptopRequests;\n"],"names":["FetchLoader","_jsxs","Container","className","children","_jsx","src","loader","alt","style","width","height","props","color","useTheme","columns","useMemo","COLUMNS","data","MOCK_DATA","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","useTable","autoResetWidth","useGlobalFilter","useSortBy","usePagination","fluid","Row","Table","striped","hover","responsive","marginLeft","map","headerGroup","index","_createElement","getHeaderGroupProps","key","headers","column","getHeaderProps","concat","whiteSpace","justifyContent","alignItems","onClick","e","target","classList","contains","render","toggleSortBy","isSortedDesc","_Fragment","FaSort","length","row","getRowProps","cells","cell","cellIndex","isActionColumn","id","getCellProps","textOverflow","overflow","maxWidth","backgroundColor","count","value","colSpan","Col","startIndex","endIndex","totalItems","ReactPaginate","breakLabel","onPageChange","selectedPage","setCurrentPage","selected","pageRangeDisplayed","pageCount","totalPages","renderOnZeroPageCount","activeClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","containerClassName","previousLabel","IconContext","Provider","size","AiFillLeftCircle","nextLabel","AiFillRightCircle","Button","border","currentPage","disabled","BiLeftArrow","BiRightArrow","CustomLaptopRequests","setData","useState","setStartIndex","setEndIndex","setTotalPages","setTotalItems","searchTerm","setSearchTerm","searchInput","setSearchInput","isSearching","setIsSearching","editId","setEditId","editShow","setEditShow","deleteShow","setDeleteShow","idToDelete","setIdToDelete","status","setstatus","note","setNote","read","setRead","fullAccess","setFullAccess","loading","setLoading","role","getRole","CustomLaptopRequestsData","refetch","isLoading","useGetCustomLaptopRequestsQuery","search","editCustomLaptopRequestsData","useEditCustomLaptopRequestsMutation","deleteCustomLaptopRequests","useDeleteCustomLaptopRequestsMutation","formatDateTime","date","format","Date","useEffect","pagination","moduleAccess","handleSearch","then","handleEditClose","Header","accessor","Cell","_ref","_ref2","push","rowIdx","original","_id","variant","editCustomLaptop","find","d","handleEditShow","FaEdit","MdDelete","xxl","xl","lg","sm","md","BsSearch","type","placeholder","onChange","onKeyPress","handleClear","BsX","Spinner","as","animation","BasicTable","DeleteModel","YES","async","response","_response$data","_response$error","toast","success","message","autoClose","error","console","DELETESTATE","ONCLICK","deleteHandleClose","DESCRIPTION","DELETETITLE","NoAccess","Modal","show","onHide","centered","closeButton","Title","Body","Form","Group","controlId","Label","Control","Select","Footer"],"sourceRoot":""}