{"version":3,"file":"static/js/2310.12bb7a75.chunk.js","mappings":"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","sources":["components/DragAndDropImageUpload.js","components/InputImage.js","components/TablePaginationComponent.js","pages/Admin/Categories/Categories.js"],"sourcesContent":["import React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Form } from 'react-bootstrap';\nimport { FiUploadCloud } from 'react-icons/fi';\nimport { useTheme } from '../Contexts/ThemeContext';\nimport { toast } from 'react-toastify';\n\nconst DragAndDropImageUpload = ({\n  setFieldValue = () => {},\n  touched = {},\n  errors = {},\n  labelText = 'Upload Image',\n  nameText = 'image',\n  accepts = { 'image/*': ['.png', '.jpeg', '.jpg', '.svg', '.webp', '.gif'] },\n  handleFileChange = null,\n  disabled = false,\n}) => {\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept: accepts || '',\n    onDrop: (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      const fileExtension = file.name.split('.').pop().toLowerCase();\n      const acceptedExtensions = accepts['image/*'].map((ext) =>\n        ext.replace('.', '').toLowerCase().trim()\n      );\n      if (acceptedExtensions.includes(fileExtension)) {\n        setFieldValue(nameText, file);\n        if (handleFileChange) {\n          handleFileChange(file);\n        }\n      } else {\n        toast.warning(`This file type not accepted`, {\n          autoClose: 2000,\n          position: 'bottom-center',\n        });\n      }\n    },\n\n    onDropRejected: (rejectedFiles) => {\n      toast.warning(`This file type not accepted`, {\n        autoClose: 2000,\n        position: 'bottom-center',\n      });\n    },\n    disabled: disabled,\n  });\n  const { color } = useTheme();\n\n  return (\n    <>\n      <Form.Group>\n        <Form.Label>\n          {labelText} <span className=\"text-danger\"></span>\n        </Form.Label>\n        <div\n          {...getRootProps()}\n          className={`form-control dropzone ${isDragActive ? 'active' : ''} ${\n            touched[nameText] && errors[nameText] ? 'is-invalid' : ''\n          }`}\n          style={{\n            border: '2px dashed #ced4da',\n            padding: '20px',\n            textAlign: 'center',\n            borderRadius: '5px',\n            cursor: disabled ? 'not-allowed' : 'pointer',\n            background: isDragActive ? '#f8f9fa' : 'transparent',\n          }}\n        >\n          <input {...getInputProps()} disabled={disabled} />\n          {isDragActive ? (\n            <p>Drop the files here...</p>\n          ) : (\n            <>\n              <FiUploadCloud size={50} color={color} />\n              <p>Drag & drop an image here, or click to select one</p>\n            </>\n          )}\n        </div>\n        {touched[nameText] && errors[nameText] && (\n          <p className=\"text-danger\">{errors[nameText]}</p>\n        )}\n      </Form.Group>\n    </>\n  );\n};\n\nexport default DragAndDropImageUpload;\n","import React from 'react';\n\nconst InputImage = ({ image, valueImage }) => {\n  const isValidImage =\n    image && (Array.isArray(image) ? image.length > 0 : true);\n\n  const imageSrc =\n    valueImage !== image\n      ? image\n      : image instanceof File\n        ? URL.createObjectURL(image)\n        : image;\n\n  return (\n    <>\n      {isValidImage ? (\n        <img\n          src={imageSrc}\n          width={100}\n          height={70}\n          alt=\"image\"\n          className=\"mt-3\"\n          style={{ objectFit: 'contain' }}\n        />\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default InputImage;\n","import React, { useMemo } from 'react';\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from 'react-table';\nimport { Button, Col, Container, Row, Table } from 'react-bootstrap';\nimport { BiLeftArrow, BiRightArrow } from 'react-icons/bi';\nimport { FaSort } from 'react-icons/fa';\nimport { AiFillLeftCircle, AiFillRightCircle } from 'react-icons/ai';\nimport ReactPaginate from 'react-paginate';\nimport { IconContext } from 'react-icons/lib';\nimport './FilterComponent.css';\nimport { useTheme } from '../Contexts/ThemeContext';\n\nconst BasicTable = (props) => {\n  const { color } = useTheme();\n  const columns = useMemo(() => props.COLUMNS, [props.COLUMNS]);\n  const data = useMemo(() => props.MOCK_DATA || [], [props.MOCK_DATA]);\n  const { getTableProps, getTableBodyProps, headerGroups, prepareRow, page } =\n    useTable(\n      {\n        columns,\n        data,\n        autoResetWidth: false,\n      },\n      useGlobalFilter,\n      useSortBy,\n      usePagination\n    );\n\n  return (\n    <div>\n      <Container fluid className=\"ml-xxl-n4 ml-xl-n4 ml-lg-n4\">\n        <Row>\n          <Table\n            className=\"justify-content-center align-items-center\"\n            striped\n            hover\n            {...getTableProps()}\n            responsive={true}\n            style={{ width: '100%', marginLeft: '25px' }}\n          >\n            <thead>\n              {headerGroups.map((headerGroup, index) => (\n                <tr {...headerGroup.getHeaderGroupProps()} key={index}>\n                  {headerGroup.headers.map((column, index) => (\n                    <th\n                      {...column.getHeaderProps()}\n                      key={index}\n                      className=\"text-center text-dark\"\n                      style={{\n                        width: `${column.width}px`,\n                        whiteSpace: 'nowrap',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                      }}\n                      onClick={(e) => {\n                        // Check if the click was not on the sort icon and if the column is not \"ACTIONS\"\n                        if (\n                          !e.target.classList.contains('fa-sort') &&\n                          column.render('Header') !== 'ACTIONS'\n                        ) {\n                          // Change sorting on a single tap\n                          column.toggleSortBy(!column.isSortedDesc);\n                        }\n                      }}\n                    >\n                      {column.render('Header') === 'ACTIONS' ? (\n                        <>{column.render('Header')}</>\n                      ) : (\n                        <div>\n                          {column.render('Header')}\n                          <FaSort className=\"mx-2\" />\n                        </div>\n                      )}\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {page.length > 0 ? (\n                page.map((row, index) => {\n                  prepareRow(row);\n                  return (\n                    <tr {...row.getRowProps()} key={index}>\n                      {row.cells.map((cell, cellIndex) => {\n                        const isActionColumn =\n                          cell.column.id === 'action' ||\n                          cell.column.id === 'localShop' ||\n                          cell.column.id === 'serviceCenter' ||\n                          cell.column.id === 'ourServices' ||\n                          cell.column.id === 'addInCarousel';\n                        return (\n                          <td\n                            {...cell.getCellProps()}\n                            key={cellIndex}\n                            className=\"text-secondary text-start\"\n                            style={{\n                              textOverflow: 'ellipsis',\n                              overflow: 'hidden',\n                              whiteSpace: 'nowrap',\n                              maxWidth: '20ch',\n                              backgroundColor: index <= props.count-1 ?\"#cfd1d1\":\"\",\n                            }}\n                          >\n                            {isActionColumn\n                              ? cell.render('Cell')\n                              : cell.value\n                                ? cell.render('Cell')\n                                : '-'}\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td\n                    colSpan={columns.length}\n                    className=\"text-center text-dark\"\n                  >\n                    No Data Found\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n          <Col\n            className={`${\n              page.length > 0 ? 'd-flex' : 'd-none'\n            } flex-row justify-content-center align-items-center`}\n          >\n            <Col className=\"d-flex justify-content-start align-items-center flex-wrap\">\n              <span className=\"m-1\">\n                Showing{''}\n                <strong className=\"m-2\">\n                  {props.startIndex} to {props.endIndex} of{' '}\n                  <strong className=\"m-2\"> {props.totalItems} entries</strong>\n                </strong>\n              </span>\n            </Col>\n            <Col className=\" mt-3 d-none d-sm-none d-md-none d-xxl-flex d-xl-flex d-lg-flex justify-content-end align-items-center\">\n              <ReactPaginate\n                breakLabel=\"...\"\n                onPageChange={(selectedPage) =>\n                  props.setCurrentPage(selectedPage.selected + 1)\n                }\n                pageRangeDisplayed={5}\n                pageCount={props.totalPages}\n                renderOnZeroPageCount={null}\n                activeClassName={'active'}\n                pageClassName={'page-item'}\n                pageLinkClassName=\"page-link\"\n                previousClassName=\"page-item\"\n                previousLinkClassName=\"page-link\"\n                nextClassName=\"page-item\"\n                nextLinkClassName=\"page-link\"\n                containerClassName=\"pagination\"\n                previousLabel={\n                  <IconContext.Provider value={{ color: color, size: '28px' }}>\n                    <AiFillLeftCircle />\n                  </IconContext.Provider>\n                }\n                nextLabel={\n                  <IconContext.Provider value={{ color: color, size: '28px' }}>\n                    <AiFillRightCircle />\n                  </IconContext.Provider>\n                }\n              />\n            </Col>\n            <Col className=\"d-flex d-sm-flex d-md-flex d-xxl-none d-xl-none d-lg-none justify-content-end align-items-center\">\n              <Button\n                style={{ backgroundColor: color, border: 'none' }}\n                onClick={() => props.setCurrentPage(props.currentPage - 1)}\n                disabled={props.currentPage === 1}\n                className=\"m-2\"\n              >\n                <BiLeftArrow size={14} />\n              </Button>\n              <Button\n                style={{ backgroundColor: color, border: 'none' }}\n                onClick={() => {\n                  props.setCurrentPage(props.currentPage + 1);\n                }}\n                disabled={props.currentPage === props.totalPages}\n              >\n                <BiRightArrow size={14} />\n              </Button>\n            </Col>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\nexport default BasicTable;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Modal,\n  Form,\n  Spinner,\n} from 'react-bootstrap';\nimport BasicTable from '../../../components/TablePaginationComponent';\nimport {\n  useDeleteCategoriesMutation,\n  useEditCategoriesMutation,\n  useGetCategoriesQuery,\n  useAddCategoriesMutation,\n} from '../../../redux/api/CategoriesApi';\nimport { BsSearch, BsX } from 'react-icons/bs';\nimport { HiUserCircle } from 'react-icons/hi';\nimport { toast } from 'react-toastify';\nimport { FaEdit, FaPlus } from 'react-icons/fa';\nimport DeleteModel from '../../../components/DeleteModel';\nimport { MdDelete } from 'react-icons/md';\nimport { useParams } from 'react-router-dom';\nimport { getRole } from '../../../Constants/Global';\nimport NoAccess from '../../../components/NoAccess';\nimport FetchLoader from '../../../components/FetchLoader';\nimport { useTheme } from '../../../Contexts/ThemeContext';\nimport { format } from 'date-fns';\nimport InputImage from '../../../components/InputImage';\nimport DragAndDropImageUpload from '../../../components/DragAndDropImageUpload';\nimport ServerError from '../../../components/ServerError';\nconst Categories = () => {\n  const { color } = useTheme();\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [startIndex, setStartIndex] = useState(1);\n  const [endIndex, setEndIndex] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalItems, setTotalItems] = useState(0);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchInput, setSearchInput] = useState('');\n  const [isSearching, setIsSearching] = useState(false);\n  const { id } = useParams();\n  const [editId, setEditId] = useState(null);\n  const [editShow, setEditShow] = useState(false);\n  const [categories, setcategories] = useState('');\n  const [file, setFile] = useState(null);\n  const [deleteShow, setDeleteShow] = useState(false);\n  const [idToDelete, setIdToDelete] = useState('');\n  const [addShow, setAddShow] = useState(false);\n  const [newcategories, setNewcategories] = useState('');\n  const [status, setstatus] = useState('');\n  const [newFile, setNewFile] = useState(null);\n  const [write, setWrite] = useState(false);\n  const [read, setRead] = useState(false);\n  const [fullAccess, setFullAccess] = useState(false);\n  const [toggle, setToggle] = useState('');\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\n  const [selectedRowId, setSelectedRowId] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [hasServerError, setHasServerError] = useState(false);\n  const role = getRole();\n  const formatDateTime = (date) => format(new Date(date), 'dd-MMM-yyyy h:mm a');\n  const {\n    data: CategoriesData,\n    refetch,\n    isLoading,\n    isError, \n    error,\n  } = useGetCategoriesQuery({\n    page: currentPage,\n    search: searchTerm,\n    id: id,\n    role: role,\n  });\n  const [editCategoriesData] = useEditCategoriesMutation();\n  const [deleteCategories] = useDeleteCategoriesMutation();\n  const [addCategories] = useAddCategoriesMutation();\n\n  useEffect(() => {\n    if (CategoriesData && CategoriesData.data) {\n      setData(CategoriesData.data);\n      setStartIndex(CategoriesData.pagination.startIndex);\n      setCurrentPage(currentPage);\n      setTotalItems(CategoriesData.pagination.totalItems);\n      setEndIndex(CategoriesData.pagination.endIndex);\n      setTotalPages(CategoriesData.pagination.totalPages);\n      setFullAccess(CategoriesData.moduleAccess.fullAccess);\n      setWrite(CategoriesData.moduleAccess.write);\n      setRead(CategoriesData.moduleAccess.read);\n    }\n    if (isError && error?.status === 500) {\n      setHasServerError(true);\n    } else {\n      setHasServerError(false);\n    }\n  }, [CategoriesData, currentPage, role,error,isError]);\n\n  const handleCheckboxClick = (rowIdx, check) => {\n    setSelectedRowId(rowIdx);\n    setShowConfirmationModal(true);\n    setToggle(check);\n  };\n\n  const handleClear = () => {\n    setSearchInput('');\n    setSearchTerm('');\n  };\n\n  const handleSearch = () => {\n    setIsSearching(true);\n    setSearchTerm(searchInput);\n    refetch({ page: currentPage, search: searchInput }).then(() => {\n      setIsSearching(false);\n    });\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  const handleEditShow = (id) => {\n    const categories = data.find((d) => d._id === id);\n\n    if (categories) {\n      setEditId(id);\n      setcategories(categories.category);\n      setstatus(categories.status);\n      setNewFile(categories.image);\n      setEditShow(true);\n    }\n  };\n\n  const handleEditClose = () => {\n    setEditShow(false);\n    setEditId(null);\n    setcategories('');\n    setFile(null);\n    setstatus('');\n  };\n\n  const deleteHandleShow = (id) => {\n    setIdToDelete(id);\n    setDeleteShow(true);\n  };\n\n  const deleteHandleClose = () => {\n    setDeleteShow(false);\n  };\n\n  const handlestatusChange = (e) => {\n    setstatus(e.target.value);\n  };\n\n  const handleEditcategoriesChange = (e) => {\n    setcategories(e.target.value);\n  };\n\n  const handleFileChange = (file) => {\n    setFile(file);\n  };\n\n  const handleAddcategoriesChange = (e) => {\n    setNewcategories(e.target.value);\n  };\n\n  const handleNewFileChange = (file) => {\n    setNewFile(file);\n  };\n\n  const handleDeleteCategories = async () => {\n    try {\n      const response = await deleteCategories({ id: idToDelete, role: role });\n      setDeleteShow(false);\n      setIdToDelete('');\n      if (response?.data) {\n        toast.success(response?.data?.message, { autoClose: 1000 });\n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleEditData = async () => {\n    if (!categories || !newFile || !status) {\n      toast.error('Please fill all the fields', { autoClose: 1000 });\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('category', categories);\n      formData.append('image', newFile);\n      formData.append('status', status);\n\n      const response = await editCategoriesData({\n        id: editId,\n        role: role,\n        data: formData,\n      });\n\n      if (response.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        setEditShow(false);\n        refetch();\n        setcategories('');\n        setNewFile('');\n        setstatus('');\n      } else {\n        toast.error(response.error.data.error, { autoClose: 1000 });\n       }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleConfirmToggle = async () => {\n    setLoading(true);\n\n    const toggledValue = toggle === 'yes' ? 'no' : 'yes';\n    try {\n      const data = {\n        showInHomePage: toggledValue,\n      };\n\n      const response = await editCategoriesData({\n        id: selectedRowId,\n        role: role,\n        data: data,\n      });\n\n      if (response.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        setShowConfirmationModal(false);\n        refetch();\n      } else {\n        toast.error(response.error.data.error, { autoClose: 1000 });\n        setShowConfirmationModal(false);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddShow = () => {\n    setAddShow(true);\n  };\n\n  const handleAddClose = () => {\n    setAddShow(false);\n    setcategories('');\n    setNewFile(null);\n    setstatus('');\n  };\n\n  const handleAddData = async () => {\n    if (!newcategories || !file) {\n      toast.error('Please fill all the fields', { autoClose: 1000 });\n      return;\n    }\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('category', newcategories);\n      formData.append('image', file);\n\n      const response = await addCategories({\n        role: role,\n        data: formData,\n      });\n\n      if (response.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        setAddShow(false);\n        refetch();\n        setcategories('');\n        setFile('');\n      } else {\n        toast.error(response.error.data.error, { autoClose: 1000 });\n        setcategories('');\n        setFile('');\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const COLUMNS = [\n    {\n      Header: 'ID',\n      accessor: 's_no',\n    },\n    {\n      Header: 'Image',\n      accessor: 'image',\n      Cell: (props) => {\n        const imageUrl = props.value;\n        return imageUrl ? (\n          <img\n            src={imageUrl}\n            alt=\"Profile\"\n            style={{\n              width: '50px',\n              height: '50px',\n              borderRadius: '100%',\n            }}\n          />\n        ) : (\n          <HiUserCircle size={50} />\n        );\n      },\n    },\n    {\n      Header: 'Category',\n      accessor: 'category',\n    },\n    {\n      Header: 'Status',\n      accessor: 'status',\n    },\n    {\n      Header: 'Created At',\n      accessor: 'createdAt',\n      Cell: ({ value }) => formatDateTime(value),\n    },\n    {\n      Header: 'Updated At',\n      accessor: 'updatedAt',\n      Cell: ({ value }) => formatDateTime(value),\n    },\n  ];\n\n  if (fullAccess) {\n    COLUMNS.push({\n      Header: 'ACTIONS',\n      accessor: 'showInHomePage',\n      Cell: (props) => {\n        const rowIdx = props.row.original._id;\n        const showInHomePage = props.row.original.showInHomePage;\n        const isToggled = showInHomePage === 'yes';\n\n        return (\n          <div className=\"d-flex align-items-center justify-content-center flex-row\">\n            <Button\n              variant={isToggled ? 'success' : 'secondary'}\n              onClick={() => handleCheckboxClick(rowIdx, showInHomePage)}\n              className=\"ms-2\"\n            >\n              {isToggled ? 'ON' : 'OFF'}\n            </Button>\n            <Button\n              variant=\"warning\"\n              className=\"ms-2\"\n              onClick={() => handleEditShow(rowIdx)}\n            >\n              <FaEdit />\n            </Button>\n            {/* <Button\n              variant=\"danger\"\n              className=\"ms-2\"\n              onClick={() => deleteHandleShow(rowIdx)}\n            >\n              <MdDelete />\n            </Button> */}\n          </div>\n        );\n      },\n    });\n  }\n\n  return (\n    <>\n      {isLoading ? (\n        <FetchLoader />\n      ) : (\n        <div>\n          {hasServerError ? (\n         <ServerError/>\n        ) : read ? (\n            <Container fluid className=\"mt-3 \">\n              <Row className=\"boxShadow p-4 mb-4 mt-4\">\n                <Col className=\"d-flex flex-row justify-content-between mt-1\">\n                  <h4 className=\"fw-bold\">Categories</h4>\n                  {write ? (\n                    <div>\n                      <Button\n                        style={{ backgroundColor: color, border: 'none' }}\n                        className=\"p-2 m-1\"\n                        onClick={handleAddShow}\n                      >\n                        <FaPlus size={20} />\n                        <span className=\"d-none d-md-inline\">\n                          {' '}\n                          Add Categories\n                        </span>\n                      </Button>\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n                </Col>\n              </Row>\n              <Row className=\"boxShadow p-3 mb-4 d-flex flex-lg-row flex-column flex-xxl-row flex-xl-row flex-sm-column flex-md-row\">\n                <Col className=\"my-4 mx-2\" xxl={3} xl={3} lg={3} sm={6} md={6}>\n                  <div className=\"input-group\">\n                    <span className=\"input-group-text\">\n                      <BsSearch />\n                    </span>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Search Categories...\"\n                      className=\"form-control\"\n                      value={searchInput}\n                      onChange={(e) => setSearchInput(e.target.value)}\n                      onKeyPress={handleKeyPress}\n                    />\n                    {searchInput && (\n                      <span className=\"input-group-text\" onClick={handleClear}>\n                        <BsX />\n                      </span>\n                    )}\n                  </div>\n                </Col>\n                <Col\n                  className=\"d-flex flex-column text-center my-4\"\n                  xxl={2}\n                  xl={2}\n                  lg={2}\n                  sm={3}\n                  md={3}\n                >\n                  <Button\n                    style={{ backgroundColor: color, border: 'none' }}\n                    onClick={handleSearch}\n                    disabled={isSearching || searchInput === ''}\n                  >\n                    {isSearching ? (\n                      <>\n                        <Spinner\n                          as=\"span\"\n                          animation=\"border\"\n                          size=\"sm\"\n                          role=\"status\"\n                          aria-hidden=\"true\"\n                          className=\"me-2\"\n                        />\n                        Searching...\n                      </>\n                    ) : (\n                      'Search'\n                    )}\n                  </Button>\n                </Col>\n              </Row>\n              <Row className=\"boxShadow p-4 mb-4\">\n                <BasicTable\n                  COLUMNS={COLUMNS}\n                  MOCK_DATA={data}\n                  currentPage={currentPage}\n                  startIndex={startIndex}\n                  endIndex={endIndex}\n                  setCurrentPage={setCurrentPage}\n                  totalItems={totalItems}\n                  totalPages={totalPages}\n                />\n              </Row>\n\n              <DeleteModel\n                YES={handleDeleteCategories}\n                DELETESTATE={deleteShow}\n                ONCLICK={deleteHandleClose}\n                DESCRIPTION=\"Are you sure want to delete this Categories\"\n                DELETETITLE=\"Categories\"\n              />\n            </Container>\n          ) : (\n            <NoAccess />\n          )}\n\n          <Modal show={editShow} onHide={handleEditClose} centered dialogClassName=\"review-modal\">\n            <Modal.Header closeButton>\n              <Modal.Title>Edit Categories</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Form>\n                <Form.Group controlId=\"statusDropdown\" className=\"mt-3 mb-3\">\n                  <Form.Label>\n                    Status <span className=\"text-danger\">*</span>\n                  </Form.Label>\n                  <Form.Select\n                    value={status}\n                    placeholder=\"Enter the status here\"\n                    onChange={handlestatusChange}\n                  >\n                    <option value=\"\" disabled selected>\n                      Select an option\n                    </option>\n                    <option value=\"Active\">Active</option>\n                    <option value=\"InActive\">InActive</option>\n                  </Form.Select>\n                </Form.Group>\n                <Form.Group controlId=\"deviceNameInput\" className='mb-3'>\n                  <Form.Label>\n                    Categories Name <span className=\"text-danger\">*</span>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter the category here\"\n                    value={categories}\n                    onChange={handleEditcategoriesChange}\n                    disabled\n                  />\n                </Form.Group>\n\n                <DragAndDropImageUpload\n                  labelText=\"Upload Image\"\n                  accepts={{\n                    'image/*': ['.png', '.jpeg', '.jpg', '.svg', '.webp'],\n                  }}\n                  handleFileChange={(file) => {\n                    handleNewFileChange(file);\n                  }}\n                />\n                <div>\n                  <small className=\"text-muted\">\n                    Accepted file types: .jpg , .jpeg, .png, .svg, .webp{' '}\n                  </small>\n                </div>\n                <InputImage image={newFile} valueImage={newFile} />\n              </Form>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleEditClose}>\n                Cancel\n              </Button>\n              <Button\n                style={{ backgroundColor: color, border: 'none' }}\n                onClick={handleEditData}\n                disabled={loading}\n              >\n                {loading ? (\n                  <>\n                    <Spinner\n                      as=\"span\"\n                      animation=\"border\"\n                      size=\"sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                      className=\"me-2\"\n                    />\n                    Updating...\n                  </>\n                ) : (\n                  'Update'\n                )}\n              </Button>\n            </Modal.Footer>\n          </Modal>\n\n          <Modal show={addShow} onHide={handleAddClose} centered dialogClassName=\"all-modal\">\n            <Modal.Header closeButton>\n              <Modal.Title>Add Categories</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Form>\n                <Form.Group controlId=\"formCategory\">\n                  <Form.Label>\n                    Category Name <span className=\"text-danger\">*</span>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter the category here\"\n                    onChange={handleAddcategoriesChange}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formFile\" className=\"mt-3\">\n                  <DragAndDropImageUpload\n                    labelText=\"Upload Image\"\n                    accepts={{\n                      'image/*': ['.png', '.jpeg', '.jpg', '.svg', '.webp'],\n                    }}\n                    handleFileChange={(file) => {\n                      handleFileChange(file);\n                    }}\n                  />\n                  <div>\n                    <small className=\"text-muted\">\n                      Accepted file types: .jpg , .jpeg, .png, .svg, .webp{' '}\n                    </small>\n                  </div>\n                  <InputImage image={file} valueImage={file} />\n                </Form.Group>\n              </Form>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleAddClose}>\n                Cancel\n              </Button>\n              <Button\n                style={{ backgroundColor: color, border: 'none' }}\n                onClick={handleAddData}\n                disabled={loading}\n              >\n                {loading ? (\n                  <>\n                    <Spinner\n                      as=\"span\"\n                      animation=\"border\"\n                      size=\"sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                      className=\"me-2\"\n                    />\n                    Add...\n                  </>\n                ) : (\n                  'Add'\n                )}\n              </Button>\n            </Modal.Footer>\n          </Modal>\n\n          <Modal\n            show={showConfirmationModal}\n            onHide={() => setShowConfirmationModal(false)}\n            centered\n          >\n            <Modal.Header closeButton>\n              <Modal.Title>Confirm Update</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Are you sure you want to update ?</Modal.Body>\n            <Modal.Footer>\n              <Button\n                variant=\"secondary\"\n                onClick={() => setShowConfirmationModal(false)}\n              >\n                Cancel\n              </Button>\n              <Button\n                style={{ backgroundColor: color }}\n                onClick={handleConfirmToggle}\n                disabled={loading}\n              >\n                {loading ? (\n                  <>\n                    <Spinner\n                      as=\"span\"\n                      animation=\"border\"\n                      size=\"sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                      className=\"me-2\"\n                    />\n                    Confirm...\n                  </>\n                ) : (\n                  'Confirm'\n                )}\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Categories;\n"],"names":["_ref","setFieldValue","touched","errors","labelText","nameText","accepts","handleFileChange","disabled","getRootProps","getInputProps","isDragActive","useDropzone","accept","onDrop","acceptedFiles","file","fileExtension","name","split","pop","toLowerCase","map","ext","replace","trim","includes","toast","warning","autoClose","position","onDropRejected","rejectedFiles","color","useTheme","_jsx","_Fragment","children","_jsxs","Form","Group","Label","className","concat","style","border","padding","textAlign","borderRadius","cursor","background","FiUploadCloud","size","image","valueImage","isValidImage","Array","isArray","length","imageSrc","File","URL","createObjectURL","src","width","height","alt","objectFit","props","columns","useMemo","COLUMNS","data","MOCK_DATA","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","useTable","autoResetWidth","useGlobalFilter","useSortBy","usePagination","Container","fluid","Row","Table","striped","hover","responsive","marginLeft","headerGroup","index","_createElement","getHeaderGroupProps","key","headers","column","getHeaderProps","whiteSpace","justifyContent","alignItems","onClick","e","target","classList","contains","render","toggleSortBy","isSortedDesc","FaSort","row","getRowProps","cells","cell","cellIndex","isActionColumn","id","getCellProps","textOverflow","overflow","maxWidth","backgroundColor","count","value","colSpan","Col","startIndex","endIndex","totalItems","ReactPaginate","breakLabel","onPageChange","selectedPage","setCurrentPage","selected","pageRangeDisplayed","pageCount","totalPages","renderOnZeroPageCount","activeClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","containerClassName","previousLabel","IconContext","Provider","AiFillLeftCircle","nextLabel","AiFillRightCircle","Button","currentPage","BiLeftArrow","BiRightArrow","Categories","setData","useState","setStartIndex","setEndIndex","setTotalPages","setTotalItems","searchTerm","setSearchTerm","searchInput","setSearchInput","isSearching","setIsSearching","useParams","editId","setEditId","editShow","setEditShow","categories","setcategories","setFile","deleteShow","setDeleteShow","idToDelete","setIdToDelete","addShow","setAddShow","newcategories","setNewcategories","status","setstatus","newFile","setNewFile","write","setWrite","read","setRead","fullAccess","setFullAccess","toggle","setToggle","showConfirmationModal","setShowConfirmationModal","selectedRowId","setSelectedRowId","loading","setLoading","hasServerError","setHasServerError","role","getRole","formatDateTime","date","format","Date","CategoriesData","refetch","isLoading","isError","error","useGetCategoriesQuery","search","editCategoriesData","useEditCategoriesMutation","deleteCategories","useDeleteCategoriesMutation","addCategories","useAddCategoriesMutation","useEffect","pagination","moduleAccess","handleSearch","then","handleEditClose","handleAddClose","Header","accessor","Cell","imageUrl","HiUserCircle","_ref2","push","rowIdx","original","_id","showInHomePage","isToggled","variant","handleCheckboxClick","check","find","d","category","handleEditShow","FaEdit","FetchLoader","ServerError","handleAddShow","FaPlus","xxl","xl","lg","sm","md","BsSearch","type","placeholder","onChange","onKeyPress","handleClear","BsX","Spinner","as","animation","BasicTable","DeleteModel","YES","async","response","_response$data","_response$error","success","message","console","DELETESTATE","ONCLICK","deleteHandleClose","DESCRIPTION","DELETETITLE","NoAccess","Modal","show","onHide","centered","dialogClassName","closeButton","Title","Body","controlId","Select","Control","DragAndDropImageUpload","handleNewFileChange","InputImage","Footer","formData","FormData","append","toggledValue"],"sourceRoot":""}