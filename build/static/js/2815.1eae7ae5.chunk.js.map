{"version":3,"file":"static/js/2815.1eae7ae5.chunk.js","mappings":"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","sources":["components/Heading.js","pages/ContactUs/ContactUsValidation.js","components/ContactLaptop.js","pages/ContactUs/ContactUs.js"],"sourcesContent":["import React from 'react';\n\nexport const HeadingWithQuotes = ({ children }) => {\n  return (\n    <h4 className=\"text-center\">\n      <span className=\"main\">“</span>\n      {children}\n      <span className=\"main\">”</span>\n    </h4>\n  );\n};\n\nexport const Heading = ({ children }) => {\n  return <h4 className=\"text-center\">{children}</h4>;\n};\n","import * as Yup from 'yup';\n\nexport const ContactUsSchema = Yup.object().shape({\n  fullName: Yup.string()\n  .max(25, 'Name must be 25 characters or less...!')\n  .required('Name is required...!'),\nemail: Yup.string()\n  .email('Invalid email address...!')\n    .required('Email is required...!')\n    .matches(\n      /^[a-zA-Z0-9._%+-]+[0-9]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/,\n      'Invalid email format'\n    ),\nmessage: Yup.string()\n  .max(500, 'Message must be 500 characters or less...!')\n  .required('Message is required...!'),\nphoneNumber: Yup.string()\n  .matches(/^[6-9][0-9]{9}$/, 'Invalid phone number format...!')\n  .required('Phone Number is required...!'),\n});\n","import React from 'react'\nimport contactus from '../assests/json/ContactUs.json';\nimport { Container } from 'react-bootstrap';\nimport Lottie from 'react-lottie';\nexport const ContactLaptop = () => {\n    const options = {\n        loop: true,\n        autoplay: true,\n        animationData: contactus,\n        rendererSettings: {\n          preserveAspectRatio: 'xMidYMid slice',\n        },\n      };\n  return (\n    <Container\n    \n    className=\"lottie-animation\"\n  >\n    {' '}\n    <Lottie\n      options={options}\n      height=\"400px\"  \n      width=\"100%\" \n    \n    />\n  </Container>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n  Button,\n  Col,\n  Container,\n  Form,\n  Row,\n  InputGroup,\n  Modal,\n  Spinner,\n} from 'react-bootstrap';\nimport { ErrorMessage, Field, Formik } from 'formik';\nimport { ContactUsSchema } from '../ContactUs/ContactUsValidation';\nimport { useContactUsMutation } from '../../redux/api/HomeApi';\nimport { useGetViewUserProfileQuery } from '../../redux/api/AuthApi';\nimport { useTheme } from '../../Contexts/ThemeContext';\nimport { removePrefix } from '../../Constants/constant';\nimport BasicButton from '../../components/BasicButton';\nimport SuccessModal from '../../components/SuccessModal';\nimport { ContactLaptop } from '../../components/ContactLaptop';\nimport { HeadingWithQuotes } from '../../components/Heading';\nimport {\n  useOtpSumbitEmailMutation,\n  useVerifyEmailOTPMutation,\n} from '../../redux/api/ProfileOrdersApi';\nimport { toast } from 'react-toastify';\n\nconst Contact = () => {\n  const { color } = useTheme();\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [SendContact] = useContactUsMutation();\n  const [errorLottie, setErrorLottie] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isEmailVerified, setIsEmailVerified] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loadingVerify, setLoadingVerify] = useState(false);\n  const [otpEmail, setOtpEmail] = useState(new Array(4).fill(''));\n  const inputEmailRefs = useRef([]);\n  const [showEmailOtpModal, setShowEmailOtpModal] = useState(false);\n  const [otpError, setOtpError] = useState(false);\n  const [initialValues, setInitialValues] = useState({\n    fullName: '',\n    email: '',\n    phoneNumber: '',\n    message: '',\n  });\n\n  const {\n    data: ContactData,\n    error,\n    isLoading,\n    refetch,\n  } = useGetViewUserProfileQuery(phoneNumber, {\n    skip: !phoneNumber,\n  });\n\n  const [otpEmailApi] = useVerifyEmailOTPMutation();\n  const [otpEmailSubmitApi, { isLoading: otpEmailLoader }] =\n    useOtpSumbitEmailMutation();\n\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      const parsedToken = JSON.parse(storedToken);\n      setPhoneNumber(parsedToken.phoneNumber);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (ContactData && ContactData.data) {\n      setInitialValues({\n        fullName: ContactData.data.userName || '',\n        email: ContactData.data.email || '',\n        phoneNumber: removePrefix(phoneNumber) || '',\n        message: '',\n      });\n    }\n  }, [ContactData, phoneNumber]);\n\n  useEffect(() => {\n    if (showEmailOtpModal) {\n      inputEmailRefs.current[0]?.focus();\n    }\n  }, [showEmailOtpModal]);\n\n  const handleSendRequest = async (values, { resetForm }) => {\n    if (!isEmailVerified) {\n      toast.error('Please verify your email before submitting', {\n        position: 'bottom-center',\n        autoClose: 1000,\n      });\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      const response = await SendContact({\n        userName: values.fullName,\n        email: values.email,\n        phoneNumber: values.phoneNumber,\n        message: values.message,\n      });\n\n      if (response?.data) {\n        setErrorLottie(false);\n        setSuccessMessage(response?.data?.message);\n        setShowModal(true);\n        setTimeout(() => setShowModal(false), 4000);\n        resetForm();\n      } else {\n        setErrorLottie(true);\n        setSuccessMessage(response?.error?.data.error);\n        setShowModal(true);\n        setTimeout(() => setShowModal(false), 4000);\n        resetForm();\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleKeyDownEmail = (e, index) => {\n    if (e.key === 'Backspace') {\n      const newOtp = [...otpEmail];\n      newOtp[index] = '';\n      setOtpEmail(newOtp);\n      if (index > 0) {\n        inputEmailRefs.current[index - 1].focus();\n      }\n    }\n  };\n\n  const handleChangeEmail = (element, index) => {\n    if (isNaN(element.value)) return false;\n    const newOtp = [...otpEmail];\n    newOtp[index] = element.value;\n    setOtpEmail(newOtp);\n\n    // Move to next input if value is entered\n    if (element.nextSibling && element.value) {\n      element.nextSibling.focus();\n    }\n  };\n\n  const handleEmailOtpSend = async (values) => {\n    if (values.phoneNumber.length < 10) {\n      toast.error('Please enter valid phone Number', {\n        position: 'bottom-center',\n        autoClose: 1000,\n      });\n    }\n    const phoneNumberWithoutPrefix = values.phoneNumber.replace(/^(\\+91)/, '');\n    setLoadingVerify(true);\n    try {\n      const response = await otpEmailApi({\n        phoneNumber: phoneNumberWithoutPrefix,\n        email: values.email,\n      });\n\n      if (response?.data) {\n        setShowEmailOtpModal(true);\n      }\n    } catch (error) {\n      console.error(error);\n      toast.error('An error occurred', { autoClose: 1000 });\n    } finally {\n      setLoadingVerify(false);\n    }\n  };\n\n  const handleEmailOtpSubmit = async (values) => {\n    if (otpEmail.length < 4) {\n      setOtpError(true);\n    }\n    const phoneNumberWithoutPrefix = values.phoneNumber.replace(/^(\\+91)/, '');\n    setLoading(true);\n    try {\n      const response = await otpEmailSubmitApi({\n        phoneNumber: phoneNumberWithoutPrefix,\n        email: values.email,\n        code: otpEmail.join(''),\n      });\n\n      if (response?.data) {\n        setShowEmailOtpModal(false);\n        toast.success(response?.data.message, {\n          position: 'bottom-center',\n          autoClose: 1000,\n        });\n        setIsEmailVerified(true);\n        setOtpEmail(new Array(4).fill(''));\n      } else {\n        toast.error(response?.error.data.error, {\n          position: 'bottom-center',\n          autoClose: 1000,\n        });\n        setOtpEmail(new Array(4).fill(''));\n      }\n    } catch (error) {\n      console.error(error);\n      toast.error('An error occurred', { autoClose: 1000 });\n    } finally {\n      setLoading(false);\n      setOtpEmail(new Array(4).fill(''));\n    }\n  };\n\n  return (\n    <>\n      <Container className=\"mt-5\">\n        <HeadingWithQuotes>Contact Us</HeadingWithQuotes>\n        <Row className=\"align-items-stretch\">\n          <Col\n            xs={12}\n            md={6}\n            className=\"mt-4 mb-lg-0 d-flex align-items-stretch\"\n          >\n            <ContactLaptop />\n          </Col>\n          <Col\n            xs={12}\n            md={6}\n            className=\"d-flex mt-4 align-items-stretch card p-4\"\n            style={{\n              borderTop: `8px solid ${color}`,\n              borderTopRightRadius: '40px',\n              borderTopLeftRadius: '40px',\n            }}\n          >\n            <div className=\"w-100 d-flex flex-column justify-content-between\">\n              <Formik\n                initialValues={initialValues}\n                enableReinitialize={true}\n                validationSchema={ContactUsSchema}\n                onSubmit={handleSendRequest}\n              >\n                {({ handleSubmit, setFieldValue, values, errors }) => (\n                  <Form\n                    onSubmit={handleSubmit}\n                    className=\"h-100 d-flex flex-column justify-content-between\"\n                  >\n                    <Form.Group controlId=\"fullName\">\n                      <Form.Label>\n                        Name <span className=\"text-danger\">*</span>\n                      </Form.Label>\n                      <Field\n                        name=\"fullName\"\n                        type=\"text\"\n                        placeholder=\"Enter Your Name\"\n                        className=\"form-control\"\n                      />\n                      <ErrorMessage\n                        name=\"fullName\"\n                        component=\"div\"\n                        className=\"text-danger\"\n                      />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"email\">\n                      <Form.Label>\n                        Email <span className=\"text-danger\">*</span>\n                      </Form.Label>\n                      <div className=\"d-flex\">\n                        <Field\n                          name=\"email\"\n                          type=\"email\"\n                          placeholder=\"Enter Your Email\"\n                          className=\"form-control\"\n                          onChange={(e) => {\n                            const value = e.target.value.toLowerCase();\n                            e.target.value = value;\n                            setFieldValue('email', value);\n                            if (value !== initialValues.email) {\n                              setIsEmailVerified(false);\n                            }\n                          }}\n                        />\n\n                        {!isEmailVerified ? (\n                          values.email === initialValues.email ? (\n                            <Button\n                              style={{ backgroundColor: 'white' }}\n                              className=\"ml-2\"\n                              disabled\n                            >\n                              <i\n                                className=\"fas fa-check-circle\"\n                                style={{ color: 'green' }}\n                              ></i>\n                            </Button>\n                          ) : (\n                            <Button\n                              style={{ backgroundColor: color }}\n                              className=\"ml-2 mx-2\"\n                              onClick={() => {\n                                handleEmailOtpSend(values);\n                              }}\n                              disabled={\n                                loading || !values.email || errors.email\n                              }\n                            >\n                              {loading ? (\n                                <>\n                                  <Spinner animation=\"border\" size=\"sm\" />{' '}\n                                  Verify...\n                                </>\n                              ) : (\n                                'Verify'\n                              )}\n                            </Button>\n                          )\n                        ) : (\n                          <Button\n                            style={{ backgroundColor: 'white' }}\n                            className=\"ml-2\"\n                            disabled={loading || !values.email || errors.email}\n                          >\n                            <i\n                              className=\"fas fa-check-circle\"\n                              style={{ color: 'green' }}\n                            ></i>\n                          </Button>\n                        )}\n                        {/* {!isEmailVerified ? (\n                          <Button\n                            style={{ backgroundColor: color }}\n                            className=\"ml-2 mx-2\"\n                            onClick={() => {\n                              handleEmailOtpSend(values);\n                            }}\n                            disabled={loadingVerify}\n                          >\n                            {loadingVerify ? (\n                              <>\n                                <Spinner animation=\"border\" size=\"sm\" />{' '}\n                                Verify...\n                              </>\n                            ) : (\n                              'Verify'\n                            )}\n                          </Button>\n                        ) : (\n                          <Button\n                            style={{ backgroundColor: 'white' }}\n                            className=\"ml-2\"\n                            disabled\n                          >\n                            <i\n                              className=\"fas fa-check-circle\"\n                              style={{ color: 'green' }}\n                            ></i>\n                          </Button>\n                        )} */}\n                      </div>\n                      <ErrorMessage\n                        name=\"email\"\n                        component=\"div\"\n                        className=\"text-danger\"\n                      />\n                    </Form.Group>\n                    <Form.Group controlId=\"phone\">\n                      <Form.Label>\n                        Phone Number <span className=\"text-danger\">*</span>\n                      </Form.Label>\n                      <InputGroup>\n                        <InputGroup.Text>+91</InputGroup.Text>\n                        <Field\n                          name=\"phoneNumber\"\n                          type=\"text\"\n                          placeholder=\"Enter Your Phone Number\"\n                          className=\"form-control\"\n                          maxLength=\"10\"\n                        />\n                      </InputGroup>\n                      <ErrorMessage\n                        name=\"phoneNumber\"\n                        component=\"div\"\n                        className=\"text-danger\"\n                      />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"message\">\n                      <Form.Label>\n                        Message <span className=\"text-danger\">*</span>\n                      </Form.Label>\n                      <Field\n                        name=\"message\"\n                        as=\"textarea\"\n                        placeholder=\"Enter Your Message\"\n                        className=\"form-control\"\n                      />\n                      <ErrorMessage\n                        name=\"message\"\n                        component=\"div\"\n                        className=\"text-danger\"\n                      />\n                    </Form.Group>\n\n                    <Row className=\"justify-content-center mt-3\">\n                      <Col xs=\"auto\">\n                        <BasicButton\n                          onClick={handleSubmit}\n                          className=\"c-button c-hover\"\n                          type=\"submit\"\n                          style={{ backgroundColor: color, borderColor: color }}\n                          isLoading={isLoading || isSubmitting}\n                          disabled={isSubmitting}\n                          label={'Submit'}\n                        />\n                      </Col>\n                    </Row>\n                    <Modal\n                      show={showEmailOtpModal}\n                      onHide={() => setShowEmailOtpModal(false)}\n                      centered\n                      size='md'\n                    >\n                      <Modal.Header closeButton>\n                        <Modal.Title className=\"border-0 fs-5\">Enter OTP</Modal.Title>\n                      </Modal.Header>\n                      <Modal.Body>\n                        <Form.Group>\n                           <p>\n                            We have sent an OTP to your email\n                          \n                        </p>\n                        <p style={{fontSize:'13px'}}><strong className='text-wrap'>{values.email}</strong></p>\n                         \n                          <div className=\"d-flex justify-content-between mt-2\">\n                            {otpEmail.map((data, index) => (\n                              <Form.Control\n                                key={index}\n                                type=\"text\"\n                                maxLength=\"1\"\n                                value={data}\n                                onChange={(e) =>\n                                  handleChangeEmail(e.target, index)\n                                }\n                                onKeyDown={(e) => handleKeyDownEmail(e, index)}\n                                ref={(el) =>\n                                  (inputEmailRefs.current[index] = el)\n                                }\n                                className=\"otp-input mx-1\"\n                                style={{\n                                  width: '3rem',\n                                  height: '3rem',\n                                  margin: '0 0.5rem',\n                                  fontSize: '1rem',\n                                  borderRadius: 4,\n                                  border: '1px solid rgba(0,0,0,0.3)',\n                                  textAlign: 'center',\n                                }}\n                                centered\n                              />\n                            ))}\n                          </div>\n                          {otpError && (\n                            <Form.Text className=\"text-danger\">\n                              Please enter the OTP.\n                            </Form.Text>\n                          )}\n                        </Form.Group>\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <Button\n                          variant=\"secondary\"\n                          onClick={() => setShowEmailOtpModal(false)}\n                        >\n                          Close\n                        </Button>\n\n                        <BasicButton\n                          className=\"c-button c-hover\"\n                          type=\"submit\"\n                          style={{ backgroundColor: color }}\n                          isLoading={otpEmailLoader}\n                          label={'Submit'}\n                          onClick={() => handleEmailOtpSubmit(values)}\n                          disabled={otpEmailLoader}\n                        >\n                          {otpEmailLoader ? (\n                            <>\n                              <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                                className=\"me-2\"\n                              />\n                              Submiting OTP...\n                            </>\n                          ) : (\n                            'Submit OTP'\n                          )}\n                        </BasicButton>\n                      </Modal.Footer>\n                    </Modal>\n                  </Form>\n                )}\n              </Formik>\n            </div>\n          </Col>\n        </Row>\n\n        <SuccessModal\n          showModal={showModal}\n          setShowModal={setShowModal}\n          successMessage={successMessage}\n          error={errorLottie}\n        />\n      </Container>\n    </>\n  );\n};\n\nexport default Contact;\n"],"names":["HeadingWithQuotes","_ref","children","_jsxs","className","_jsx","Heading","_ref2","ContactUsSchema","Yup","shape","fullName","max","required","email","matches","message","phoneNumber","ContactLaptop","options","loop","autoplay","animationData","contactus","rendererSettings","preserveAspectRatio","Container","Lottie","height","width","Contact","color","useTheme","setPhoneNumber","useState","showModal","setShowModal","successMessage","setSuccessMessage","SendContact","useContactUsMutation","errorLottie","setErrorLottie","isSubmitting","setIsSubmitting","isEmailVerified","setIsEmailVerified","loading","setLoading","loadingVerify","setLoadingVerify","otpEmail","setOtpEmail","Array","fill","inputEmailRefs","useRef","showEmailOtpModal","setShowEmailOtpModal","otpError","setOtpError","initialValues","setInitialValues","data","ContactData","error","isLoading","refetch","useGetViewUserProfileQuery","skip","otpEmailApi","useVerifyEmailOTPMutation","otpEmailSubmitApi","otpEmailLoader","useOtpSumbitEmailMutation","useEffect","storedToken","localStorage","getItem","parsedToken","JSON","parse","userName","removePrefix","_inputEmailRefs$curre","current","focus","_Fragment","Row","Col","xs","md","style","borderTop","concat","borderTopRightRadius","borderTopLeftRadius","Formik","enableReinitialize","validationSchema","onSubmit","async","values","resetForm","response","_response$data","_response$error","setTimeout","console","toast","position","autoClose","handleSubmit","setFieldValue","errors","Form","Group","controlId","Label","Field","name","type","placeholder","ErrorMessage","component","onChange","e","value","target","toLowerCase","Button","backgroundColor","disabled","onClick","length","phoneNumberWithoutPrefix","replace","handleEmailOtpSend","Spinner","animation","size","InputGroup","Text","maxLength","as","BasicButton","borderColor","label","Modal","show","onHide","centered","Header","closeButton","Title","Body","fontSize","map","index","Control","handleChangeEmail","element","isNaN","newOtp","nextSibling","onKeyDown","handleKeyDownEmail","key","ref","el","margin","borderRadius","border","textAlign","Footer","variant","code","join","success","handleEmailOtpSubmit","role","SuccessModal"],"sourceRoot":""}