{"version":3,"file":"static/js/4544.0ffef78c.chunk.js","mappings":"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","sources":["components/FetchLoader.js","pages/Admin/Invoice/Invoice.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { RotatingLines } from 'react-loader-spinner'; \nimport loader from '../assests/images/loader.gif';\n\nconst FetchLoader = () => {\n  return (\n    <Container className=\"vh-100 d-flex flex-column justify-content-center align-items-center\">\n      {/* Add your GIF image below */}\n      <img \n        src={loader} \n        alt=\"Loading...\" \n        style={{ width: '150px', height: '150px' }} \n      />\n      {/* Optional: Use a text loader if needed */}\n      <div className=\"text mt-3\">Loading ...</div>\n    </Container>\n  );\n};\n\nexport default FetchLoader;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { Container, Row, Col, Table, Button } from 'react-bootstrap';\nimport { useTheme } from '../../../Contexts/ThemeContext';\nimport { FaArrowLeft, FaEdit, FaFileDownload } from 'react-icons/fa';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getRole } from '../../../Constants/Global';\nimport { useGetPreviewQuery } from '../../../redux/api/PreviewApi';\nimport { format } from 'date-fns';\nimport FetchLoader from '../../../components/FetchLoader';\nimport { useGetLogoQuery } from '../../../redux/api/LogoApi';\n\nconst Invoice = () => {\n  const { color } = useTheme();\n  const [data, setData] = useState({});\n  const [imageData, setImageData] = useState({});\n  const { requestId } = useParams();\n  const [orderId, setOrderId] = useState(null);\n  const role = getRole();\n  const { data: InvoiceData, isLoading } = useGetPreviewQuery({\n    requestId: requestId,\n    role: role,\n  });\n  const { data: logoData } = useGetLogoQuery();\n  const navigate = useNavigate();\n  const invoiceRef = useRef(null);\n\n  // useEffect(() => {\n  //   if (logoData && logoData.data) {\n  //     setImageData(logoData.data);\n  //   }\n  // }, [logoData]);\n\n  const handleCancel = () => {\n    navigate(`/admin/bill-information/${orderId}`);\n  };\n\n  const handleBackCancel = () => {\n    navigate('/admin/orders');\n  };\n\n  useEffect(() => {\n    if (InvoiceData && InvoiceData.data) {\n      setData(InvoiceData.data);\n      setOrderId(InvoiceData.orderId);\n    }\n  }, [InvoiceData, role]);\n\n  const formatDateTime = (date) => format(new Date(date), 'dd-MMM-yyyy h:mm a');\n\n  // Handle PDF download by triggering the print dialog\n  const handleDownloadPDF = () => {\n    window.print(); // Opens the print dialog\n  };\n\n  if (isLoading) {\n    return <FetchLoader />;\n  }\n\n  return (\n    <Container className=\"invoice-container my-5\" ref={invoiceRef}>\n      {/* Invoice Header */}\n      <Row>\n        <Col>\n          <img\n            src={InvoiceData.data.logo}\n            width={50}\n            className=\"pointer mx-3\"\n            alt=\"MainLogoImage1\"\n            title=\"MainLogoImage1\"\n          />\n        </Col>\n        <h2 className=\"text-center mt-2 mb-2\">Refix Systems</h2>\n      </Row>\n      <Row className=\"invoice-header align-items-center\">\n        <Col xs={12} md={6}>\n          <h5 className=\"invoice-title d-print-none \">\n            {<FaArrowLeft size={20} onClick={handleBackCancel} />} Invoice\n          </h5>\n          <span\n            className=\"d-print-none\"\n            style={{ fontWeight: 'bold', marginLeft: '35px' }}\n          ></span>{' '}\n          {data.typeOfService || 'N/A'}\n          <br />\n        </Col>\n        <Col\n          xs={12}\n          md={6}\n          className=\"text-md-end text-center mt-3 mt-md-0 d-print-none\"\n        >\n          {InvoiceData?.orderStatus !== 'Completed' ? (\n            <Button\n              className=\"download-btn mx-2\"\n              style={{ backgroundColor: color }}\n              onClick={handleCancel}\n            >\n              <FaEdit size={20} /> Edit\n            </Button>\n          ) : (\n            <></>\n          )}\n          <Button\n            className=\"download-btn mx-2\"\n            style={{ backgroundColor: color }}\n            onClick={handleDownloadPDF}\n          >\n            <FaFileDownload size={20} /> Download PDF\n          </Button>\n        </Col>\n      </Row>\n      <hr className=\"invoice-divider\" />\n\n      {/* Invoice Details */}\n      <Row className=\"invoice-details mb-4\">\n        <Col xs={12} md={6}>\n          <h5 className=\"invoice-subtitle\">Billed To:</h5>\n          <p className=\"invoice-text\">\n            <span style={{ fontWeight: 'bold' }}>Name:</span>{' '}\n            {data.userName || 'N/A'}\n            <br />\n            <span style={{ fontWeight: 'bold' }}>Address:</span>{' '}\n            {data.address || 'N/A'}\n            <br />\n            <span style={{ fontWeight: 'bold' }}>Phone Number:</span>{' '}\n            {data.phoneNumber || 'N/A'}\n            <br />\n            <span style={{ fontWeight: 'bold' }}>Email:</span>{' '}\n            {data.email || 'N/A'}\n          </p>\n        </Col>\n        <Col xs={12} md={6}>\n          <p className=\"invoice-text\">\n            <span style={{ fontWeight: 'bold' }}>Order Id:</span>{' '}\n            {data.requestId || 'N/A'}\n            <br />\n            <span style={{ fontWeight: 'bold' }}>Order Created On:</span>{' '}\n            {data.orderCreatedOn ? formatDateTime(data.orderCreatedOn) : 'N/A'}\n            <br />\n            <span style={{ fontWeight: 'bold' }}>Bill Generated On:</span>{' '}\n            {data.createdAt ? formatDateTime(data.createdAt) : 'N/A'}\n            <br />\n          </p>\n        </Col>\n      </Row>\n\n      {/* Item Table */}\n      <Table className=\"invoice-table\" striped bordered hover responsive>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Description</th>\n            <th>Component</th>\n            <th>Labour Charge</th>\n            <th>Service Charge</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.details?.map((detail, index) => (\n            <tr key={detail._id}>\n              <td>{index + 1}</td>\n              <td>{detail.description}</td>\n              <td>{detail.component}</td>\n              <td>₹ {detail.labourCharge}</td>\n              <td>₹ {detail.serviceCharge}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n\n      {/* Invoice Summary */}\n      <Row className=\"invoice-summary-row\">\n        <Col xs={12} md={{ span: 6, offset: 6 }}>\n          <Table className=\"invoice-summary-table\" borderless>\n            <tbody>\n              <tr>\n                <td className=\"summary-label\">Total Labour Charges:</td>\n                <td className=\"summary-value text-end\">\n                  ₹ {data.labourCharges}\n                </td>\n              </tr>\n              <tr>\n                <td className=\"summary-label\">Total Service Charges:</td>\n                <td className=\"summary-value text-end\">\n                  ₹ {data.serviceCharges}\n                </td>\n              </tr>\n              <tr>\n                <td className=\"summary-label\">Total Charges Before GST:</td>\n                <td className=\"summary-value text-end\">\n                  ₹ {data.totalChargesBeforeGST}\n                </td>\n              </tr>\n              <tr>\n                <td className=\"summary-label\">GST:</td>\n                <td className=\"summary-value text-end\">₹ {data.GST}</td>\n              </tr>\n              <tr>\n                <td className=\"summary-label font-weight-bold\">To Be Paid:</td>\n                <td\n                  className=\"summary-value text-end font-weight-bold\"\n                  style={{ color: color }}\n                >\n                  ₹ {data.toBePaid}\n                </td>\n              </tr>\n              <tr>\n                <td className=\"summary-label\">Total Amount Paid:</td>\n                <td className=\"summary-value text-end\">\n                  ₹ {InvoiceData?.totalAmountPaid}\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Invoice;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["FetchLoader","_jsxs","Container","className","children","_jsx","src","loader","alt","style","width","height","Invoice","_data$details","color","useTheme","data","setData","useState","imageData","setImageData","requestId","useParams","orderId","setOrderId","role","getRole","InvoiceData","isLoading","useGetPreviewQuery","logoData","useGetLogoQuery","navigate","useNavigate","invoiceRef","useRef","useEffect","formatDateTime","date","format","Date","ref","Row","Col","logo","title","xs","md","FaArrowLeft","size","onClick","handleBackCancel","fontWeight","marginLeft","typeOfService","orderStatus","Button","backgroundColor","handleCancel","concat","FaEdit","_Fragment","handleDownloadPDF","window","print","FaFileDownload","userName","address","phoneNumber","email","orderCreatedOn","createdAt","Table","striped","bordered","hover","responsive","details","map","detail","index","description","component","labourCharge","serviceCharge","_id","span","offset","borderless","labourCharges","serviceCharges","totalChargesBeforeGST","GST","toBePaid","totalAmountPaid","React","_ref","bsPrefix","variant","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","responsiveClass"],"sourceRoot":""}