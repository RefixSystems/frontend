{"version":3,"file":"static/js/3112.0a806c51.chunk.js","mappings":"yMAKA,MAeA,EAfoBA,KAEhBC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,UAAU,sEAAqEC,SAAA,EAExFC,EAAAA,EAAAA,KAAA,OACEC,IAAKC,EACLC,IAAI,aACJC,MAAO,CAAEC,MAAO,QAASC,OAAQ,YAGnCN,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SAAC,kB,mECb1B,MAAMQ,EAAoBC,IAAmB,IAAlB,SAAET,GAAUS,EAC5C,OACEZ,EAAAA,EAAAA,MAAA,MAAIE,UAAU,cAAaC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,SAAC,WACtBA,GACDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,SAAC,aACpB,EAIIU,EAAUC,IAAmB,IAAlB,SAAEX,GAAUW,EAClC,OAAOV,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAaC,SAAEA,GAAc,C,6KCLpD,MAmEE,EAnEcY,KACd,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KACzBF,KAAMG,EAAW,WAAEC,IAAeC,EAAAA,EAAAA,MAQ1C,OANAC,EAAAA,EAAAA,YAAU,KACJH,GAAeA,EAAYH,MAC7BC,EAAQE,EAAYH,KACtB,GACC,CAACG,KAGNnB,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAAAE,SAAA,EACJC,EAAAA,EAAAA,KAACmB,EAAAA,EAAG,CAACrB,UAAU,eAAcC,UAC3BC,EAAAA,EAAAA,KAACoB,EAAAA,EAAG,CAACtB,UAAU,mBAAkBC,UAC/BC,EAAAA,EAAAA,KAACO,EAAAA,EAAiB,CAAAR,SAAC,gBAGtBiB,GACChB,EAAAA,EAAAA,KAACL,EAAAA,EAAW,KAEZK,EAAAA,EAAAA,KAAAqB,EAAAA,SAAA,CAAAtB,SACmB,IAAhBa,EAAKU,QACJtB,EAAAA,EAAAA,KAACmB,EAAAA,EAAG,CAACrB,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAACoB,EAAAA,EAAG,CAACtB,UAAU,cAAaC,UAC3BC,EAAAA,EAAAA,KAACuB,EAAAA,EAAW,QAIfX,EAAKY,KAAKC,IACR7B,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iCAAiCM,MAAO,CAAEsB,MAAO,SAAU3B,SACtE0B,EAAQE,YAEX/B,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,CAACC,WAAY,IAAKC,SAAU,OAAQhC,UAAU,4BAA2BC,SAChF0B,EAAQM,WAEX/B,EAAAA,EAAAA,KAACmB,EAAAA,EAAG,CAACrB,UAAU,qDAAoDC,SAChE0B,EAAQO,OAAOR,KAAKS,IACnBjC,EAAAA,EAAAA,KAACoB,EAAAA,EAAG,CAACc,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAiBtC,UAAU,gCAA+BC,UAChFC,EAAAA,EAAAA,KAACqC,EAAAA,EAAK,CACJlC,IAAI,QACJF,IAAKgC,EAAIK,MACTC,OAAK,EACLzC,UAAU,SACVM,MAAO,CACLoC,aAAc,OACdC,UAAW,4BACXC,aAAc,OACdrC,MAAO,QACPC,OAAQ,QACRqC,UAAW,cAZeV,EAAIW,cAVjBnB,EAAQmB,WAkCjC,C","sources":["components/FetchLoader.js","components/Heading.js","pages/Gallery/Gallery.js"],"sourcesContent":["import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { RotatingLines } from 'react-loader-spinner'; \nimport loader from '../assests/images/loader.gif';\n\nconst FetchLoader = () => {\n  return (\n    <Container className=\"vh-100 d-flex flex-column justify-content-center align-items-center\">\n      {/* Add your GIF image below */}\n      <img \n        src={loader} \n        alt=\"Loading...\" \n        style={{ width: '150px', height: '150px' }} \n      />\n      {/* Optional: Use a text loader if needed */}\n      <div className=\"text mt-3\">Loading ...</div>\n    </Container>\n  );\n};\n\nexport default FetchLoader;\n","import React from 'react';\n\nexport const HeadingWithQuotes = ({ children }) => {\n  return (\n    <h4 className=\"text-center\">\n      <span className=\"main\">“</span>\n      {children}\n      <span className=\"main\">”</span>\n    </h4>\n  );\n};\n\nexport const Heading = ({ children }) => {\n  return <h4 className=\"text-center\">{children}</h4>;\n};\n","import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\nimport { HeadingWithQuotes } from '../../components/Heading';\nimport { useGetGalleryDetailsQuery } from '../../redux/api/HomeApi';\nimport Paragraph from '../../components/paragraph';\nimport FetchLoader from '../../components/FetchLoader';\nimport NoDataFound from '../../components/NoDataFound';\n\nconst Gallery = () => {\n  const [data, setData] = useState([]);\n  const { data: GalleryData, isFetching } = useGetGalleryDetailsQuery();\n\n  useEffect(() => {\n    if (GalleryData && GalleryData.data) {\n      setData(GalleryData.data);\n    }\n  }, [GalleryData]);\n\n  return (\n<Container>\n      <Row className=\"about-header\">\n        <Col className=\"text-center mt-5\">\n          <HeadingWithQuotes>Gallery</HeadingWithQuotes>\n        </Col>\n      </Row>\n      {isFetching ? (\n        <FetchLoader />\n      ) : (\n        <>\n          {data.length === 0 ? (\n            <Row className=\"my-4\">\n              <Col className=\"text-center\">\n               <NoDataFound/>\n              </Col>\n            </Row>\n          ) : (\n            data.map((gallery) => (\n              <div className=\"my-4\" key={gallery._id}>\n                <h5 className=\"my-2 text-md-start text-center\" style={{ color: 'black' }}>\n                  {gallery.location}\n                </h5>\n                <div>\n                  <Paragraph fontWeight={400} fontSize={'16px'} className=\"text-md-start text-center\">\n                    {gallery.address}\n                  </Paragraph>\n                  <Row className=\"justify-content-md-start justify-content-sm-center\">\n                    {gallery.images.map((img) => (\n                      <Col xs={12} md={6} lg={3} key={img._id} className=\"d-flex justify-content-center\">\n                        <Image\n                          alt=\"image\"\n                          src={img.image}\n                          fluid\n                          className=\"border\"\n                          style={{\n                            borderRadius: '10px',\n                            boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                            marginBottom: '10px',\n                            width: '300px',\n                            height: '200px',\n                            objectFit: 'contain',\n                          }}\n                        />\n                      </Col>\n                    ))}\n                  </Row>\n                </div>\n              </div>\n            ))\n          )}\n        </>\n      )}\n    </Container>\n\n\n  )}\n  export default Gallery;\n"],"names":["FetchLoader","_jsxs","Container","className","children","_jsx","src","loader","alt","style","width","height","HeadingWithQuotes","_ref","Heading","_ref2","Gallery","data","setData","useState","GalleryData","isFetching","useGetGalleryDetailsQuery","useEffect","Row","Col","_Fragment","length","NoDataFound","map","gallery","color","location","Paragraph","fontWeight","fontSize","address","images","img","xs","md","lg","Image","image","fluid","borderRadius","boxShadow","marginBottom","objectFit","_id"],"sourceRoot":""}