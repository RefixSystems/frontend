{"version":3,"file":"static/js/9061.64e71bd0.chunk.js","mappings":"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","sources":["components/FetchLoader.js","components/TablePaginationComponent.js","pages/Admin/Reports/UserReports.js"],"sourcesContent":["import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { RotatingLines } from 'react-loader-spinner'; \nimport loader from '../assests/images/loader.gif';\n\nconst FetchLoader = () => {\n  return (\n    <Container className=\"vh-100 d-flex flex-column justify-content-center align-items-center\">\n      {/* Add your GIF image below */}\n      <img \n        src={loader} \n        alt=\"Loading...\" \n        style={{ width: '150px', height: '150px' }} \n      />\n      {/* Optional: Use a text loader if needed */}\n      <div className=\"text mt-3\">Loading ...</div>\n    </Container>\n  );\n};\n\nexport default FetchLoader;\n","import React, { useMemo } from 'react';\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from 'react-table';\nimport { Button, Col, Container, Row, Table } from 'react-bootstrap';\nimport { BiLeftArrow, BiRightArrow } from 'react-icons/bi';\nimport { FaSort } from 'react-icons/fa';\nimport { AiFillLeftCircle, AiFillRightCircle } from 'react-icons/ai';\nimport ReactPaginate from 'react-paginate';\nimport { IconContext } from 'react-icons/lib';\nimport './FilterComponent.css';\nimport { useTheme } from '../Contexts/ThemeContext';\n\nconst BasicTable = (props) => {\n  const { color } = useTheme();\n  const columns = useMemo(() => props.COLUMNS, [props.COLUMNS]);\n  const data = useMemo(() => props.MOCK_DATA || [], [props.MOCK_DATA]);\n  const { getTableProps, getTableBodyProps, headerGroups, prepareRow, page } =\n    useTable(\n      {\n        columns,\n        data,\n        autoResetWidth: false,\n      },\n      useGlobalFilter,\n      useSortBy,\n      usePagination\n    );\n\n  return (\n    <div>\n      <Container fluid className=\"ml-xxl-n4 ml-xl-n4 ml-lg-n4\">\n        <Row>\n          <Table\n            className=\"justify-content-center align-items-center\"\n            striped\n            hover\n            {...getTableProps()}\n            responsive={true}\n            style={{ width: '100%', marginLeft: '25px' }}\n          >\n            <thead>\n              {headerGroups.map((headerGroup, index) => (\n                <tr {...headerGroup.getHeaderGroupProps()} key={index}>\n                  {headerGroup.headers.map((column, index) => (\n                    <th\n                      {...column.getHeaderProps()}\n                      key={index}\n                      className=\"text-center text-dark\"\n                      style={{\n                        width: `${column.width}px`,\n                        whiteSpace: 'nowrap',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                      }}\n                      onClick={(e) => {\n                        // Check if the click was not on the sort icon and if the column is not \"ACTIONS\"\n                        if (\n                          !e.target.classList.contains('fa-sort') &&\n                          column.render('Header') !== 'ACTIONS'\n                        ) {\n                          // Change sorting on a single tap\n                          column.toggleSortBy(!column.isSortedDesc);\n                        }\n                      }}\n                    >\n                      {column.render('Header') === 'ACTIONS' ? (\n                        <>{column.render('Header')}</>\n                      ) : (\n                        <div>\n                          {column.render('Header')}\n                          <FaSort className=\"mx-2\" />\n                        </div>\n                      )}\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {page.length > 0 ? (\n                page.map((row, index) => {\n                  prepareRow(row);\n                  return (\n                    <tr {...row.getRowProps()} key={index}>\n                      {row.cells.map((cell, cellIndex) => {\n                        const isActionColumn =\n                          cell.column.id === 'action' ||\n                          cell.column.id === 'localShop' ||\n                          cell.column.id === 'serviceCenter' ||\n                          cell.column.id === 'ourServices' ||\n                          cell.column.id === 'addInCarousel';\n                        return (\n                          <td\n                            {...cell.getCellProps()}\n                            key={cellIndex}\n                            className=\"text-secondary text-start\"\n                            style={{\n                              textOverflow: 'ellipsis',\n                              overflow: 'hidden',\n                              whiteSpace: 'nowrap',\n                              maxWidth: '20ch',\n                              backgroundColor: index <= props.count-1 ?\"#cfd1d1\":\"\",\n                            }}\n                          >\n                            {isActionColumn\n                              ? cell.render('Cell')\n                              : cell.value\n                                ? cell.render('Cell')\n                                : '-'}\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td\n                    colSpan={columns.length}\n                    className=\"text-center text-dark\"\n                  >\n                    No Data Found\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n          <Col\n            className={`${\n              page.length > 0 ? 'd-flex' : 'd-none'\n            } flex-row justify-content-center align-items-center`}\n          >\n            <Col className=\"d-flex justify-content-start align-items-center flex-wrap\">\n              <span className=\"m-1\">\n                Showing{''}\n                <strong className=\"m-2\">\n                  {props.startIndex} to {props.endIndex} of{' '}\n                  <strong className=\"m-2\"> {props.totalItems} entries</strong>\n                </strong>\n              </span>\n            </Col>\n            <Col className=\" mt-3 d-none d-sm-none d-md-none d-xxl-flex d-xl-flex d-lg-flex justify-content-end align-items-center\">\n              <ReactPaginate\n                breakLabel=\"...\"\n                onPageChange={(selectedPage) =>\n                  props.setCurrentPage(selectedPage.selected + 1)\n                }\n                pageRangeDisplayed={5}\n                pageCount={props.totalPages}\n                renderOnZeroPageCount={null}\n                activeClassName={'active'}\n                pageClassName={'page-item'}\n                pageLinkClassName=\"page-link\"\n                previousClassName=\"page-item\"\n                previousLinkClassName=\"page-link\"\n                nextClassName=\"page-item\"\n                nextLinkClassName=\"page-link\"\n                containerClassName=\"pagination\"\n                previousLabel={\n                  <IconContext.Provider value={{ color: color, size: '28px' }}>\n                    <AiFillLeftCircle />\n                  </IconContext.Provider>\n                }\n                nextLabel={\n                  <IconContext.Provider value={{ color: color, size: '28px' }}>\n                    <AiFillRightCircle />\n                  </IconContext.Provider>\n                }\n              />\n            </Col>\n            <Col className=\"d-flex d-sm-flex d-md-flex d-xxl-none d-xl-none d-lg-none justify-content-end align-items-center\">\n              <Button\n                style={{ backgroundColor: color, border: 'none' }}\n                onClick={() => props.setCurrentPage(props.currentPage - 1)}\n                disabled={props.currentPage === 1}\n                className=\"m-2\"\n              >\n                <BiLeftArrow size={14} />\n              </Button>\n              <Button\n                style={{ backgroundColor: color, border: 'none' }}\n                onClick={() => {\n                  props.setCurrentPage(props.currentPage + 1);\n                }}\n                disabled={props.currentPage === props.totalPages}\n              >\n                <BiRightArrow size={14} />\n              </Button>\n            </Col>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\nexport default BasicTable;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Form,\n  Modal,\n  Spinner,\n} from 'react-bootstrap';\nimport BasicTable from '../../../components/TablePaginationComponent';\nimport { BsSearch, BsX } from 'react-icons/bs';\nimport { HiUserCircle } from 'react-icons/hi';\nimport { toast } from 'react-toastify';\nimport { getRole } from '../../../Constants/Global';\nimport FetchLoader from '../../../components/FetchLoader';\nimport {\n  useGetExportDataDownloadQuery,\n  useGetExportDataQuery,\n} from '../../../redux/api/OrdersApi';\nimport { MdOutlineFileDownload } from 'react-icons/md';\nimport * as XLSX from 'xlsx';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport NoAccess from '../../../components/NoAccess';\nimport { useTheme } from '../../../Contexts/ThemeContext';\nimport { format } from 'date-fns';\nconst UserReports = () => {\n  const { color } = useTheme();\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [startIndex, setStartIndex] = useState(1);\n  const [endIndex, setEndIndex] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalItems, setTotalItems] = useState(0);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchInput, setSearchInput] = useState('');\n  const [isSearching, setIsSearching] = useState(false);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [selectedPeriod, setSelectedPeriod] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const role = getRole();\n\n  const { data: UserReportsData, isLoading } = useGetExportDataQuery({\n    page: currentPage,\n    search: searchTerm,\n    role: role,\n    startDate: startDate,\n    endDate: endDate,\n    dayFilter: selectedPeriod,\n    type: 'user',\n    limit: '10',\n  });\n\n  const { data: downloadData, refetch } = useGetExportDataDownloadQuery({\n    role: role,\n    search: searchTerm,\n    startDate: startDate,\n    endDate: endDate,\n    dayFilter: selectedPeriod,\n    type: 'user',\n  });\n  const formatDateTime = (date) => format(new Date(date), 'dd-MMM-yyyy h:mm a');\n  useEffect(() => {\n    if (UserReportsData && UserReportsData.data) {\n      setData(UserReportsData.data);\n      setStartIndex(UserReportsData.pagination.startIndex);\n      setCurrentPage(currentPage);\n      setTotalItems(UserReportsData.pagination.totalItems);\n      setEndIndex(UserReportsData.pagination.endIndex);\n      setTotalPages(UserReportsData.pagination.totalPages);\n    }\n  }, [UserReportsData, currentPage, role]);\n\n  const handleClear = () => {\n    setSearchInput('');\n    setSearchTerm('');\n  };\n  const handleSearch = () => {\n    setIsSearching(true);\n    setSearchTerm(searchInput);\n    refetch({ page: currentPage, search: searchInput }).then(() => {\n      setIsSearching(false);\n    });\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  const handleStartDateChange = (event) => {\n    const newStartDate = event.target.value;\n    if (endDate && newStartDate >= endDate) {\n      toast.warning('Start date must be earlier than the end date.', {\n        autoClose: 2000,\n      });\n    } else {\n      setStartDate(newStartDate);\n      setSelectedPeriod('');\n    }\n  };\n\n  const handleEndDateChange = (event) => {\n    const newEndDate = event.target.value;\n    if (startDate && newEndDate < startDate) {\n      toast.warning('End date must be later than the start date.', {\n        autoClose: 2000,\n      });\n    } else {\n      setEndDate(newEndDate);\n      setSelectedPeriod('');\n    }\n  };\n\n  const handlePeriodChange = (e) => {\n    setSelectedPeriod(e.target.value);\n    setStartDate('');\n    setEndDate('');\n  };\n\n  const handleExportData = async (format) => {\n    setLoading(true);\n    try {\n      const { data, error } = downloadData;\n      if (data && Array.isArray(data)) {\n        if (data.length === 0) {\n          toast.warn('No data to export', { autoClose: 1000 });\n          return;\n        }\n\n        const reorderedData = data.map((item) => {\n          const primaryAddress =\n            item.address && item.address.length > 0\n              ? item.address.find((addr) => addr.primaryAddress === true)\n                  ?.address\n              : '-';\n\n          return {\n            s_no: item.s_no ?? '-',\n            userName: item.userName ?? '-',\n            phoneNumber: item.phoneNumber ?? '-',\n            email: item.email ?? '-',\n            dob: item.dob ?? '-',\n            address: primaryAddress ?? '-',\n            createdAt: item.createdAt ?? '-',\n            updatedAt: item.updatedAt ?? '-',\n          };\n        });\n\n        const headers = [\n          'S.No',\n          'User Name',\n          'Phone Number',\n          'Email',\n          'Date Of Birth',\n          'Address',\n          'Created At',\n          'Update At',\n        ];\n        if (format === 'xlsx') {\n          const fileName = 'exported_user.xlsx';\n          const worksheet = XLSX.utils.json_to_sheet(reorderedData);\n          XLSX.utils.sheet_add_aoa(worksheet, [headers], { origin: 'A1' });\n          const workbook = XLSX.utils.book_new();\n          XLSX.utils.book_append_sheet(workbook, worksheet, 'user');\n          XLSX.writeFile(workbook, fileName);\n          setShowModal(false);\n        } else if (format === 'pdf') {\n          try {\n            const doc = new jsPDF({\n              orientation: 'landscape',\n              format: 'a3',\n            });\n            const splitTextToSize = (text, size) => {\n              const lines = [];\n              for (let i = 0; i < text.length; i += size) {\n                lines.push(text.substring(i, i + size));\n              }\n              return lines;\n            };\n            const body = data.map((item) => {\n              const primaryAddress =\n                item.address && item.address.length > 0\n                  ? item.address.find((addr) => addr.primaryAddress === true)\n                      ?.address\n                  : '-';\n\n              return [\n                item.s_no ?? '-',\n                item.userName ?? '-',\n                item.phoneNumber ?? '-',\n                item.email ?? '-',\n                item.dob ?? '-',\n                primaryAddress ?? '-', // Use the primaryAddress\n                formatDateTime(item.createdAt) ?? '-',\n                item.updatedAt ?? '-',\n              ];\n            });\n\n            doc.autoTable({\n              head: [\n                [\n                  'S.No',\n                  'User Name',\n                  'Phone Number',\n                  'Email',\n                  'Date Of Birth',\n                  'Address',\n                  'Created At',\n                  'Update At',\n                ],\n              ],\n              body: body,\n              theme: 'striped',\n              styles: { cellWidth: 'wrap' },\n              columnStyles: { 1: { cellWidth: 'auto' } },\n            });\n            doc.save('exported_user.pdf');\n          } catch (pdfError) {\n            console.error('Error generating PDF:', pdfError);\n            toast.error('Error generating PDF', { autoClose: 1000 });\n          }\n        } else if (format === 'csv') {\n          const fileName = 'exported_user.csv';\n          const worksheet = XLSX.utils.json_to_sheet(reorderedData);\n          XLSX.utils.sheet_add_aoa(worksheet, [headers], { origin: 'A1' });\n          const csvOutput = XLSX.utils.sheet_to_csv(worksheet);\n          const blob = new Blob([csvOutput], {\n            type: 'text/csv;charset=utf-8;',\n          });\n          const link = document.createElement('a');\n          const url = URL.createObjectURL(blob);\n          link.setAttribute('href', url);\n          link.setAttribute('download', fileName);\n          link.style.visibility = 'hidden';\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }\n        setStartDate('');\n        setEndDate('');\n        setSelectedPeriod('');\n        setShowModal(false);\n      } else if (error) {\n        toast.error(error.message, { autoClose: 1000 });\n      } else {\n        toast.error('Unknown error occurred', { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error('Error exporting data:', error);\n      toast.error('Error exporting data', { autoClose: 1000 });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const COLUMNS = [\n    {\n      Header: 'ID',\n      accessor: 's_no',\n    },\n    {\n      Header: 'User Name',\n      accessor: 'userName',\n    },\n    {\n      Header: 'Phone Number',\n      accessor: 'phoneNumber',\n    },\n    {\n      Header: 'Email',\n      accessor: 'email',\n    },\n    {\n      Header: 'Date Of Birth',\n      accessor: 'dob',\n    },\n    {\n      Header: 'Address',\n      accessor: 'address',\n      Cell: ({ value }) => {\n        return value && value.length > 0 ? value[0].address : '';\n      },\n    },\n    {\n      Header: 'Created At',\n      accessor: 'createdAt',\n      Cell: ({ value }) => formatDateTime(value),\n    },\n    {\n      Header: 'Updated At',\n      accessor: 'updatedAt',\n      Cell: ({ value }) => formatDateTime(value),\n    },\n  ];\n\n  return (\n    <>\n      {isLoading ? (\n        <FetchLoader />\n      ) : (\n        <div>\n          <Container fluid className=\"mt-3 \">\n            <Row className=\"boxShadow p-4 mb-4 mt-4 align-items-center justify-content-between\">\n              <Row className=\"p-2 mb-2 mt-2 align-items-center justify-content-between\">\n                <Col xs=\"12\" md=\"auto\">\n                  <h4 className=\"fw-bold text-center text-md-start\">\n                    User Reports\n                  </h4>\n                </Col>\n              </Row>\n              <Col\n                xs=\"12\"\n                md=\"auto\"\n                className=\"d-flex flex-column flex-md-row justify-content-end align-items-center\"\n              >\n                <Form.Group\n                  controlId=\"startDate\"\n                  className=\"me-md-2 mb-3 mb-md-0 w-100 w-md-auto\"\n                >\n                  <Form.Label>Start Date:</Form.Label>\n                  <Form.Control\n                    type=\"date\"\n                    value={startDate}\n                    onChange={handleStartDateChange}\n                    disabled={selectedPeriod}\n                  />\n                </Form.Group>\n                <Form.Group\n                  controlId=\"endDate\"\n                  className=\"me-md-2 mb-3 mb-md-0 w-100 w-md-auto\"\n                >\n                  <Form.Label>End Date:</Form.Label>\n                  <Form.Control\n                    type=\"date\"\n                    value={endDate}\n                    onChange={handleEndDateChange}\n                    disabled={selectedPeriod}\n                  />\n                </Form.Group>\n                <Form.Group\n                  controlId=\"period\"\n                  className=\"me-md-2 mb-3 mb-md-0 w-100 w-md-auto\"\n                >\n                  <Form.Label>Period:</Form.Label>\n                  <Form.Select\n                    value={selectedPeriod}\n                    onChange={handlePeriodChange}\n                    disabled={startDate || endDate}\n                  >\n                    <option value=\"\">Select Period</option>\n                    <option value=\"lastWeek\">Last Week</option>\n                    <option value=\"lastMonth\">Last Month</option>\n                    <option value=\"lastYear\">Last Year</option>\n                  </Form.Select>\n                </Form.Group>\n                <Button\n                  variant=\"success\"\n                  onClick={() => setShowModal(true)}\n                  className=\"align-self-end mx-md-2 w-100 w-md-auto\"\n                >\n                  Download <MdOutlineFileDownload size={25} />\n                </Button>\n              </Col>\n            </Row>\n\n            <Row className=\"boxShadow p-3 mb-4 d-flex flex-lg-row flex-column flex-xxl-row flex-xl-row flex-sm-column flex-md-row\">\n              <Col className=\"my-4 mx-2\" xxl={3} xl={3} lg={3} sm={6} md={6}>\n                <div className=\"input-group\">\n                  <span className=\"input-group-text\">\n                    <BsSearch />\n                  </span>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search Categories...\"\n                    className=\"form-control\"\n                    value={searchInput}\n                    onChange={(e) => setSearchInput(e.target.value)}\n                    onKeyPress={handleKeyPress}\n                  />\n                  {searchInput && (\n                    <span className=\"input-group-text\" onClick={handleClear}>\n                      <BsX />\n                    </span>\n                  )}\n                </div>\n              </Col>\n              <Col\n                className=\"d-flex flex-column text-center my-4\"\n                xxl={2}\n                xl={2}\n                lg={2}\n                sm={3}\n                md={3}\n              >\n                <Button\n                  style={{ backgroundColor: color, border: 'none' }}\n                  onClick={handleSearch}\n                  disabled={isSearching || searchInput === ''}\n                >\n                  {isSearching ? (\n                    <>\n                      <Spinner\n                        as=\"span\"\n                        animation=\"border\"\n                        size=\"sm\"\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                        className=\"me-2\"\n                      />\n                      Searching...\n                    </>\n                  ) : (\n                    'Search'\n                  )}\n                </Button>\n              </Col>\n            </Row>\n            <Row className=\"boxShadow p-4 mb-4\">\n              <BasicTable\n                COLUMNS={COLUMNS}\n                MOCK_DATA={data}\n                currentPage={currentPage}\n                startIndex={startIndex}\n                endIndex={endIndex}\n                setCurrentPage={setCurrentPage}\n                totalItems={totalItems}\n                totalPages={totalPages}\n              />\n            </Row>\n          </Container>\n        </div>\n      )}\n      <Modal show={showModal} onHide={() => setShowModal(false)} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Export Data</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Button\n            variant=\"primary\"\n            className=\"m-2\"\n            onClick={() => handleExportData('pdf')}\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  className=\"me-2\"\n                />\n                Exporting PDF...\n              </>\n            ) : (\n              'Export as PDF'\n            )}\n          </Button>\n          <Button\n            variant=\"success\"\n            className=\"m-2\"\n            onClick={() => handleExportData('xlsx')}\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  className=\"me-2\"\n                />\n                Exporting Excel...\n              </>\n            ) : (\n              'Export as Excel'\n            )}\n          </Button>\n          <Button\n            variant=\"warning\"\n            className=\"m-2\"\n            onClick={() => handleExportData('csv')}\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  className=\"me-2\"\n                />\n                Exporting CSV...\n              </>\n            ) : (\n              'Export as CSV'\n            )}\n          </Button>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default UserReports;\n"],"names":["FetchLoader","_jsxs","Container","className","children","_jsx","src","loader","alt","style","width","height","props","color","useTheme","columns","useMemo","COLUMNS","data","MOCK_DATA","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","useTable","autoResetWidth","useGlobalFilter","useSortBy","usePagination","fluid","Row","Table","striped","hover","responsive","marginLeft","map","headerGroup","index","_createElement","getHeaderGroupProps","key","headers","column","getHeaderProps","concat","whiteSpace","justifyContent","alignItems","onClick","e","target","classList","contains","render","toggleSortBy","isSortedDesc","_Fragment","FaSort","length","row","getRowProps","cells","cell","cellIndex","isActionColumn","id","getCellProps","textOverflow","overflow","maxWidth","backgroundColor","count","value","colSpan","Col","startIndex","endIndex","totalItems","ReactPaginate","breakLabel","onPageChange","selectedPage","setCurrentPage","selected","pageRangeDisplayed","pageCount","totalPages","renderOnZeroPageCount","activeClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","containerClassName","previousLabel","IconContext","Provider","size","AiFillLeftCircle","nextLabel","AiFillRightCircle","Button","border","currentPage","disabled","BiLeftArrow","BiRightArrow","UserReports","setData","useState","setStartIndex","setEndIndex","setTotalPages","setTotalItems","searchTerm","setSearchTerm","searchInput","setSearchInput","isSearching","setIsSearching","startDate","setStartDate","endDate","setEndDate","selectedPeriod","setSelectedPeriod","showModal","setShowModal","loading","setLoading","role","getRole","UserReportsData","isLoading","useGetExportDataQuery","search","dayFilter","type","limit","downloadData","refetch","useGetExportDataDownloadQuery","formatDateTime","date","format","Date","useEffect","pagination","handleSearch","then","handleExportData","async","error","Array","isArray","toast","warn","autoClose","reorderedData","item","_item$address$find","_item$s_no","_item$userName","_item$phoneNumber","_item$email","_item$dob","_item$createdAt","_item$updatedAt","primaryAddress","address","find","addr","s_no","userName","phoneNumber","email","dob","createdAt","updatedAt","fileName","worksheet","XLSX","json_to_sheet","sheet_add_aoa","origin","workbook","book_new","book_append_sheet","doc","jsPDF","orientation","body","_item$address$find2","_item$s_no2","_item$userName2","_item$phoneNumber2","_item$email2","_item$dob2","_formatDateTime","_item$updatedAt2","autoTable","head","theme","styles","cellWidth","columnStyles","save","pdfError","console","csvOutput","sheet_to_csv","blob","Blob","link","document","createElement","url","URL","createObjectURL","setAttribute","visibility","appendChild","click","removeChild","message","Header","accessor","Cell","_ref","_ref2","_ref3","xs","md","Form","Group","controlId","Label","Control","onChange","event","newStartDate","warning","newEndDate","Select","variant","MdOutlineFileDownload","xxl","xl","lg","sm","BsSearch","placeholder","onKeyPress","handleClear","BsX","Spinner","as","animation","BasicTable","Modal","show","onHide","centered","closeButton","Title","Body"],"sourceRoot":""}