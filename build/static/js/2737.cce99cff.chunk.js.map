{"version":3,"file":"static/js/2737.cce99cff.chunk.js","mappings":"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","sources":["components/FetchLoader.js","components/TableComponent.js","pages/Admin/BillInformation/Preview.js"],"sourcesContent":["import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { RotatingLines } from 'react-loader-spinner'; \nimport loader from '../assests/images/loader.gif';\n\nconst FetchLoader = () => {\n  return (\n    <Container className=\"vh-100 d-flex flex-column justify-content-center align-items-center\">\n      {/* Add your GIF image below */}\n      <img \n        src={loader} \n        alt=\"Loading...\" \n        style={{ width: '150px', height: '150px' }} \n      />\n      {/* Optional: Use a text loader if needed */}\n      <div className=\"text mt-3\">Loading ...</div>\n    </Container>\n  );\n};\n\nexport default FetchLoader;\n","import React, { useMemo } from 'react';\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from 'react-table';\nimport { Container, Row, Table } from 'react-bootstrap';\nimport { FaSort } from 'react-icons/fa';\n\nimport './FilterComponent.css';\n\nconst BasicTable = (props) => {\n  const columns = useMemo(() => props.COLUMNS, [props.COLUMNS]);\n  const data = useMemo(() => props.MOCK_DATA || [], [props.MOCK_DATA]);\n  const { getTableProps, getTableBodyProps, headerGroups, prepareRow, page } =\n    useTable(\n      {\n        columns,\n        data,\n        autoResetWidth: false,\n      },\n      useGlobalFilter,\n      useSortBy,\n      usePagination\n    );\n\n  return (\n    <div>\n      <Container fluid className=\"ml-xxl-n4 ml-xl-n4 ml-lg-n4\">\n        <Row className=\"d-flex  flex-lg-row flex-column flex-xxl-row flex-xl-row flex-sm-column flex-md-row\">\n          <Table\n            className=\"justify-content-center align-items-center\"\n            striped\n            bordered\n            hover\n            {...getTableProps()}\n            responsive={true}\n            style={{ width: '100%', marginLeft: '25px' }}\n          >\n            <thead>\n              {headerGroups.map((headerGroup, index) => (\n                <tr {...headerGroup.getHeaderGroupProps()} key={index}>\n                  {headerGroup.headers.map((column, index) => (\n                    <th\n                      {...column.getHeaderProps()}\n                      key={index}\n                      className=\"text-center text-dark\"\n                      style={{\n                        width: `${column.width}px`,\n                        whiteSpace: 'nowrap',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                      }}\n                      onClick={(e) => {\n                        if (\n                          !e.target.classList.contains('fa-sort') &&\n                          column.render('Header') !== 'ACTIONS'\n                        ) {\n                          column.toggleSortBy(!column.isSortedDesc);\n                        }\n                      }}\n                    >\n                      {column.render('Header') === 'ACTIONS' ? (\n                        <>{column.render('Header')}</>\n                      ) : (\n                        <div>\n                          {column.render('Header')}\n                          <FaSort className=\"mx-2\" />\n                        </div>\n                      )}\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {page.length > 0 ? (\n                page.map((row, index) => {\n                  prepareRow(row);\n                  return (\n                    <tr {...row.getRowProps()} key={index}>\n                      {row.cells.map((cell, cellIndex) => {\n                        const isActionColumn = cell.column.id === 'action';\n                        return (\n                          <td\n                            {...cell.getCellProps()}\n                            key={cellIndex}\n                            className=\"text-secondary text-start\"\n                            style={{\n                              textOverflow: 'ellipsis',\n                              overflow: 'hidden',\n                              whiteSpace: 'nowrap',\n                              maxWidth: '20ch',\n                            }}\n                          >\n                            {isActionColumn\n                              ? cell.render('Cell')\n                              : cell.value\n                                ? cell.render('Cell')\n                                : '-'}\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td\n                    colSpan={columns.length}\n                    className=\"text-center text-dark\"\n                  >\n                    No Data Found\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </Row>\n      </Container>\n    </div>\n  );\n};\nexport default BasicTable;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  Col,\n  Container,\n  Form,\n  Modal,\n  Row,\n  Spinner,\n} from 'react-bootstrap';\nimport BasicTable from '../../../components/TableComponent';\nimport {\n  useCalculateChargesMutation,\n} from '../../../redux/api/BillInformationApi';\nimport { BsSearch, BsX } from 'react-icons/bs';\nimport { MdDelete } from 'react-icons/md';\nimport { getRole } from '../../../Constants/Global';\nimport FetchLoader from '../../../components/FetchLoader';\nimport { toast } from 'react-toastify';\nimport { useTheme } from '../../../Contexts/ThemeContext';\nimport { FaArrowRight, FaCalculator, FaEdit } from 'react-icons/fa';\nimport {useParams } from 'react-router-dom';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { useGetPreviewQuery } from '../../../redux/api/PreviewApi';\n\n\nconst BillInformation = () => {\n  const { color } = useTheme();\n  const [data, setData] = useState([]);\n  const [billSummary, setBillSummary] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchInput, setSearchInput] = useState('');\n  const [billId, setBillId] = useState('');\n  const [editId, setEditId] = useState(null);\n  const [calculateCharge, setCalculateCharge] = useState('');\n  const [chargesCalculated, setChargesCalculated] = useState(false);\n  const [isSearching, setIsSearching] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [editDescription, setEditDescription] = useState('');\n  const [editComponent, setEditComponent] = useState('');\n  const [editLabourCharge, setEditLabourCharge] = useState('');\n  const [editServiceCharge, setEditServiceCharge] = useState('');\n  const [showEditModal, setShowEditModal] = useState(false);\n\n  const { requestId } = useParams();\n  const role = getRole();\n\n  const {\n    data: PreviewData,\n    isLoading,\n    refetch,\n  } = useGetPreviewQuery({\n    search: searchTerm,\n    requestId: requestId,\n    role: role,\n  });\n\n  const [CalculateCharges] = useCalculateChargesMutation();\n\n\n  useEffect(() => {\n    if (PreviewData && PreviewData.data) {\n      setData(PreviewData.data.details);\n      setBillSummary(PreviewData.data.userDetails);\n      setBillId(PreviewData.data.billId);\n\n    }\n  }, [PreviewData, role]);\n\n  const handleClear = () => {\n    setSearchInput('');\n    setSearchTerm('');\n  };\n\n  const handleSearch = () => {\n    setIsSearching(true);\n    setSearchTerm(searchInput);\n    refetch({ search: searchInput }).then(() => {\n      setIsSearching(false);\n    });\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  \n\n\n  const handleEditShow = (id) => {\n    const editPreview = PreviewData.data.details.find((d) => d._id === id);\n\n    if (editPreview) {\n      setEditId(id);\n      setEditDescription(editPreview.description);\n      setEditComponent(editPreview.component);\n      setEditLabourCharge(editPreview.serviceCharge);\n      setEditServiceCharge(editPreview.labourCharge);\n      setShowEditModal(true);\n    }\n  };\n\n  const ShowEditModal = () => {\n    setShowEditModal(false);\n    setEditId(null);\n    setEditDescription('');\n    setEditComponent('');\n    setEditLabourCharge('');\n    setEditServiceCharge('');\n  };\n\n  const handleCalculateCharges = async () => {\n    setLoading(true);\n    try {\n      const response = await CalculateCharges({\n        id: billId,\n        role: role,\n      });\n\n      if (response.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        setChargesCalculated(true);\n        setCalculateCharge(response.data.message);\n        refetch();\n      } else {\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const COLUMNS = [\n    {\n      Header: 'ID',\n      accessor: (d, i) => i + 1,\n    },\n    {\n      Header: 'Description',\n      accessor: 'description',\n    },\n    {\n      Header: 'Component',\n      accessor: 'component',\n    },\n    {\n      Header: 'Labour Charger',\n      accessor: 'labourCharge',\n    },\n    {\n      Header: 'Service Charge',\n      accessor: 'serviceCharge',\n    },\n\n    {\n      Header: 'ACTIONS',\n      accessor: 'action',\n      Cell: (props) => {\n        const rowIdx = props.row.original._id;\n        return (\n          <div className=\"d-flex align-items-center justify-content-center flex-row\">\n <Button variant=\"warning\" onClick={() => handleEditShow(rowIdx)}>\n              <FaEdit />\n            </Button>\n          </div>\n        );\n      },\n    },\n  ];\n\n  return (\n    <div>\n      {isLoading ? (\n        <FetchLoader />\n      ) : (\n        <>\n          <Container fluid className=\"mt-3 reduced-width-row\">\n            <Row className=\"boxShadow p-4 mb-4\">\n              <Col className=\"d-flex flex-row justify-content-between mt-1\">\n                <Col className=\"d-flex justify-content-start mb-3 mt-3\">\n                  <h4 className=\"mx-3\">\n                    <AiOutlineArrowLeft />\n                  </h4>\n                  <h4 className=\"fw-bold\">Preview</h4>\n                </Col>\n              </Col>\n            </Row>\n\n            <Row className=\"boxShadow p-4 mb-3 d-flex flex-row\">\n              <Col className=\"my-2 mx-2\" xxl={3} xl={3} lg={3} sm={6} md={6}>\n                <div className=\"input-group\">\n                  <span className=\"input-group-text\">\n                    <BsSearch />\n                  </span>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search Preview...\"\n                    className=\"form-control\"\n                    value={searchInput}\n                    onChange={(e) => setSearchInput(e.target.value)}\n                    onKeyPress={handleKeyPress}\n                  />\n                  {searchInput && (\n                    <span className=\"input-group-text\" onClick={handleClear}>\n                      <BsX />\n                    </span>\n                  )}\n                </div>\n              </Col>\n              <Col\n                className=\"d-flex flex-column text-center my-2\"\n                xxl={2}\n                xl={2}\n                lg={2}\n                sm={3}\n                md={3}\n              >\n                <Button\n                  style={{ backgroundColor: color, border: 'none' }}\n                  onClick={handleSearch}\n                  disabled={isSearching || searchInput === ''}\n                >\n                  {isSearching ? (\n                    <>\n                      <Spinner\n                        as=\"span\"\n                        animation=\"border\"\n                        size=\"sm\"\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                        className=\"me-2\"\n                      />\n                      Searching...\n                    </>\n                  ) : (\n                    'Search'\n                  )}\n                </Button>\n              </Col>\n            </Row>\n\n            <Row className=\"boxShadow p-4 mb-4\">\n              <BasicTable COLUMNS={COLUMNS} MOCK_DATA={data} />\n\n              {chargesCalculated && (\n                <Col className=\"text-end mt-3\">\n                  <Button\n                    style={{ backgroundColor: color }}\n                    onClick={handlePreview}\n                  >\n                    Preview <FaArrowRight size={20} />\n                  </Button>\n                </Col>\n              )}\n            </Row>\n\n            <Row className=\"boxShadow p-4 mb-4 mt-3\">\n              <h4 className=\"fw-bold text-center mb-3\">Bill Summary</h4>\n\n              <Col className='text-center'>\n                <p>\n                  <strong>Total Labour Charges:</strong>{' '}\n                  {calculateCharge.labour}\n                </p>\n                <p>\n                  <strong>Total Service Charges:</strong>{' '}\n                  {calculateCharge.service}\n                </p>\n                <p>\n                  <strong>Total Charges:</strong> {calculateCharge.totalCharges}\n                </p>\n                <p\n                  style={{\n                    fontSize: '28px',\n                    color: '#1758ad',\n                    fontWeight: 'bold',\n                  }}\n                >\n                  <strong>To Be Paid:</strong> {calculateCharge.toBePaid}\n                </p>\n\n                {!chargesCalculated && (\n                  <p className=\"mt-5\">\n                    <Button\n                      style={{ backgroundColor: color }}\n                      onClick={handleCalculateCharges}\n                      disabled={loading}\n                    >\n                      {loading ? (\n                        <>\n                          <Spinner\n                            as=\"span\"\n                            animation=\"border\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                            className=\"me-2\"\n                          />\n                          Calculate Charge...\n                        </>\n                      ) : (\n                        'Calculate Charge'\n                      )}\n                      <FaCalculator size={20} style={{ marginLeft: '8px' }} />\n                    </Button>\n                  </p>\n                )}\n              </Col>\n            </Row>\n          </Container>\n\n\n          <Modal show={showEditModal} onHide={() => setShowEditModal(false)} centered>\n            <Modal.Header closeButton>\n              <Modal.Title>Edit Preview</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Form>\n                <Form.Group controlId=\"formDescription\">\n                  <Form.Label>Description:</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={editDescription}\n                    onChange={(e) =>\n                      setEditDescription(e.target.value)\n                    }\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formComponent\"className='mt-2'>\n                  <Form.Label>Component:</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={editComponent}\n                    onChange={(e) =>\n                      setEditComponent(e.target.value)\n                    }\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formLabourCharge\"className='mt-2'>\n                  <Form.Label>Labour Charge:</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    value={editLabourCharge}\n                    onChange={(e) =>\n                      setEditLabourCharge(e.target.value)\n                    }\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formServiceCharge\"className='mt-2'>\n                  <Form.Label>Service Charge:</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    value={editServiceCharge}\n                    onChange={(e) =>\n                      setEditServiceCharge(e.target.value)\n                    }\n                  />\n                </Form.Group>\n              </Form>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={ShowEditModal}>\n                Close\n              </Button>\n              <Button style={{backgroundColor:color}} onClick={\"\"}>\n              Update\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </>\n      )}\n\n    </div>\n  );\n};\n\nexport default BillInformation;\n"],"names":["FetchLoader","_jsxs","Container","className","children","_jsx","src","loader","alt","style","width","height","props","columns","useMemo","COLUMNS","data","MOCK_DATA","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","useTable","autoResetWidth","useGlobalFilter","useSortBy","usePagination","fluid","Row","Table","striped","bordered","hover","responsive","marginLeft","map","headerGroup","index","_createElement","getHeaderGroupProps","key","headers","column","getHeaderProps","concat","whiteSpace","justifyContent","alignItems","onClick","e","target","classList","contains","render","toggleSortBy","isSortedDesc","_Fragment","FaSort","length","row","getRowProps","cells","cell","cellIndex","isActionColumn","id","getCellProps","textOverflow","overflow","maxWidth","value","colSpan","BillInformation","color","useTheme","setData","useState","billSummary","setBillSummary","searchTerm","setSearchTerm","searchInput","setSearchInput","billId","setBillId","editId","setEditId","calculateCharge","setCalculateCharge","chargesCalculated","setChargesCalculated","isSearching","setIsSearching","loading","setLoading","editDescription","setEditDescription","editComponent","setEditComponent","editLabourCharge","setEditLabourCharge","editServiceCharge","setEditServiceCharge","showEditModal","setShowEditModal","requestId","useParams","role","getRole","PreviewData","isLoading","refetch","useGetPreviewQuery","search","CalculateCharges","useCalculateChargesMutation","useEffect","details","userDetails","handleSearch","then","Header","accessor","d","i","Cell","rowIdx","original","_id","Button","variant","editPreview","find","description","component","serviceCharge","labourCharge","handleEditShow","FaEdit","Col","AiOutlineArrowLeft","xxl","xl","lg","sm","md","BsSearch","type","placeholder","onChange","onKeyPress","handleClear","BsX","backgroundColor","border","disabled","Spinner","as","animation","size","BasicTable","handlePreview","FaArrowRight","labour","service","totalCharges","fontSize","fontWeight","toBePaid","async","response","toast","success","message","autoClose","error","console","FaCalculator","Modal","show","onHide","centered","closeButton","Title","Body","Form","Group","controlId","Label","Control","Footer","ShowEditModal"],"sourceRoot":""}