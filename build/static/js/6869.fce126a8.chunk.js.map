{"version":3,"file":"static/js/6869.fce126a8.chunk.js","mappings":"yMAKA,MAeA,EAfoBA,KAEhBC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,UAAU,sEAAqEC,SAAA,EAExFC,EAAAA,EAAAA,KAAA,OACEC,IAAKC,EACLC,IAAI,aACJC,MAAO,CAAEC,MAAO,QAASC,OAAQ,YAGnCN,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SAAC,kB,mECb1B,MAAMQ,EAAoBC,IAAmB,IAAlB,SAAET,GAAUS,EAC5C,OACEZ,EAAAA,EAAAA,MAAA,MAAIE,UAAU,cAAaC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,SAAC,WACtBA,GACDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,SAAC,aACpB,EAIIU,EAAUC,IAAmB,IAAlB,SAAEX,GAAUW,EAClC,OAAOV,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAaC,SAAEA,GAAc,C,sJCNpD,MA0BA,EA1BgBS,IAAuB,IAAtB,QAAEG,EAAU,IAAIH,EAC/B,OACEZ,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACe,OAAK,EAACd,UAAU,OAAMC,SAAA,EAC/BC,EAAAA,EAAAA,KAACO,EAAAA,EAAiB,CAAAR,SAAC,wBAClBY,EAAQE,OAAS,GAChBb,EAAAA,EAAAA,KAAAc,EAAAA,SAAA,CAAAf,SACGY,EAAQI,KAAKC,IACZhB,EAAAA,EAAAA,KAACiB,EAAAA,EAAe,IAAsBD,GAAhBA,EAAOE,UAIjClB,EAAAA,EAAAA,KAAAc,EAAAA,SAAA,CAAAf,UACEC,EAAAA,EAAAA,KAACmB,EAAAA,EAAG,CAACrB,UAAU,0BAAyBC,UACtCC,EAAAA,EAAAA,KAACoB,EAAAA,EAAG,CAACC,GAAG,OAAOvB,UAAU,2CAA0CC,UACjEH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAACsB,EAAAA,EAAW,KACZtB,EAAAA,EAAAA,KAACS,EAAAA,EAAO,CAAAV,SAAC,gCAMT,E,0BCvBhB,MAgBA,EAhBqBwB,KACnB,MAAOZ,EAASa,IAAcC,EAAAA,EAAAA,UAAS,KAC/BC,KAAMC,EAAU,UAAEC,EAAS,WAAEC,IAAeC,EAAAA,EAAAA,MAOpD,OANAC,EAAAA,EAAAA,YAAU,KACJJ,GAAcA,EAAWD,MAC3BF,EAAqB,OAAVG,QAAU,IAAVA,OAAU,EAAVA,EAAYD,KACzB,GACC,CAACC,EAAYhB,KAGdX,EAAAA,EAAAA,KAACH,EAAAA,EAAS,CAAAE,SACP8B,GAAa7B,EAAAA,EAAAA,KAACL,EAAAA,EAAW,KAAMK,EAAAA,EAAAA,KAACgC,EAAO,CAACrB,QAASA,KACxC,C","sources":["components/FetchLoader.js","components/Heading.js","pages/Review/Review.js","pages/Review/FooterReview.js"],"sourcesContent":["import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { RotatingLines } from 'react-loader-spinner'; \nimport loader from '../assests/images/loader.gif';\n\nconst FetchLoader = () => {\n  return (\n    <Container className=\"vh-100 d-flex flex-column justify-content-center align-items-center\">\n      {/* Add your GIF image below */}\n      <img \n        src={loader} \n        alt=\"Loading...\" \n        style={{ width: '150px', height: '150px' }} \n      />\n      {/* Optional: Use a text loader if needed */}\n      <div className=\"text mt-3\">Loading ...</div>\n    </Container>\n  );\n};\n\nexport default FetchLoader;\n","import React from 'react';\n\nexport const HeadingWithQuotes = ({ children }) => {\n  return (\n    <h4 className=\"text-center\">\n      <span className=\"main\">“</span>\n      {children}\n      <span className=\"main\">”</span>\n    </h4>\n  );\n};\n\nexport const Heading = ({ children }) => {\n  return <h4 className=\"text-center\">{children}</h4>;\n};\n","import React from 'react';\nimport { Col, Container, Row, } from 'react-bootstrap';\nimport ReviewComponent from '../../components/ReviewComponent';\nimport { Heading, HeadingWithQuotes } from '../../components/Heading';\nimport NoAccess from '../../components/NoAccess';\nimport NoDataFound from '../../components/NoDataFound';\n\nconst Reviews = ({ reviews = [] }) => {\n  return (\n    <Container fluid className=\"mt-5\">\n      <HeadingWithQuotes>Ratings and Reviews</HeadingWithQuotes>\n      {reviews.length > 0 ? (\n        <>\n          {reviews.map((review) => (\n            <ReviewComponent key={review._id} {...review} />\n          ))}\n        </>\n      ) : (\n        <>\n          <Row className=\"justify-content-center \">\n            <Col xs=\"auto\" className=\"justify-content-center align-item-center\">\n              <div>\n                <NoDataFound />\n                <Heading>No Reviews Found</Heading>\n              </div>\n            </Col>\n          </Row>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Reviews;\n","import React, { useEffect, useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport Reviews from './Review';\nimport { useGetUserReviewsQuery } from '../../redux/api/ReviewsApi';\nimport FetchLoader from '../../components/FetchLoader';\n\nconst FooterReview = () => {\n  const [reviews, setReviews] = useState([]);\n  const { data: ReviewData, isLoading, isFetching } = useGetUserReviewsQuery();\n  useEffect(() => {\n    if (ReviewData && ReviewData.data) {\n      setReviews(ReviewData?.data);\n    }\n  }, [ReviewData, reviews]);\n\n  return (\n    <Container>\n      {isFetching ? <FetchLoader /> : <Reviews reviews={reviews} />}\n    </Container>\n  );\n};\n\nexport default FooterReview;\n"],"names":["FetchLoader","_jsxs","Container","className","children","_jsx","src","loader","alt","style","width","height","HeadingWithQuotes","_ref","Heading","_ref2","reviews","fluid","length","_Fragment","map","review","ReviewComponent","_id","Row","Col","xs","NoDataFound","FooterReview","setReviews","useState","data","ReviewData","isLoading","isFetching","useGetUserReviewsQuery","useEffect","Reviews"],"sourceRoot":""}