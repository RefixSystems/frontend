{"version":3,"file":"static/js/7724.d6666aa9.chunk.js","mappings":"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","sources":["components/FetchLoader.js","components/TableComponent.js","pages/Admin/BillInformation/BillInformation.js","../node_modules/react-select/dist/react-select.esm.js"],"sourcesContent":["import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { RotatingLines } from 'react-loader-spinner'; \nimport loader from '../assests/images/loader.gif';\n\nconst FetchLoader = () => {\n  return (\n    <Container className=\"vh-100 d-flex flex-column justify-content-center align-items-center\">\n      {/* Add your GIF image below */}\n      <img \n        src={loader} \n        alt=\"Loading...\" \n        style={{ width: '150px', height: '150px' }} \n      />\n      {/* Optional: Use a text loader if needed */}\n      <div className=\"text mt-3\">Loading ...</div>\n    </Container>\n  );\n};\n\nexport default FetchLoader;\n","import React, { useMemo } from 'react';\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from 'react-table';\nimport { Container, Row, Table } from 'react-bootstrap';\nimport { FaSort } from 'react-icons/fa';\n\nimport './FilterComponent.css';\n\nconst BasicTable = (props) => {\n  const columns = useMemo(() => props.COLUMNS, [props.COLUMNS]);\n  const data = useMemo(() => props.MOCK_DATA || [], [props.MOCK_DATA]);\n  const { getTableProps, getTableBodyProps, headerGroups, prepareRow, page } =\n    useTable(\n      {\n        columns,\n        data,\n        autoResetWidth: false,\n      },\n      useGlobalFilter,\n      useSortBy,\n      usePagination\n    );\n\n  return (\n    <div>\n      <Container fluid className=\"ml-xxl-n4 ml-xl-n4 ml-lg-n4\">\n        <Row className=\"d-flex  flex-lg-row flex-column flex-xxl-row flex-xl-row flex-sm-column flex-md-row\">\n          <Table\n            className=\"justify-content-center align-items-center\"\n            striped\n            bordered\n            hover\n            {...getTableProps()}\n            responsive={true}\n            style={{ width: '100%', marginLeft: '25px' }}\n          >\n            <thead>\n              {headerGroups.map((headerGroup, index) => (\n                <tr {...headerGroup.getHeaderGroupProps()} key={index}>\n                  {headerGroup.headers.map((column, index) => (\n                    <th\n                      {...column.getHeaderProps()}\n                      key={index}\n                      className=\"text-center text-dark\"\n                      style={{\n                        width: `${column.width}px`,\n                        whiteSpace: 'nowrap',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                      }}\n                      onClick={(e) => {\n                        if (\n                          !e.target.classList.contains('fa-sort') &&\n                          column.render('Header') !== 'ACTIONS'\n                        ) {\n                          column.toggleSortBy(!column.isSortedDesc);\n                        }\n                      }}\n                    >\n                      {column.render('Header') === 'ACTIONS' ? (\n                        <>{column.render('Header')}</>\n                      ) : (\n                        <div>\n                          {column.render('Header')}\n                          <FaSort className=\"mx-2\" />\n                        </div>\n                      )}\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {page.length > 0 ? (\n                page.map((row, index) => {\n                  prepareRow(row);\n                  return (\n                    <tr {...row.getRowProps()} key={index}>\n                      {row.cells.map((cell, cellIndex) => {\n                        const isActionColumn = cell.column.id === 'action';\n                        return (\n                          <td\n                            {...cell.getCellProps()}\n                            key={cellIndex}\n                            className=\"text-secondary text-start\"\n                            style={{\n                              textOverflow: 'ellipsis',\n                              overflow: 'hidden',\n                              whiteSpace: 'nowrap',\n                              maxWidth: '20ch',\n                            }}\n                          >\n                            {isActionColumn\n                              ? cell.render('Cell')\n                              : cell.value\n                                ? cell.render('Cell')\n                                : '-'}\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td\n                    colSpan={columns.length}\n                    className=\"text-center text-dark\"\n                  >\n                    No Data Found\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </Row>\n      </Container>\n    </div>\n  );\n};\nexport default BasicTable;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  Col,\n  Container,\n  Form,\n  Modal,\n  Row,\n  Spinner,\n} from 'react-bootstrap';\nimport BasicTable from '../../../components/TableComponent';\nimport {\n  useAddComponentMutation,\n  useCalculateChargesMutation,\n  useDeleteBillInformationMutation,\n  useGetComponentQuery,\n  useUpdateBillMutation,\n} from '../../../redux/api/BillInformationApi';\nimport DeleteModel from '../../../components/DeleteModel';\nimport { MdDelete } from 'react-icons/md';\nimport { getRole } from '../../../Constants/Global';\nimport FetchLoader from '../../../components/FetchLoader';\nimport { toast } from 'react-toastify';\nimport { useTheme } from '../../../Contexts/ThemeContext';\nimport { format } from 'date-fns';\nimport { useGetBillInformationQuery } from '../../../redux/api/BillInformationApi';\nimport { FaArrowRight, FaCalculator, FaEdit, FaPlus } from 'react-icons/fa';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport Select from 'react-select';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\n\nconst BillInformation = () => {\n  const { color } = useTheme();\n  const [data, setData] = useState([]);\n  const [componentData, setComponentData] = useState([]);\n  const [billSummary, setBillSummary] = useState(null);\n  const [deleteShow, setDeleteShow] = useState(false);\n  const [idToDelete, setIdToDelete] = useState('');\n  const [billId, setBillId] = useState('');\n  const [orderId, setOrderId] = useState('');\n  const [editId, setEditId] = useState(null);\n  const [editDescription, setEditDescription] = useState('');\n  const [editComponent, setEditComponent] = useState('');\n  const [editLabourCharge, setEditLabourCharge] = useState('');\n  const [editServiceCharge, setEditServiceCharge] = useState('');\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [addDescription, setAddDescription] = useState('');\n  const [addComponent, setAddComponent] = useState('');\n  const [addLabourCharge, setAddLabourCharge] = useState('');\n  const [addServiceCharge, setAddServiceCharge] = useState('');\n  const [showAddComponentModal, setShowAddComponentModal] = useState(false);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const { id } = useParams();\n  const Id = id.startsWith(':') ? id.slice(1) : id;\n  const role = getRole();\n\n  const {\n    data: BillInformationData,\n    isLoading,\n    refetch,\n  } = useGetBillInformationQuery({\n    id: Id,\n    role: role,\n  });\n\n  const { data: ComponentData } = useGetComponentQuery({\n    role: role,\n  });\n\n  const [CalculateCharges] = useCalculateChargesMutation();\n  const [UpdateBillApi] = useUpdateBillMutation();\n  const [deleteBillInformationApi] = useDeleteBillInformationMutation();\n  const [addComponentApi] = useAddComponentMutation();\n  const formatDateTime = (date) => format(new Date(date), 'dd-MMM-yyyy h:mm a');\n\n  const navigate = useNavigate();\n  const handleGenerateBill = () => {\n    navigate(`/admin/orders`);\n  };\n\n  useEffect(() => {\n    if (BillInformationData && BillInformationData.data) {\n      setData(BillInformationData.data.billDetails);\n      setBillSummary(BillInformationData.data.userDetails);\n      setBillId(BillInformationData.data.billId);\n      setOrderId(BillInformationData.data.orderId);\n    }\n  }, [BillInformationData, role]);\n\n  useEffect(() => {\n    if (ComponentData && ComponentData.data) {\n      setComponentData(ComponentData.data);\n    }\n  }, [ComponentData, role]);\n\n  const deleteHandleClose = () => setDeleteShow(false);\n\n  const deleteHandleShow = (id) => {\n    setIdToDelete(id);\n    setDeleteShow(true);\n  };\n\n  const deleteBillInformation = async () => {\n    try {\n      const response = await deleteBillInformationApi({\n        billid: billId,\n        id: idToDelete,\n        role: role,\n      });\n      setDeleteShow(false);\n      setIdToDelete('');\n      if (response?.data) {\n        toast.success(response?.data?.message, { autoClose: 1000 });\n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleAddBill = () => {\n    setShowAddModal(true);\n  };\n\n  const handleAddModalClose = () => {\n    setShowAddModal(false);\n    setFormData({});\n  };\n\n  const handleFormChange = (name, value) => {\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleAddComponent = async () => {\n    if (!formData) {\n      toast.error('Please fill the fields', { autoClose: 1000 });\n      return;\n    }\n    setLoading(true);\n\n    try {\n      const data = {\n        descriptionName: formData.descriptionName,\n      };\n      const response = await addComponentApi({\n        id: orderId,\n        role: role,\n        data: data,\n      });\n\n      if (response.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        setShowAddModal(false);\n        refetch();\n        setFormData('');\n      } else {\n        toast.error(response.error.data.error, { autoClose: 1000 });\n        setFormData('');\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditShow = (id) => {\n    const editComponent = data.find((d) => d._id === id);\n\n    if (editComponent) {\n      setEditId(id);\n      setEditDescription(editComponent.description);\n      setEditComponent(editComponent.component);\n      setEditLabourCharge(editComponent.labourCharge);\n      setEditServiceCharge(editComponent.serviceCharge);\n      setShowEditModal(true);\n    }\n  };\n\n  const ShowEditModal = () => {\n    setShowEditModal(false);\n    setEditId(null);\n    setEditDescription('');\n    setEditComponent('');\n    setEditLabourCharge('');\n    setEditServiceCharge('');\n  };\n\n  const handleEditComponent = async () => {\n    setLoading(true);\n\n    try {\n      const data = {\n        description: editDescription,\n        component: editComponent,\n        labourCharge: editLabourCharge,\n        serviceCharge: editServiceCharge,\n      };\n      const response = await UpdateBillApi({\n        billid: billId,\n        id: editId,\n        role: role,\n        data: data,\n      });\n\n      if (response.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        setShowEditModal(false);\n        refetch();\n        setEditDescription('');\n        setEditComponent('');\n        setEditLabourCharge('');\n        setEditServiceCharge('');\n      } else {\n        toast.error(response.error.data.error, { autoClose: 1000 });\n        setShowEditModal(false);\n        setEditDescription('');\n        setEditComponent('');\n        setEditLabourCharge('');\n        setEditServiceCharge('');\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddComponentModal = () => {\n    setShowAddModal(false);\n    setShowAddComponentModal(true);\n  };\n\n  const handleAddComponentClose = () => {\n    setShowAddComponentModal(false);\n    setAddDescription('');\n    setAddComponent('');\n    setAddLabourCharge('');\n    setAddServiceCharge('');\n  };\n\n  const handleAddComponentTable = async () => {\n    if (\n      !addDescription ||\n      !addComponent ||\n      !addLabourCharge ||\n      !addServiceCharge\n    ) {\n      toast.error('Please fill the fields', { autoClose: 1000 });\n      return;\n    }\n    setLoading(true);\n\n    try {\n      const data = {\n        description: addDescription,\n        component: addComponent,\n        labourCharge: addLabourCharge,\n        serviceCharge: addServiceCharge,\n      };\n      const response = await addComponentApi({\n        id: orderId,\n        role: role,\n        data: data,\n      });\n\n      if (response.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        setShowAddComponentModal(false);\n        refetch();\n        setEditDescription('');\n        setEditComponent('');\n        setEditLabourCharge('');\n        setEditServiceCharge('');\n      } else {\n        toast.error(response.error.data.error, { autoClose: 1000 });\n        setShowAddComponentModal(false);\n        setEditDescription('');\n        setEditComponent('');\n        setEditLabourCharge('');\n        setEditServiceCharge('');\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCalculateCharges = async () => {\n    setLoading(true);\n    try {\n      const response = await CalculateCharges({\n        id: billId,\n        role: role,\n      });\n\n      if (response.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        refetch();\n      } else {\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const COLUMNS = [\n    {\n      Header: 'ID',\n      accessor: (d, i) => i + 1,\n    },\n    {\n      Header: 'Description',\n      accessor: 'description',\n    },\n    {\n      Header: 'Component',\n      accessor: 'component',\n    },\n    {\n      Header: 'Labour Charger',\n      accessor: 'labourCharge',\n    },\n    {\n      Header: 'Service Charge',\n      accessor: 'serviceCharge',\n    },\n\n    {\n      Header: 'ACTIONS',\n      accessor: 'action',\n      Cell: (props) => {\n        const rowIdx = props.row.original._id;\n        return (\n          <div className=\"d-flex align-items-center justify-content-center flex-row\">\n            <Button variant=\"warning\" onClick={() => handleEditShow(rowIdx)}>\n              <FaEdit />\n            </Button>\n            <Button\n              variant=\"danger\"\n              className=\"m-1 mx-2\"\n              onClick={() => deleteHandleShow(rowIdx)}\n            >\n              <MdDelete />\n            </Button>\n          </div>\n        );\n      },\n    },\n  ];\n\n  return (\n    <div>\n      {isLoading ? (\n        <FetchLoader />\n      ) : (\n        <>\n          <Container fluid className=\"mt-3 reduced-width-row\">\n            <Row className=\"boxShadow p-4 mb-4\">\n              <Col className=\"d-flex flex-row justify-content-between mt-1\">\n                <Col className=\"d-flex justify-content-start mb-3 mt-3\">\n                  <h4 className=\"fw-bold\">Bill Information</h4>\n                </Col>\n                <div>\n                  <Button\n                    onClick={handleAddBill}\n                    style={{ backgroundColor: color, border: 'none' }}\n                    className=\"p-2 m-1\"\n                  >\n                    <FaPlus size={20} />\n                    <span className=\"d-none d-md-inline\"> Add Bill</span>\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n\n            <Row className=\"boxShadow p-4 mb-4 mt-3\">\n              <h4 className=\"fw-bold text-center mb-3\">Bill Summary</h4>\n\n              {billSummary && (\n                <Col>\n                  <p>\n                    <strong>Type:</strong> {billSummary.type}\n                  </p>\n                  <p>\n                    <strong>User Name:</strong> {billSummary.userName}\n                  </p>\n                  <p>\n                    <strong>Address:</strong> {billSummary.address}\n                  </p>\n                  <p>\n                    <strong>Email:</strong> {billSummary.email}\n                  </p>\n                  <p>\n                    <strong>Phone Number:</strong> {billSummary.phoneNumber}\n                  </p>\n                  <p>\n                    <strong>Alternate PhoneNumber:</strong>{' '}\n                    {billSummary.alternatePhoneNumber}\n                  </p>\n                  <p>\n                    <strong>Request Id:</strong> {billSummary.requestId}\n                  </p>\n                  <p>\n                    <strong>Created At:</strong>{' '}\n                    {formatDateTime(billSummary.createdAt)}\n                  </p>\n                </Col>\n              )}\n\n              <Col>\n                <p>\n                  <strong>Total Labour Charges:</strong>{' '}\n                  {BillInformationData.data?.labourCharges}\n                </p>\n                <p>\n                  <strong>Total Service Charges:</strong>{' '}\n                  {BillInformationData.data?.serviceCharges}\n                </p>\n                <p>\n                  <strong>Total Charges Before GST:</strong>{' '}\n                  {BillInformationData.data?.totalChargesBeforeGST}\n                </p>\n                <p>\n                  <strong>GST:</strong>{' '}\n                  {BillInformationData.data?.GST}\n                </p>\n                <p\n                  style={{\n                    fontSize: '28px',\n                    color: '#1758ad',\n                    fontWeight: 'bold',\n                  }}\n                >\n                  <strong>Total:</strong> {BillInformationData.data.toBePaid}\n                </p>\n                <p style={{marginTop:\"75px\"}}> \n                  <strong>Total Amount Paid:</strong>{' '}\n                  {billSummary?.totalAmountPaid}\n                </p>\n                {/* <p className=\"mt-5\">\n                  <Button\n                    style={{ backgroundColor: color }}\n                    onClick={handleCalculateCharges}\n                    disabled={loading}\n                  >\n                    {loading ? (\n                      <>\n                        <Spinner\n                          as=\"span\"\n                          animation=\"border\"\n                          size=\"sm\"\n                          role=\"status\"\n                          aria-hidden=\"true\"\n                          className=\"me-2\"\n                        />\n                        Calculate Charge...\n                      </>\n                    ) : (\n                      'Calculate Charge'\n                    )}\n                    <FaCalculator size={20} style={{ marginLeft: '8px' }} />\n                  </Button>\n                </p> */}\n              </Col>\n            </Row>\n\n            <Row className=\"boxShadow p-4 mb-4\">\n              <BasicTable COLUMNS={COLUMNS} MOCK_DATA={data} />\n\n              <Col className=\"text-end mt-3\">\n                <Button\n                  style={{ backgroundColor: color }}\n                  onClick={handleGenerateBill}\n                >\n                  Generate Bill <FaArrowRight size={20} />\n                </Button>\n              </Col>\n            </Row>\n\n            {/* Add Bill Modal */}\n            <Modal show={showAddModal} onHide={handleAddModalClose} centered>\n              <Modal.Header closeButton>\n                <Modal.Title>Add Bill</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form>\n                  <Form.Group controlId=\"formComponent\">\n                    <Form.Label>Component</Form.Label>\n                    <Select\n                      options={componentData.map((component) => ({\n                        value: component,\n                        label: component,\n                      }))}\n                      onChange={(selectedOption) =>\n                        handleFormChange(\n                          'descriptionName',\n                          selectedOption.value\n                        )\n                      }\n                    />\n                  </Form.Group>\n                </Form>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button\n                  style={{ backgroundColor: color }}\n                  onClick={handleAddComponentModal}\n                >\n                  Add Manually\n                </Button>\n                <Button\n                  style={{ backgroundColor: color, border: 'none' }}\n                  onClick={handleAddComponent}\n                  disabled={loading}\n                >\n                  {loading ? (\n                    <>\n                      <Spinner\n                        as=\"span\"\n                        animation=\"border\"\n                        size=\"sm\"\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                        className=\"me-2\"\n                      />\n                      Add...\n                    </>\n                  ) : (\n                    'Add'\n                  )}\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </Container>\n        </>\n      )}\n\n      <DeleteModel\n        YES={deleteBillInformation}\n        DELETESTATE={deleteShow}\n        ONCLICK={deleteHandleClose}\n        DESCRIPTION=\"Are you sure you want to delete this BillInformation\"\n        DELETETITLE=\"Bill Information\"\n      />\n\n      <Modal\n        show={showEditModal}\n        onHide={() => setShowEditModal(false)}\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Component</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"formDescription\">\n              <Form.Label>Description:</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={editDescription}\n                onChange={(e) => setEditDescription(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formComponent\" className=\"mt-2\">\n              <Form.Label>Component:</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={editComponent}\n                onChange={(e) => setEditComponent(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formLabourCharge\" className=\"mt-2\">\n              <Form.Label>Labour Charge:</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={editLabourCharge}\n                onChange={(e) => setEditLabourCharge(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formServiceCharge\" className=\"mt-2\">\n              <Form.Label>Service Charge:</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={editServiceCharge}\n                onChange={(e) => setEditServiceCharge(e.target.value)}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={ShowEditModal}>\n            Close\n          </Button>\n          <Button\n            style={{ backgroundColor: color }}\n            onClick={handleEditComponent}\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  className=\"me-2\"\n                />\n                Update...\n              </>\n            ) : (\n              'Update'\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        show={showAddComponentModal}\n        onHide={handleAddComponentClose}\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add Manually</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"formDescription\">\n              <Form.Label>Description:</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={addDescription}\n                placeholder='Enter the description here'\n                onChange={(e) => setAddDescription(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formComponent\" className=\"mt-2\">\n              <Form.Label>Component:</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={addComponent}\n                placeholder='Enter the component here'\n                onChange={(e) => setAddComponent(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formLabourCharge\" className=\"mt-2\">\n              <Form.Label>Labour Charge:</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={addLabourCharge}\n                placeholder='Enter the labour charge here'\n                onChange={(e) => setAddLabourCharge(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formServiceCharge\" className=\"mt-2\">\n              <Form.Label>price of the component:</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={addServiceCharge}\n                placeholder='Enter the price here'\n                onChange={(e) => setAddServiceCharge(e.target.value)}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleAddComponentClose}>\n            Close\n          </Button>\n          <Button\n            style={{ backgroundColor: color }}\n            onClick={handleAddComponentTable}\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  className=\"me-2\"\n                />\n                Add...\n              </>\n            ) : (\n              'Add'\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default BillInformation;\n","import { u as useStateManager } from './useStateManager-7e1e8489.esm.js';\nexport { u as useStateManager } from './useStateManager-7e1e8489.esm.js';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { forwardRef, useMemo } from 'react';\nimport { S as Select } from './Select-49a62830.esm.js';\nexport { c as createFilter, d as defaultTheme, m as mergeStyles } from './Select-49a62830.esm.js';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\nexport { c as components } from './index-a301f526.esm.js';\nimport '@babel/runtime/helpers/objectSpread2';\nimport '@babel/runtime/helpers/slicedToArray';\nimport '@babel/runtime/helpers/objectWithoutProperties';\nimport '@babel/runtime/helpers/classCallCheck';\nimport '@babel/runtime/helpers/createClass';\nimport '@babel/runtime/helpers/inherits';\nimport '@babel/runtime/helpers/createSuper';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport 'memoize-one';\nimport '@babel/runtime/helpers/typeof';\nimport '@babel/runtime/helpers/taggedTemplateLiteral';\nimport '@babel/runtime/helpers/defineProperty';\nimport 'react-dom';\nimport '@floating-ui/dom';\nimport 'use-isomorphic-layout-effect';\n\nvar StateManagedSelect = /*#__PURE__*/forwardRef(function (props, ref) {\n  var baseSelectProps = useStateManager(props);\n  return /*#__PURE__*/React.createElement(Select, _extends({\n    ref: ref\n  }, baseSelectProps));\n});\nvar StateManagedSelect$1 = StateManagedSelect;\n\nvar NonceProvider = (function (_ref) {\n  var nonce = _ref.nonce,\n    children = _ref.children,\n    cacheKey = _ref.cacheKey;\n  var emotionCache = useMemo(function () {\n    return createCache({\n      key: cacheKey,\n      nonce: nonce\n    });\n  }, [cacheKey, nonce]);\n  return /*#__PURE__*/React.createElement(CacheProvider, {\n    value: emotionCache\n  }, children);\n});\n\nexport { NonceProvider, StateManagedSelect$1 as default };\n"],"names":["FetchLoader","_jsxs","Container","className","children","_jsx","src","loader","alt","style","width","height","props","columns","useMemo","COLUMNS","data","MOCK_DATA","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","useTable","autoResetWidth","useGlobalFilter","useSortBy","usePagination","fluid","Row","Table","striped","bordered","hover","responsive","marginLeft","map","headerGroup","index","_createElement","getHeaderGroupProps","key","headers","column","getHeaderProps","concat","whiteSpace","justifyContent","alignItems","onClick","e","target","classList","contains","render","toggleSortBy","isSortedDesc","_Fragment","FaSort","length","row","getRowProps","cells","cell","cellIndex","isActionColumn","id","getCellProps","textOverflow","overflow","maxWidth","value","colSpan","BillInformation","_BillInformationData$","_BillInformationData$2","_BillInformationData$3","_BillInformationData$4","color","useTheme","setData","useState","componentData","setComponentData","billSummary","setBillSummary","deleteShow","setDeleteShow","idToDelete","setIdToDelete","billId","setBillId","orderId","setOrderId","editId","setEditId","editDescription","setEditDescription","editComponent","setEditComponent","editLabourCharge","setEditLabourCharge","editServiceCharge","setEditServiceCharge","showEditModal","setShowEditModal","addDescription","setAddDescription","addComponent","setAddComponent","addLabourCharge","setAddLabourCharge","addServiceCharge","setAddServiceCharge","showAddComponentModal","setShowAddComponentModal","showAddModal","setShowAddModal","formData","setFormData","loading","setLoading","useParams","Id","startsWith","slice","role","getRole","BillInformationData","isLoading","refetch","useGetBillInformationQuery","ComponentData","useGetComponentQuery","CalculateCharges","useCalculateChargesMutation","UpdateBillApi","useUpdateBillMutation","deleteBillInformationApi","useDeleteBillInformationMutation","addComponentApi","useAddComponentMutation","navigate","useNavigate","useEffect","billDetails","userDetails","handleAddComponentClose","Header","accessor","d","i","Cell","rowIdx","original","_id","Button","variant","find","description","component","labourCharge","serviceCharge","handleEditShow","FaEdit","deleteHandleShow","MdDelete","Col","handleAddBill","backgroundColor","border","FaPlus","size","type","userName","address","email","phoneNumber","alternatePhoneNumber","requestId","date","createdAt","format","Date","labourCharges","serviceCharges","totalChargesBeforeGST","GST","fontSize","fontWeight","toBePaid","marginTop","totalAmountPaid","BasicTable","handleGenerateBill","FaArrowRight","Modal","show","onHide","handleAddModalClose","centered","closeButton","Title","Body","Form","Group","controlId","Label","Select","options","label","onChange","selectedOption","handleFormChange","name","prev","Footer","handleAddComponentModal","async","descriptionName","response","toast","success","message","autoClose","error","console","disabled","Spinner","as","animation","DeleteModel","YES","billid","_response$data","_response$error","DELETESTATE","ONCLICK","deleteHandleClose","DESCRIPTION","DELETETITLE","Control","ShowEditModal","placeholder","StateManagedSelect$1","forwardRef","ref","baseSelectProps","useStateManager","React","_extends"],"sourceRoot":""}