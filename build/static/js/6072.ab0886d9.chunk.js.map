{"version":3,"file":"static/js/6072.ab0886d9.chunk.js","mappings":"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","sources":["components/TablePaginationComponent.js","pages/Admin/UserList/UserList.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from 'react-table';\nimport { Button, Col, Container, Row, Table } from 'react-bootstrap';\nimport { BiLeftArrow, BiRightArrow } from 'react-icons/bi';\nimport { FaSort } from 'react-icons/fa';\nimport { AiFillLeftCircle, AiFillRightCircle } from 'react-icons/ai';\nimport ReactPaginate from 'react-paginate';\nimport { IconContext } from 'react-icons/lib';\nimport './FilterComponent.css';\nimport { useTheme } from '../Contexts/ThemeContext';\n\nconst BasicTable = (props) => {\n  const { color } = useTheme();\n  const columns = useMemo(() => props.COLUMNS, [props.COLUMNS]);\n  const data = useMemo(() => props.MOCK_DATA || [], [props.MOCK_DATA]);\n  const { getTableProps, getTableBodyProps, headerGroups, prepareRow, page } =\n    useTable(\n      {\n        columns,\n        data,\n        autoResetWidth: false,\n      },\n      useGlobalFilter,\n      useSortBy,\n      usePagination\n    );\n\n  return (\n    <div>\n      <Container fluid className=\"ml-xxl-n4 ml-xl-n4 ml-lg-n4\">\n        <Row>\n          <Table\n            className=\"justify-content-center align-items-center\"\n            striped\n            hover\n            {...getTableProps()}\n            responsive={true}\n            style={{ width: '100%', marginLeft: '25px' }}\n          >\n            <thead>\n              {headerGroups.map((headerGroup, index) => (\n                <tr {...headerGroup.getHeaderGroupProps()} key={index}>\n                  {headerGroup.headers.map((column, index) => (\n                    <th\n                      {...column.getHeaderProps()}\n                      key={index}\n                      className=\"text-center text-dark\"\n                      style={{\n                        width: `${column.width}px`,\n                        whiteSpace: 'nowrap',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                      }}\n                      onClick={(e) => {\n                        // Check if the click was not on the sort icon and if the column is not \"ACTIONS\"\n                        if (\n                          !e.target.classList.contains('fa-sort') &&\n                          column.render('Header') !== 'ACTIONS'\n                        ) {\n                          // Change sorting on a single tap\n                          column.toggleSortBy(!column.isSortedDesc);\n                        }\n                      }}\n                    >\n                      {column.render('Header') === 'ACTIONS' ? (\n                        <>{column.render('Header')}</>\n                      ) : (\n                        <div>\n                          {column.render('Header')}\n                          <FaSort className=\"mx-2\" />\n                        </div>\n                      )}\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {page.length > 0 ? (\n                page.map((row, index) => {\n                  prepareRow(row);\n                  return (\n                    <tr {...row.getRowProps()} key={index}>\n                      {row.cells.map((cell, cellIndex) => {\n                        const isActionColumn =\n                          cell.column.id === 'action' ||\n                          cell.column.id === 'localShop' ||\n                          cell.column.id === 'serviceCenter' ||\n                          cell.column.id === 'ourServices' ||\n                          cell.column.id === 'addInCarousel';\n                        return (\n                          <td\n                            {...cell.getCellProps()}\n                            key={cellIndex}\n                            className=\"text-secondary text-start\"\n                            style={{\n                              textOverflow: 'ellipsis',\n                              overflow: 'hidden',\n                              whiteSpace: 'nowrap',\n                              maxWidth: '20ch',\n                              backgroundColor: index <= props.count-1 ?\"#cfd1d1\":\"\",\n                            }}\n                          >\n                            {isActionColumn\n                              ? cell.render('Cell')\n                              : cell.value\n                                ? cell.render('Cell')\n                                : '-'}\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td\n                    colSpan={columns.length}\n                    className=\"text-center text-dark\"\n                  >\n                    No Data Found\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n          <Col\n            className={`${\n              page.length > 0 ? 'd-flex' : 'd-none'\n            } flex-row justify-content-center align-items-center`}\n          >\n            <Col className=\"d-flex justify-content-start align-items-center flex-wrap\">\n              <span className=\"m-1\">\n                Showing{''}\n                <strong className=\"m-2\">\n                  {props.startIndex} to {props.endIndex} of{' '}\n                  <strong className=\"m-2\"> {props.totalItems} entries</strong>\n                </strong>\n              </span>\n            </Col>\n            <Col className=\" mt-3 d-none d-sm-none d-md-none d-xxl-flex d-xl-flex d-lg-flex justify-content-end align-items-center\">\n              <ReactPaginate\n                breakLabel=\"...\"\n                onPageChange={(selectedPage) =>\n                  props.setCurrentPage(selectedPage.selected + 1)\n                }\n                pageRangeDisplayed={5}\n                pageCount={props.totalPages}\n                renderOnZeroPageCount={null}\n                activeClassName={'active'}\n                pageClassName={'page-item'}\n                pageLinkClassName=\"page-link\"\n                previousClassName=\"page-item\"\n                previousLinkClassName=\"page-link\"\n                nextClassName=\"page-item\"\n                nextLinkClassName=\"page-link\"\n                containerClassName=\"pagination\"\n                previousLabel={\n                  <IconContext.Provider value={{ color: color, size: '28px' }}>\n                    <AiFillLeftCircle />\n                  </IconContext.Provider>\n                }\n                nextLabel={\n                  <IconContext.Provider value={{ color: color, size: '28px' }}>\n                    <AiFillRightCircle />\n                  </IconContext.Provider>\n                }\n              />\n            </Col>\n            <Col className=\"d-flex d-sm-flex d-md-flex d-xxl-none d-xl-none d-lg-none justify-content-end align-items-center\">\n              <Button\n                style={{ backgroundColor: color, border: 'none' }}\n                onClick={() => props.setCurrentPage(props.currentPage - 1)}\n                disabled={props.currentPage === 1}\n                className=\"m-2\"\n              >\n                <BiLeftArrow size={14} />\n              </Button>\n              <Button\n                style={{ backgroundColor: color, border: 'none' }}\n                onClick={() => {\n                  props.setCurrentPage(props.currentPage + 1);\n                }}\n                disabled={props.currentPage === props.totalPages}\n              >\n                <BiRightArrow size={14} />\n              </Button>\n            </Col>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\nexport default BasicTable;\n","import React, { useState, useEffect } from 'react';\nimport { Button, Col, Container, Row, Spinner } from 'react-bootstrap';\nimport BasicTable from '../../../components/TablePaginationComponent';\nimport {\n  useDeleteUserListMutation,\n  useGetUserListQuery,\n} from '../../../redux/api/UserListApi';\nimport { BsSearch, BsX } from 'react-icons/bs';\nimport { HiMiniUserCircle } from 'react-icons/hi2';\nimport DeleteModel from '../../../components/DeleteModel';\nimport { MdDelete } from 'react-icons/md';\nimport { getRole } from '../../../Constants/Global';\nimport FetchLoader from '../../../components/FetchLoader';\nimport NoAccess from '../../../components/NoAccess';\nimport { toast } from 'react-toastify';\nimport { useTheme } from '../../../Contexts/ThemeContext';\nimport { format } from 'date-fns';\nimport ServerError from '../../../components/ServerError';\nimport { getPhoneNumber } from '../../../Constants/PhoneNumberGlobal';\n\nconst UserList = () => {\n  const { color } = useTheme();\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [startIndex, setStartIndex] = useState(1);\n  const [endIndex, setEndIndex] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalItems, setTotalItem] = useState();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchInput, setSearchInput] = useState('');\n  const [deleteShow, setDeleteShow] = useState(false);\n  const [idToDelete, setIdToDelete] = useState('');\n  const [isSearching, setIsSearching] = useState(false);\n  // const [fullAccess, setFullAccess] = useState(false);\n  const [hasServerError, setHasServerError] = useState(false);\n  const [count, setCount] = useState(0);\n  const [read, setRead] = useState(false);\n  const formatDateTime = (date) => format(new Date(date), 'dd-MMM-yyyy h:mm a');\n\n  const role = getRole();\n  const phoneNumber = getPhoneNumber();\n\n  const {\n    data: UserListData,\n    isLoading,\n    refetch,\n    isError,\n    error,\n  } = useGetUserListQuery({\n    page: currentPage,\n    search: searchTerm,\n    role: role,\n    phoneNumber:phoneNumber,\n  });\n  const [deleteUserListApi] = useDeleteUserListMutation();\n\n  useEffect(() => {\n    if (UserListData && UserListData.data) {\n    \n      setData(UserListData.data);\n      setStartIndex(UserListData.pagination.startIndex);\n      setCurrentPage(currentPage);\n      setTotalItem(UserListData.pagination.totalItems);\n      setEndIndex(UserListData.pagination.endIndex);\n      setTotalPages(UserListData.pagination.totalPages);\n      // setFullAccess(UserListData.moduleAccess.fullAccess);\n      setRead(UserListData.moduleAccess.read);\n      setCount(UserListData.userCount);\n    }\n\n    if (isError && error?.status === 500) {\n      setHasServerError(true);\n    } else {\n      setHasServerError(false);\n    }\n  }, [UserListData, currentPage, role,error,isError]);\n\n\n  const handleClear = () => {\n    setSearchInput('');\n    setSearchTerm('');\n  };\n\n  const handleSearch = () => {\n    setIsSearching(true);\n    setSearchTerm(searchInput);\n    refetch({ page: currentPage, search: searchInput }).then(() => {\n      setIsSearching(false);\n    });\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  const deleteHandleClose = () => setDeleteShow(false);\n\n  const deleteHandleShow = (id) => {\n    setIdToDelete(id);\n    setDeleteShow(true);\n  };\n\n  const deleteUserList = async () => {\n    try {\n      const response = await deleteUserListApi({ id: idToDelete, role: role });\n      setDeleteShow(false);\n      setIdToDelete('');\n      if (response?.data) {\n        toast.success(response?.data?.message, { autoClose: 1000 });\n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const COLUMNS = [\n    {\n      Header: 'ID',\n      accessor: 's_no',\n    },\n    {\n      Header: 'Profile Image',\n      accessor: 'profileImage',\n      Cell: (props) => {\n        const imageUrl = props.value;\n        return imageUrl ? (\n          <img\n            src={imageUrl}\n            alt=\"Profile\"\n            style={{\n              width: '50px',\n              height: '50px',\n              borderRadius: '100%',\n            }}\n          />\n        ) : (\n          <HiMiniUserCircle size={50} />\n        );\n      },\n    },\n    {\n      Header: 'User Name',\n      accessor: 'userName',\n    },\n    {\n      Header: 'Phone Number',\n      accessor: 'phoneNumber',\n    },\n    {\n      Header: 'Email',\n      accessor: 'email',\n    },\n    {\n      Header: 'Date Of Birth',\n      accessor: 'dob',\n    },\n    {\n      Header: 'Address',\n      accessor: 'address',\n      Cell: ({ value }) => {\n        return value && value.length > 0 ? value[0].address : '';\n      },\n    },\n\n    {\n      Header: 'Created At',\n      accessor: 'createdAt',\n      Cell: ({ value }) => formatDateTime(value),\n    },\n    {\n      Header: 'Updated At',\n      accessor: 'updatedAt',\n      Cell: ({ value }) => formatDateTime(value),\n    },\n  ];\n\n  // if (fullAccess) {\n  //   COLUMNS.push({\n  //     Header: 'ACTIONS',\n  //     accessor: 'action',\n  //     Cell: (props) => {\n  //       const rowIdx = props.row.original._id;\n  //       return (\n  //         <div className=\"d-flex align-items-center justify-content-center flex-row\">\n  //           <Button\n  //             variant=\"danger\"\n  //             className=\"m-1\"\n  //             onClick={() => deleteHandleShow(rowIdx)}\n  //           >\n  //             <MdDelete />\n  //           </Button>\n  //         </div>\n  //       );\n  //     },\n  //   });\n  // }\n\n  return (\n    <div>\n    {isLoading ? (\n      <FetchLoader />\n    ) : (\n      <>\n        {hasServerError ? (\n         <ServerError/>\n        ) : read ? (\n          <Container fluid className=\"mt-3 reduced-width-row \">\n            <Row className=\"boxShadow p-4 mb-4 mt-4  \">\n              <Col className=\"d-flex flex-row justify-content-between mt-1\">\n                <h4 className=\"fw-bold \"> User List</h4>\n              </Col>\n            </Row>\n\n            <Row className=\"  boxShadow p-4  mb-3 mt-3 d-flex  flex-lg-row flex-column flex-xxl-row flex-xl-row flex-sm-column flex-md-row\">\n              <Col className=\"my-2 mx-2 \" xxl={3} xl={3} lg={3} sm={6} md={6}>\n                <div className=\"input-group\">\n                  <span className=\"input-group-text\">\n                    <BsSearch />\n                  </span>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search UserList...\"\n                    className=\"form-control\"\n                    value={searchInput}\n                    onChange={(e) => setSearchInput(e.target.value)}\n                    onKeyPress={handleKeyPress}\n                  />\n                  {searchInput && (\n                    <span className=\"input-group-text\" onClick={handleClear}>\n                      <BsX />\n                    </span>\n                  )}\n                </div>\n              </Col>\n              <Col\n                className=\"d-flex flex-column text-center my-2 \"\n                xxl={2}\n                xl={2}\n                lg={2}\n                sm={3}\n                md={3}\n              >\n                <Button\n                  style={{ backgroundColor: color, border: 'none' }}\n                  onClick={handleSearch}\n                  disabled={isSearching || searchInput === ''}\n                >\n                  {isSearching ? (\n                    <>\n                      <Spinner\n                        as=\"span\"\n                        animation=\"border\"\n                        size=\"sm\"\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                        className=\"me-2\"\n                      />\n                      Searching...\n                    </>\n                  ) : (\n                    'Search'\n                  )}\n                </Button>\n              </Col>\n            </Row>\n\n            <Row className=\"boxShadow p-4 mb-4 \">\n              <BasicTable\n                COLUMNS={COLUMNS}\n                MOCK_DATA={data}\n                currentPage={currentPage}\n                startIndex={startIndex}\n                endIndex={endIndex}\n                setCurrentPage={setCurrentPage}\n                totalItems={totalItems}\n                totalPages={totalPages}\n                count={count}\n             \n              />\n            </Row>\n          </Container>\n        ) : (\n          <NoAccess />\n        )}\n      </>\n    )}\n\n\n      <DeleteModel\n        YES={deleteUserList}\n        DELETESTATE={deleteShow}\n        ONCLICK={deleteHandleClose}\n        DESCRIPTION=\"Are you sure you want to delete this userlist\"\n        DELETETITLE=\"UserList\"\n      />\n    </div>\n  );\n};\n\nexport default UserList;\n"],"names":["props","color","useTheme","columns","useMemo","COLUMNS","data","MOCK_DATA","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","useTable","autoResetWidth","useGlobalFilter","useSortBy","usePagination","_jsx","children","Container","fluid","className","_jsxs","Row","Table","striped","hover","responsive","style","width","marginLeft","map","headerGroup","index","_createElement","getHeaderGroupProps","key","headers","column","getHeaderProps","concat","whiteSpace","justifyContent","alignItems","onClick","e","target","classList","contains","render","toggleSortBy","isSortedDesc","_Fragment","FaSort","length","row","getRowProps","cells","cell","cellIndex","isActionColumn","id","getCellProps","textOverflow","overflow","maxWidth","backgroundColor","count","value","colSpan","Col","startIndex","endIndex","totalItems","ReactPaginate","breakLabel","onPageChange","selectedPage","setCurrentPage","selected","pageRangeDisplayed","pageCount","totalPages","renderOnZeroPageCount","activeClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","containerClassName","previousLabel","IconContext","Provider","size","AiFillLeftCircle","nextLabel","AiFillRightCircle","Button","border","currentPage","disabled","BiLeftArrow","BiRightArrow","UserList","setData","useState","setStartIndex","setEndIndex","setTotalPages","setTotalItem","searchTerm","setSearchTerm","searchInput","setSearchInput","deleteShow","setDeleteShow","idToDelete","setIdToDelete","isSearching","setIsSearching","hasServerError","setHasServerError","setCount","read","setRead","formatDateTime","date","format","Date","role","getRole","phoneNumber","getPhoneNumber","UserListData","isLoading","refetch","isError","error","useGetUserListQuery","search","deleteUserListApi","useDeleteUserListMutation","useEffect","pagination","moduleAccess","userCount","status","handleSearch","then","Header","accessor","Cell","imageUrl","src","alt","height","borderRadius","HiMiniUserCircle","_ref","address","_ref2","_ref3","FetchLoader","ServerError","xxl","xl","lg","sm","md","BsSearch","type","placeholder","onChange","onKeyPress","handleClear","BsX","Spinner","as","animation","BasicTable","NoAccess","DeleteModel","YES","async","response","_response$data","_response$error","toast","success","message","autoClose","console","DELETESTATE","ONCLICK","deleteHandleClose","DESCRIPTION","DELETETITLE"],"sourceRoot":""}