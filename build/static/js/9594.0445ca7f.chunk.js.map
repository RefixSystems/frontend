{"version":3,"file":"static/js/9594.0445ca7f.chunk.js","mappings":"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","sources":["components/DragAndDropImageUpload.js","components/ImageVideoDragUpload.js","components/InputImageAndVideo.js","components/InputVideo.js","components/TableComponent.js","pages/Admin/Settingss/General.js"],"sourcesContent":["import React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Form } from 'react-bootstrap';\nimport { FiUploadCloud } from 'react-icons/fi';\nimport { useTheme } from '../Contexts/ThemeContext';\nimport { toast } from 'react-toastify';\n\nconst DragAndDropImageUpload = ({\n  setFieldValue = () => {},\n  touched = {},\n  errors = {},\n  labelText = 'Upload Image',\n  nameText = 'image',\n  accepts = { 'image/*': ['.png', '.jpeg', '.jpg', '.svg', '.webp', '.gif'] },\n  handleFileChange = null,\n  disabled = false,\n}) => {\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept: accepts || '',\n    onDrop: (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      const fileExtension = file.name.split('.').pop().toLowerCase();\n      const acceptedExtensions = accepts['image/*'].map((ext) =>\n        ext.replace('.', '').toLowerCase().trim()\n      );\n      if (acceptedExtensions.includes(fileExtension)) {\n        setFieldValue(nameText, file);\n        if (handleFileChange) {\n          handleFileChange(file);\n        }\n      } else {\n        toast.warning(`This file type not accepted`, {\n          autoClose: 2000,\n          position: 'bottom-center',\n        });\n      }\n    },\n\n    onDropRejected: (rejectedFiles) => {\n      toast.warning(`This file type not accepted`, {\n        autoClose: 2000,\n        position: 'bottom-center',\n      });\n    },\n    disabled: disabled,\n  });\n  const { color } = useTheme();\n\n  return (\n    <>\n      <Form.Group>\n        <Form.Label>\n          {labelText} <span className=\"text-danger\"></span>\n        </Form.Label>\n        <div\n          {...getRootProps()}\n          className={`form-control dropzone ${isDragActive ? 'active' : ''} ${\n            touched[nameText] && errors[nameText] ? 'is-invalid' : ''\n          }`}\n          style={{\n            border: '2px dashed #ced4da',\n            padding: '20px',\n            textAlign: 'center',\n            borderRadius: '5px',\n            cursor: disabled ? 'not-allowed' : 'pointer',\n            background: isDragActive ? '#f8f9fa' : 'transparent',\n          }}\n        >\n          <input {...getInputProps()} disabled={disabled} />\n          {isDragActive ? (\n            <p>Drop the files here...</p>\n          ) : (\n            <>\n              <FiUploadCloud size={50} color={color} />\n              <p>Drag & drop an image here, or click to select one</p>\n            </>\n          )}\n        </div>\n        {touched[nameText] && errors[nameText] && (\n          <p className=\"text-danger\">{errors[nameText]}</p>\n        )}\n      </Form.Group>\n    </>\n  );\n};\n\nexport default DragAndDropImageUpload;\n","import React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Form } from 'react-bootstrap';\nimport { FiUploadCloud } from 'react-icons/fi';\nimport { useTheme } from '../Contexts/ThemeContext';\nimport { toast } from 'react-toastify';\n\nconst DragAndDropFileUpload = ({\n  setFieldValue = () => {},\n  touched = {},\n  errors = {},\n  labelText = 'Upload File',\n  nameText = 'file',\n  accepts = { \n    'image/*': ['.png', '.jpeg', '.jpg', '.svg', '.webp','.gif'], \n    'video/*': ['.mp4', '.avi', '.mov', '.mkv']\n  },\n  handleFileChange = null,\n  disabled = false,\n}) => {\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept: accepts || '',\n    onDrop: (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      const fileExtension = file.name.split('.').pop().toLowerCase();\n      const acceptedExtensions = [\n        ...accepts['image/*'],\n        ...accepts['video/*']\n      ].map((ext) => ext.replace('.', '').toLowerCase().trim());\n      \n      if (acceptedExtensions.includes(fileExtension)) {\n        setFieldValue(nameText, file);\n        if (handleFileChange) {\n          handleFileChange(file);\n        }\n      } else {\n        toast.warning(`This file type is not accepted`, {\n          autoClose: 2000,\n          position: 'bottom-center',\n        });\n      }\n    },\n    onDropRejected: (rejectedFiles) => {\n      toast.warning(`This file type is not accepted`, {\n        autoClose: 2000,\n        position: 'bottom-center',\n      });\n    },\n    disabled: disabled,\n  });\n\n  const { color } = useTheme();\n\n  return (\n    <>\n      <Form.Group>\n        <Form.Label>\n          {labelText} <span className=\"text-danger\"></span>\n        </Form.Label>\n        <div\n          {...getRootProps()}\n          className={`form-control dropzone ${isDragActive ? 'active' : ''} ${\n            touched[nameText] && errors[nameText] ? 'is-invalid' : ''\n          }`}\n          style={{\n            border: '2px dashed #ced4da',\n            padding: '20px',\n            textAlign: 'center',\n            borderRadius: '5px',\n            cursor: disabled ? 'not-allowed' : 'pointer',\n            background: isDragActive ? '#f8f9fa' : 'transparent',\n          }}\n        >\n          <input {...getInputProps()} disabled={disabled} />\n          {isDragActive ? (\n            <p>Drop the files here...</p>\n          ) : (\n            <>\n              <FiUploadCloud size={50} color={color} />\n              <p>Drag & drop an image or video here, or click to select one</p>\n            </>\n          )}\n        </div>\n        {touched[nameText] && errors[nameText] && (\n          <p className=\"text-danger\">{errors[nameText]}</p>\n        )}\n      </Form.Group>\n    </>\n  );\n};\n\n\nexport default DragAndDropFileUpload;\n\n","\nimport React from 'react';\n\nconst InputImage = ({ image, valueImage }) => {\n  const isValidImage = image && (Array.isArray(image) ? image.length > 0 : true);\n\n  const imageSrc =\n    valueImage !== image\n      ? image\n      : image instanceof File\n      ? URL.createObjectURL(image)\n      : image;\n  const isVideo =\n    image instanceof File &&\n    ['video/mp4', 'video/avi', 'video/mov', 'video/mkv'].includes(image.type);\n\n  return (\n    <>\n      {isValidImage ? (\n        isVideo ? (\n          <video\n            width={100}\n            height={70}\n            controls\n            className=\"mt-3\"\n            style={{ objectFit: 'contain' }}\n          >\n            <source src={imageSrc} type={image.type} />\n            Your browser does not support the video tag.\n          </video>\n        ) : (\n          <img\n            src={imageSrc}\n            width={100}\n            height={70}\n            alt=\"image\"\n            className=\"mt-3\"\n            style={{ objectFit: 'contain' }}\n          />\n        )\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default InputImage;\n","import React from 'react';\n\nconst InputVideo = ({ video, valueVideo }) => {\n  const isValidVideo =\n    video && (Array.isArray(video) ? video.length > 0 : true);\n  const videoSrc =\n    valueVideo !== video\n      ? video\n      : video instanceof File\n        ? URL.createObjectURL(video)\n        : video;\n\n  return (\n    <>\n      {isValidVideo ? (\n        <video\n          src={videoSrc}\n          width={300}\n          height={200}\n          controls\n          className=\"mt-3\"\n          style={{ objectFit: 'contain' }}\n        >\n          Your browser does not support the video tag.\n        </video>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default InputVideo;\n","import React, { useMemo } from 'react';\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from 'react-table';\nimport { Container, Row, Table } from 'react-bootstrap';\nimport { FaSort } from 'react-icons/fa';\n\nimport './FilterComponent.css';\n\nconst BasicTable = (props) => {\n  const columns = useMemo(() => props.COLUMNS, [props.COLUMNS]);\n  const data = useMemo(() => props.MOCK_DATA || [], [props.MOCK_DATA]);\n  const { getTableProps, getTableBodyProps, headerGroups, prepareRow, page } =\n    useTable(\n      {\n        columns,\n        data,\n        autoResetWidth: false,\n      },\n      useGlobalFilter,\n      useSortBy,\n      usePagination\n    );\n\n  return (\n    <div>\n      <Container fluid className=\"ml-xxl-n4 ml-xl-n4 ml-lg-n4\">\n        <Row className=\"d-flex  flex-lg-row flex-column flex-xxl-row flex-xl-row flex-sm-column flex-md-row\">\n          <Table\n            className=\"justify-content-center align-items-center\"\n            striped\n            bordered\n            hover\n            {...getTableProps()}\n            responsive={true}\n            style={{ width: '100%', marginLeft: '25px' }}\n          >\n            <thead>\n              {headerGroups.map((headerGroup, index) => (\n                <tr {...headerGroup.getHeaderGroupProps()} key={index}>\n                  {headerGroup.headers.map((column, index) => (\n                    <th\n                      {...column.getHeaderProps()}\n                      key={index}\n                      className=\"text-center text-dark\"\n                      style={{\n                        width: `${column.width}px`,\n                        whiteSpace: 'nowrap',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                      }}\n                      onClick={(e) => {\n                        if (\n                          !e.target.classList.contains('fa-sort') &&\n                          column.render('Header') !== 'ACTIONS'\n                        ) {\n                          column.toggleSortBy(!column.isSortedDesc);\n                        }\n                      }}\n                    >\n                      {column.render('Header') === 'ACTIONS' ? (\n                        <>{column.render('Header')}</>\n                      ) : (\n                        <div>\n                          {column.render('Header')}\n                          <FaSort className=\"mx-2\" />\n                        </div>\n                      )}\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {page.length > 0 ? (\n                page.map((row, index) => {\n                  prepareRow(row);\n                  return (\n                    <tr {...row.getRowProps()} key={index}>\n                      {row.cells.map((cell, cellIndex) => {\n                        const isActionColumn = cell.column.id === 'action';\n                        return (\n                          <td\n                            {...cell.getCellProps()}\n                            key={cellIndex}\n                            className=\"text-secondary text-start\"\n                            style={{\n                              textOverflow: 'ellipsis',\n                              overflow: 'hidden',\n                              whiteSpace: 'nowrap',\n                              maxWidth: '20ch',\n                            }}\n                          >\n                            {isActionColumn\n                              ? cell.render('Cell')\n                              : cell.value\n                                ? cell.render('Cell')\n                                : '-'}\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td\n                    colSpan={columns.length}\n                    className=\"text-center text-dark\"\n                  >\n                    No Data Found\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </Row>\n      </Container>\n    </div>\n  );\n};\nexport default BasicTable;\n","import React, { useEffect, useState } from 'react';\nimport { Col, Modal, Button, Row, Form, Spinner } from 'react-bootstrap';\nimport { FaEdit, FaPlus, FaTrash } from 'react-icons/fa';\nimport { toast } from 'react-toastify';\nimport {\n  useGetGeneralQuery,\n  useDeleteLaptopBrandMutation,\n  useAddBrandMutation,\n  useAddLinkMutation,\n  useAddBannerMutation,\n  useDeleteBannerMutation,\n  useEditImagesMutation,\n} from '../../../redux/api/GeneralApi';\nimport DeleteModel from '../../../components/DeleteModel';\nimport BasicTable from '../../../components/TableComponent';\nimport { MdDelete } from 'react-icons/md';\nimport { useEditCredentialsMutation } from '../../../redux/api/CredentialsApi';\nimport { HiUserCircle } from 'react-icons/hi';\nimport { getRole } from '../../../Constants/Global';\nimport FetchLoader from '../../../components/FetchLoader';\nimport NoAccess from '../../../components/NoAccess';\nimport { ChromePicker } from 'react-color';\nimport { useTheme } from '../../../Contexts/ThemeContext';\nimport { format } from 'date-fns';\nimport InputImageAndVideo from '../../../components/InputImageAndVideo';\nimport InputVideo from '../../../components/InputVideo';\nimport ImageVideoDragUpload from '../../../components/ImageVideoDragUpload';\nimport ServerError from '../../../components/ServerError';\nimport DragAndDropImageUpload from '../../../components/DragAndDropImageUpload';\n\nconst General = () => {\n  const { color } = useTheme();\n  const [deleteShow, setDeleteShow] = useState(false);\n  const [laptopbranddeleteShow, setLaptopBrandDeleteShow] = useState(false);\n  const [socialLinkdeleteShow, setsocialLinkDeleteShow] = useState(false);\n  const [indexToDelete, setIndexToDelete] = useState('');\n  const [idToDelete, setIdToDelete] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [imageFile, setImageFile] = useState(null);\n  const [imag, setImageKey] = useState('');\n  const [editingSection, setEditingSection] = useState('');\n  const [editingId, setEditingId] = useState(null);\n  /* brand*/\n  const [addBrandModal, setAddBrandModal] = useState(false);\n  const [newBrandName, setNewBrandName] = useState('');\n  const [newBrandImage, setNewBrandImage] = useState(null);\n  /*general banner*/\n  const [addBannerModal, setAddBannerModal] = useState(false);\n  const [newBannerImage, setNewBannerImage] = useState(null);\n  /*rental banner*/\n  const [rentalBannerModal, setRentalBannerModal] = useState(false);\n  const [rentalBannerImage, setRentalBannerImage] = useState(null);\n  const [rentalBannerId, setRentalBannerId] = useState(null);\n  const [rentalBannerDeleteId, setRentalBannerDeleteId] = useState(null);\n  const [rentalBannerDeleteShow, setRentalBannerDeleteShow] = useState(false);\n\n  /*refurbished banner*/\n  const [refurbishedBannerModal, setRefurbishedBannerModal] = useState(false);\n  const [refurbishedBannerImage, setRefurbishedBannerImage] = useState(null);\n  const [refurbishedBannerId, setRefurbishedBannerId] = useState(null);\n  const [refurbishedBannerDeleteId, setRefurbishedBannerDeleteId] =\n    useState(null);\n  const [refurbishedBannerDeleteShow, setRefurbishedBannerDeleteShow] =\n    useState(false);\n\n  /*Modal banner*/\n  const [modelBannerModal, setModelBannerModal] = useState(false);\n  const [modelBannerImage, setModelBannerImage] = useState(null);\n  const [modelBannerId, setModelBannerId] = useState(null);\n  const [modelBannerDeleteId, setModelBannerDeleteId] = useState(null);\n  const [modelBannerDeleteShow, setModelBannerDeleteShow] = useState(false);\n\n  const [generalData, setGeneralData] = useState([]);\n  const [brandData, setBrandData] = useState([]);\n  const [sociallinkData, setSocialLinkData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  /* socail link*/\n  const [addLinkModal, setAddLinkModal] = useState(false);\n  const [newsocialMedia, setNewsocialMedia] = useState('');\n  const [newLinkImage, setNewLinkImage] = useState(null);\n  const [newsocialLink, setNewsocialLink] = useState('');\n  /*initial amount*/\n  const [initialshowModal, setInitialShowModal] = useState(false);\n  const [initialAmount, setInitialAmount] = useState('');\n  const [inputValue, setInputValue] = useState('');\n\n  const role = getRole();\n  const [read, setRead] = useState(false);\n  const [write, setWrite] = useState(false);\n  const [fullAccess, setFullAccess] = useState(false);\n  const {\n    data: imageData,\n    refetch,\n    isError,\n    error,\n    isLoading,\n  } = useGetGeneralQuery({ role: role });\n  const [editId, setEditId] = useState(null);\n  const [editShow, setEditShow] = useState(false);\n  const [editLinkShow, setEditLinkShow] = useState(false);\n\n  const [credentials, setCredentials] = useState('');\n  const [file, setFile] = useState('');\n  const formatDateTime = (date) => format(new Date(date), 'dd-MMM-yyyy h:mm a');\n  const [showColorPicker, setShowColorPicker] = useState(false);\n  const [selectedColor, setSelectedColor] = useState('#FFFFFF');\n  const [selectColorIndex, setSelectColorIndex] = useState(null);\n  const [themeId, setThemeId] = useState(null);\n  const [initialAmountId, setInitialAmountId] = useState(null);\n\n  const [hasServerError, setHasServerError] = useState(false);\n\n  const [editCredentialsData] = useEditCredentialsMutation();\n  const [deleteLaptopBrandApi] = useDeleteLaptopBrandMutation();\n  const [deleteBannerApi] = useDeleteBannerMutation();\n  const [BrandAddData] = useAddBrandMutation();\n  const [LinkAddData] = useAddLinkMutation();\n  const [BannerAddData] = useAddBannerMutation();\n  const [EditImagesData] = useEditImagesMutation();\n\n  /*socail link yes or no states */\n  const [toggle, setToggle] = useState('');\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\n  const [selectedRowId, setSelectedRowId] = useState(null);\n\n  useEffect(() => {\n    if (imageData && imageData.moduleAccess && imageData.data) {\n      setRead(imageData.moduleAccess.read);\n      setWrite(imageData.moduleAccess.write);\n      setFullAccess(imageData.moduleAccess.fullAccess);\n      setGeneralData(imageData.data[0]);\n      setBrandData(imageData.data[0].laptop);\n      setSocialLinkData(imageData.data[0].socialLinks);\n      setInitialAmount(imageData.data[0].initialAmount.credentialsValue);\n      setInitialAmountId(imageData.data[0].initialAmount._id);\n    }\n    if (isError && error?.status === 500) {\n      setHasServerError(true);\n    } else {\n      setHasServerError(false);\n    }\n  }, [imageData, role, error, isError]);\n\n  if (isLoading) return <FetchLoader />;\n\n  if (\n    !imageData ||\n    !imageData.data ||\n    !Array.isArray(imageData.data) ||\n    imageData.data.length === 0\n  ) {\n    console.warn(\n      'Image data is missing or not in the expected format:',\n      imageData\n    );\n    return <p>No image data available</p>;\n  }\n\n  const handleEditClick = (section, index, id) => {\n    setEditingSection(section);\n    let key;\n    if (section === 'logo') {\n      key = `logo[${index}]`;\n    } else if (section === 'generalBanner') {\n      key = `generalBanner[${index}]`;\n    } else if (section === 'rentalBanner') {\n      key = `rentalBanner[${index}]`;\n    } else if (section === 'refurbishedBanner') {\n      key = `refurbishedBanner[${index}]`;\n    } else if (section === 'modelBanner') {\n      key = `modelBanner[${index}]`;\n    } else if (section === 'video') {\n      key = `video[${index}]`;\n    }\n    setImageKey(key);\n    setEditingId(id);\n    setRentalBannerId(id);\n    setRefurbishedBannerId(id);\n    setModelBannerId(id);\n    setShowModal(true);\n  };\n\n  const deleteHandleClose = () => setDeleteShow(false);\n  const RentalBannerDeleteHandleClose = () => setRentalBannerDeleteShow(false);\n  const RefurbishedBannerDeleteHandleClose = () =>\n    setRefurbishedBannerDeleteShow(false);\n  const ModelBannerDeleteHandleClose = () => setModelBannerDeleteShow(false);\n  const laptopBrandDeleteHandleClose = () => setLaptopBrandDeleteShow(false);\n\n  /*general banner delete model function*/\n  const deleteHandleShow = (id) => {\n    setIndexToDelete(id);\n    setDeleteShow(true);\n  };\n\n  /*rental banner delete model function*/\n  const RentalBannerDeleteHandleShow = (id) => {\n    setRentalBannerDeleteId(id);\n    setRentalBannerDeleteShow(true);\n  };\n\n  /*refurbished banner delete model function*/\n  const RefurbishedBannerDeleteHandleShow = (id) => {\n    setRefurbishedBannerDeleteId(id);\n    setRefurbishedBannerDeleteShow(true);\n  };\n\n  /*model banner delete model function*/\n  const ModelBannerDeleteHandleShow = (id) => {\n    setModelBannerDeleteId(id);\n    setModelBannerDeleteShow(true);\n  };\n\n  /*laptop brand delete model function*/\n  const LaptopBranddeleteHandleShow = (id) => {\n    setIdToDelete(id);\n    setLaptopBrandDeleteShow(true);\n  };\n\n  /*social links delete model function*/\n  const SocialLinkdeleteHandleShow = (id) => {\n    setIdToDelete(id);\n    setsocialLinkDeleteShow(true);\n  };\n\n  const handleImageUpload = (file) => {\n    setImageFile(file);\n  };\n\n  const handleUpdateImage = async () => {\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      const type =\n        editingSection === 'logo'\n          ? 'logo'\n          : editingSection === 'generalBanner'\n            ? 'generalBanner'\n            : editingSection === 'rentalBanner'\n              ? 'rentalBanner'\n              : editingSection === 'refurbishedBanner'\n                ? 'refurbishedBanner'\n                : editingSection === 'modelBanner'\n                  ? 'modelBanner'\n                  : 'video';\n\n      formData.append('type', type);\n      formData.append('image', imageFile);\n\n      let id;\n      if (editingSection === 'rentalBanner') {\n        id = rentalBannerId;\n      } else if (editingSection === 'refurbishedBanner') {\n        id = refurbishedBannerId;\n      } else if (editingSection === 'modelBanner') {\n        id = modelBannerId;\n      } else {\n        id = editingId;\n      }\n\n      const response = await EditImagesData({\n        id: id,\n        role: role,\n        data: formData,\n      });\n\n      if (response.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        setShowModal(false);\n      } else {\n        toast.error(response.error.data.error, { autoClose: 1000 });\n        setShowModal(false);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /*  delete api functions */\n\n  const DeleteBannerImage = async () => {\n    try {\n      const response = await deleteBannerApi({ id: indexToDelete, role: role });\n\n      if (response?.data) {\n        toast.success(response?.data?.message, { autoClose: 1000 });\n        setDeleteShow(false);\n        setIndexToDelete('');\n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n        setDeleteShow(false);\n        setIndexToDelete('');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  async function DeleteRentalBanner() {\n    try {\n      const response = await deleteBannerApi({\n        id: rentalBannerDeleteId,\n        role: role,\n      });\n\n      if (response?.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        setRentalBannerDeleteShow(false);\n        setIdToDelete('');\n      } else {\n        toast.error(response.error?.data.error, { autoClose: 1000 });\n        setRentalBannerDeleteShow(false);\n        setRentalBannerDeleteId('');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async function DeleteRefurbishedBanner() {\n    try {\n      const response = await deleteBannerApi({\n        id: refurbishedBannerDeleteId,\n        role: role,\n      });\n\n      if (response?.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        setRefurbishedBannerDeleteShow(false);\n        setRefurbishedBannerDeleteId('');\n      } else {\n        toast.error(response.error?.data.error, { autoClose: 1000 });\n        setRefurbishedBannerDeleteShow(false);\n        setRefurbishedBannerDeleteId('');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async function DeleteModelBanner() {\n    try {\n      const response = await deleteBannerApi({\n        id: modelBannerDeleteId,\n        role: role,\n      });\n\n      if (response?.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        setModelBannerDeleteShow(false);\n        setModelBannerDeleteId('');\n      } else {\n        toast.error(response.error?.data.error, { autoClose: 1000 });\n        setModelBannerDeleteShow(false);\n        setModelBannerDeleteId('');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async function deleteLaptopBrand() {\n    try {\n      const response = await deleteLaptopBrandApi({\n        id: idToDelete,\n        role: role,\n      });\n\n      if (response?.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        setLaptopBrandDeleteShow(false);\n        setIdToDelete('');\n      } else {\n        toast.error(response.error?.data.error, { autoClose: 1000 });\n        setLaptopBrandDeleteShow(false);\n        setIdToDelete('');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async function deleteSocialLink() {\n    try {\n      const response = await deleteLaptopBrandApi({\n        id: idToDelete,\n        role: role,\n      });\n\n      if (response?.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        setsocialLinkDeleteShow(false);\n        setIdToDelete('');\n      } else {\n        toast.error(response.error?.data.error, { autoClose: 1000 });\n        setsocialLinkDeleteShow(false);\n        setIdToDelete('');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const handleEditShow = (id) => {\n    const editData = generalData.laptop.find((d) => d._id === id);\n    if (editData) {\n      setEditId(id);\n      setCredentials(editData.credentialsKey);\n      setFile(editData.image);\n      setEditShow(true);\n    }\n  };\n\n  const handleEditClose = () => {\n    setEditShow(false);\n    setEditId(null);\n    setCredentials('');\n  };\n\n  const handleCredentialsChange = (e) => {\n    setCredentials(e.target.value);\n  };\n\n  const handleEditData = async () => {\n    if (!credentials || !file) {\n      toast.error('Please fill all the fields', { autoClose: 1000 });\n      return;\n    }\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('credentialsKey', credentials);\n      formData.append('image', file);\n      formData.append('type', 'laptopBrands');\n\n      const response = await editCredentialsData({\n        id: editId,\n        data: formData,\n        role: role,\n      });\n\n      if (response.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        setEditShow(false);\n        window.location.reload();\n      } else {\n        toast.error(response.error.data.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFileChange = (file) => {\n    setFile(file);\n  };\n\n  const handleAddBrandClick = () => {\n    setAddBrandModal(true);\n  };\n\n  const handleAddBrandClose = () => {\n    setAddBrandModal(false);\n    setNewBrandName('');\n    setNewBrandImage(null);\n  };\n\n  const handleNewBrandImageUpload = (file) => {\n    setNewBrandImage(file);\n  };\n  const allowedSocialMediaNames = ['Facebook', 'Twitter', 'Instagram', 'LinkedIn', 'YouTube','Whatsapp','Email'];\n  const handleAddLinkSubmit = async () => {\n    if (!newsocialMedia || !newLinkImage || !newsocialLink) {\n      toast.error('Please fill all the fields', { autoClose: 1000 });\n      return;\n    }\n    const urlPattern = new RegExp('https?://.+');\n    if (!urlPattern.test(newsocialLink)) {\n      toast.error('Please enter a valid URL', { autoClose: 1000 });\n      return;\n    }\n\n    if (!allowedSocialMediaNames.includes(newsocialMedia)) {\n      toast.error('Please select a valid social media platform', { autoClose: 1000 });\n      return;\n    }\n    setLoading(true);\n\n    try {\n      const formData = new FormData();\n      formData.append('type', 'socialLinks');\n      formData.append('image', newLinkImage);\n      formData.append('credentialsKey', newsocialMedia);\n      formData.append('credentialsValue', newsocialLink);\n\n      const response = await LinkAddData({\n        role: role,\n        data: formData,\n      });\n\n      if (response?.data) {\n        toast.success(response?.data?.message, { autoClose: 1000 });\n        setAddLinkModal(false);\n        setNewLinkImage(null);\n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n        setNewLinkImage(null);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditLinkShow = (id) => {\n    const editData = generalData.socialLinks.find((d) => d._id === id);\n    if (editData) {\n      setEditId(id);\n      setNewsocialMedia(editData.credentialsKey);\n      setNewsocialLink(editData.credentialsValue);\n      setNewLinkImage(editData.image);\n      setEditLinkShow(true);\n    }\n  };\n\n  /* Socail link */\n\n  const handleEditLinkData = async () => {\n    const urlPattern = new RegExp('https?://.+');\n    if (!urlPattern.test(newsocialLink)) {\n      toast.error('Please enter a valid URL', { autoClose: 1000 });\n      return;\n    }\n    if (!newsocialMedia || !newsocialLink || !newLinkImage) {\n      toast.error('Please fill all the fields', { autoClose: 1000 });\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('credentialsKey', newsocialMedia);\n      formData.append('credentialsValue', newsocialLink);\n      formData.append('image', newLinkImage);\n      formData.append('type', 'socialLinks');\n\n      const response = await editCredentialsData({\n        id: editId,\n        data: formData,\n        role: role,\n      });\n\n      if (response.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        setEditLinkShow(false);\n        window.location.reload();\n      } else {\n        toast.error(response.error.data.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /* social like yes or no function */\n  const handleCheckboxClick = (rowIdx, check) => {\n    setSelectedRowId(rowIdx);\n    setShowConfirmationModal(true);\n    setToggle(check);\n  };\n\n  /* Socail link  yes or no */\n\n  const handleEditLinksData = async () => {\n    setLoading(true);\n    const toggledValue = toggle === 'yes' ? 'no' : 'yes';\n    try {\n      const data = {\n        status: toggledValue,\n        type: 'socialLinks',\n      };\n\n      const response = await editCredentialsData({\n        id: selectedRowId,\n        data: data,\n        role: role,\n      });\n\n      if (response.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        setShowConfirmationModal(false);\n        refetch();\n      } else {\n        toast.error(response.error.data.error, { autoClose: 1000 });\n        setShowConfirmationModal(false);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditLinkClose = () => {\n    setEditLinkShow(false);\n    setEditId(null);\n    setNewsocialMedia('');\n    setNewsocialLink('');\n    setNewLinkImage(null);\n  };\n\n  const handleAddLinkClose = () => {\n    setAddLinkModal(false);\n    setNewsocialLink('');\n    setNewsocialMedia('');\n    setNewLinkImage(null);\n  };\n\n  const handleAddLinkClick = () => {\n    setAddLinkModal(false);\n    setNewsocialLink('');\n    setNewsocialMedia('');\n    setNewLinkImage(null);\n    setAddLinkModal(true);\n  };\n\n  const handleNewSocialLinkImageUpload = (file) => {\n    setNewLinkImage(file);\n  };\n\n  const handleSocialMediaChange = (e) => {\n    setNewsocialMedia(e.target.value);\n  };\n  const handleSocialLinkChange = (e) => {\n    setNewsocialLink(e.target.value);\n  };\n\n  const handleAddBrandSubmit = async () => {\n    if (!newBrandImage || !newBrandName) {\n      toast.error('Please fill all the fields', { autoClose: 1000 });\n      return;\n    }\n    setLoading(true);\n\n    try {\n      const formData = new FormData();\n      formData.append('type', 'laptopBrands');\n      formData.append('image', newBrandImage);\n      formData.append('credentialsKey', newBrandName);\n      formData.append('credentialsValue', newBrandName);\n\n      const response = await BrandAddData({\n        role: role,\n        data: formData,\n      });\n\n      if (response?.data) {\n        toast.success(response?.data?.message, { autoClose: 1000 });\n        handleAddBrandClose();\n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /*general banner functions */\n\n  const handleAddBannerClick = () => {\n    setAddBannerModal(true);\n  };\n\n  const handleAddBannerClose = () => {\n    setAddBannerModal(false);\n    setNewBannerImage(null);\n  };\n\n  const handleNewBannerImageUpload = (file) => {\n    setNewBannerImage(file);\n  };\n\n  const handleAddBannerSubmit = async () => {\n    if (!newBannerImage) {\n      toast.error('Please fill the fields', { autoClose: 1000 });\n      return;\n    }\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('type', 'generalBanner');\n      formData.append('image', newBannerImage);\n\n      const response = await BannerAddData({\n        role: role,\n        data: formData,\n      });\n\n      if (response?.data) {\n        toast.success(response?.data?.message, { autoClose: 1000 });\n        setAddBannerModal(false);\n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /*rental banner functions */\n\n  const handleAddRentalBannerClick = () => {\n    setRentalBannerModal(true);\n  };\n\n  const handleAddRentalBannerClose = () => {\n    setRentalBannerModal(false);\n    setRentalBannerImage(null);\n  };\n\n  const handleNewRentalBannerImageUpload = (file) => {\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n      const img = new Image();\n      img.src = event.target.result;\n\n      img.onload = () => {\n        const imgWidth = img.width;\n        const imgHeight = img.height;\n\n        const minWidth = 1200;\n        const minHeight = 250;\n\n        if (imgWidth < minWidth || imgHeight < minHeight) {\n          toast.error(\n            `Image must be at least ${minWidth}px by ${minHeight}px`,\n            {\n              autoClose: 2000,\n            }\n          );\n        } else {\n          setRentalBannerImage(file);\n        }\n      };\n\n      img.onerror = () => {\n        toast.error('Error loading image file. Please try again.', {\n          autoClose: 2000,\n        });\n      };\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  const handleAddRentalBannerSubmit = async () => {\n    if (!rentalBannerImage) {\n      toast.error('Please fill the fields', { autoClose: 1000 });\n      return;\n    }\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('type', 'rentalBanner');\n      formData.append('image', rentalBannerImage);\n\n      const response = await BannerAddData({\n        role: role,\n        data: formData,\n      });\n\n      if (response?.data) {\n        toast.success(response?.data?.message, { autoClose: 1000 });\n        setRentalBannerModal(false);\n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /*refurbished Banner functions */\n\n  const handleAddRefurbishedBannerClick = () => {\n    setRefurbishedBannerModal(true);\n  };\n\n  const handleAddRefurbishedBannerClose = () => {\n    setRefurbishedBannerModal(false);\n    setRefurbishedBannerImage(null);\n  };\n\n  const handleNewRefurbishedBannerImageUpload = (file) => {\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n      const img = new Image();\n      img.src = event.target.result;\n\n      img.onload = () => {\n        const imgWidth = img.width;\n        const imgHeight = img.height;\n\n        const minWidth = 1200;\n        const minHeight = 250;\n\n        if (imgWidth < minWidth || imgHeight < minHeight) {\n          toast.error(\n            `Image must be at least ${minWidth}px by ${minHeight}px`,\n            {\n              autoClose: 2000,\n            }\n          );\n        } else {\n          setRefurbishedBannerImage(file);\n        }\n      };\n\n      img.onerror = () => {\n        toast.error('Error loading image file. Please try again.', {\n          autoClose: 2000,\n        });\n      };\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  const handleAddRefurbishedBannerSubmit = async () => {\n    if (!refurbishedBannerImage) {\n      toast.error('Please fill the fields', { autoClose: 1000 });\n      return;\n    }\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('type', 'refurbishedBanner');\n      formData.append('image', refurbishedBannerImage);\n\n      const response = await BannerAddData({\n        role: role,\n        data: formData,\n      });\n\n      if (response?.data) {\n        toast.success(response?.data?.message, { autoClose: 1000 });\n        setRefurbishedBannerModal(false);\n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /*model banner functions */\n\n  const handleAddmodelBannerClick = () => {\n    setModelBannerModal(true);\n  };\n\n  const handleAddmodelBannerClose = () => {\n    setModelBannerModal(false);\n    setModelBannerImage(null);\n  };\n\n  const handleNewmodelBannerImageUpload = (file) => {\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n      const img = new Image();\n      img.src = event.target.result;\n\n      img.onload = () => {\n        const imgWidth = img.width;\n        const imgHeight = img.height;\n\n        const minWidth = 700;\n        const minHeight = 230;\n\n        if (imgWidth < minWidth || imgHeight < minHeight) {\n          toast.error(\n            `Image must be at least ${minWidth}px by ${minHeight}px`,\n            {\n              autoClose: 2000,\n            }\n          );\n        } else {\n          setModelBannerImage(file);\n        }\n      };\n\n      img.onerror = () => {\n        toast.error('Error loading image file. Please try again.', {\n          autoClose: 2000,\n        });\n      };\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  const handleAddmodelBannerSubmit = async () => {\n    if (!modelBannerImage) {\n      toast.error('Please fill the fields', { autoClose: 1000 });\n      return;\n    }\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('type', 'modelBanner');\n      formData.append('image', modelBannerImage);\n\n      const response = await BannerAddData({\n        role: role,\n        data: formData,\n      });\n\n      if (response?.data) {\n        toast.success(response?.data?.message, { autoClose: 1000 });\n        setModelBannerModal(false);\n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const COLUMNS = [\n    {\n      Header: 'ID',\n      accessor: (d, i) => i + 1,\n      minWidth: 10,\n    },\n    {\n      Header: 'Image',\n      accessor: 'image',\n      Cell: (props) => {\n        const imageUrl = props.value;\n        return imageUrl ? (\n          <img\n            src={imageUrl}\n            alt=\"Profile\"\n            style={{ maxWidth: '50px', maxHeight: '50px' }}\n          />\n        ) : (\n          <HiUserCircle size={30} />\n        );\n      },\n    },\n    {\n      Header: 'Name',\n      accessor: 'credentialsKey',\n    },\n    {\n      Header: 'Created At',\n      accessor: 'createdAt',\n      Cell: ({ value }) => formatDateTime(value),\n    },\n    {\n      Header: 'Updated At',\n      accessor: 'updatedAt',\n      Cell: ({ value }) => formatDateTime(value),\n    },\n  ];\n\n  if (fullAccess) {\n    COLUMNS.push({\n      Header: 'ACTIONS',\n      accessor: 'action',\n      Cell: (props) => {\n        const rowIdx = props.row.original._id;\n        return (\n          <div className=\"d-flex align-items-center justify-content-center flex-row\">\n            <Button variant=\"warning\" onClick={() => handleEditShow(rowIdx)}>\n              <FaEdit />\n            </Button>\n            <Button\n              variant=\"danger\"\n              className=\"ms-2\"\n              onClick={() => LaptopBranddeleteHandleShow(rowIdx)}\n            >\n              <MdDelete />\n            </Button>\n          </div>\n        );\n      },\n    });\n  }\n\n  const COLUMNSS = [\n    {\n      Header: 'ID',\n      accessor: (d, i) => i + 1,\n      minWidth: 10,\n    },\n    {\n      Header: 'Image',\n      accessor: 'image',\n      Cell: (props) => {\n        const imageUrl = props.value;\n        return imageUrl ? (\n          <img\n            src={imageUrl}\n            alt=\"Profile\"\n            style={{ maxWidth: '50px', maxHeight: '50px' }}\n          />\n        ) : (\n          <HiUserCircle size={30} />\n        );\n      },\n    },\n    {\n      Header: 'Social Media',\n      accessor: 'credentialsKey',\n    },\n    {\n      Header: 'Social Link',\n      accessor: 'credentialsValue',\n    },\n    {\n      Header: 'Created At',\n      accessor: 'createdAt',\n      Cell: ({ value }) => formatDateTime(value),\n    },\n    {\n      Header: 'Updated At',\n      accessor: 'updatedAt',\n      Cell: ({ value }) => formatDateTime(value),\n    },\n  ];\n\n  if (fullAccess) {\n    COLUMNSS.push({\n      Header: 'ACTIONS',\n      accessor: 'action',\n      Cell: (props) => {\n        const rowIdx = props.row.original._id;\n        const status = props.row.original.status;\n        const isToggled = status === 'yes';\n\n        return (\n          <div className=\"d-flex align-items-center justify-content-center flex-row\">\n            <Button\n              variant={isToggled ? 'success' : 'secondary'}\n              onClick={() => handleCheckboxClick(rowIdx, status)}\n              className=\"ms-2\"\n            >\n              {isToggled ? 'ON' : 'OFF'}\n            </Button>\n            <Button\n              variant=\"warning\"\n              className=\"ms-2\"\n              onClick={() => handleEditLinkShow(rowIdx)}\n            >\n              <FaEdit />\n            </Button>\n            {/* <Button\n              variant=\"danger\"\n              className=\"ms-2\"\n              onClick={() => SocialLinkdeleteHandleShow(rowIdx)}\n            >\n              <MdDelete />\n            </Button> */}\n          </div>\n        );\n      },\n    });\n  }\n\n  const handleColorEditClick = (index) => {\n    setSelectColorIndex(index);\n    setSelectedColor(generalData.theme[index].credentialsValue);\n    setThemeId(generalData.theme[index]._id);\n    setShowColorPicker(true);\n  };\n\n  const handleColorChange = (color) => {\n    setSelectedColor(color.hex);\n  };\n\n  const handleColorUpdate = async () => {\n    setLoading(true);\n    try {\n      const updatedTheme = [...generalData.theme];\n      updatedTheme[selectColorIndex] = {\n        ...updatedTheme[selectColorIndex],\n        credentialsValue: selectedColor,\n      };\n\n      const response = await editCredentialsData({\n        id: themeId,\n        data: {\n          credentialsValue: selectedColor,\n          type: 'theme',\n        },\n        role: role,\n      });\n\n      if (response.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        setShowColorPicker(false);\n        setGeneralData({ ...generalData, theme: updatedTheme });\n        window.location.reload();\n      } else {\n        toast.error(response.error.data.error, { autoClose: 1000 });\n        setShowColorPicker(false);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCancelColor = () => {\n    setShowColorPicker(false);\n  };\n\n  const handleInitialAmountClick = () => {\n    setInputValue(initialAmount);\n    setInitialShowModal(true);\n  };\n\n  const handleInitialAmountSubmit = async () => {\n    if (!inputValue) {\n      toast.error('Please fill  the fields', { autoClose: 1000 });\n      return;\n    }\n    setLoading(true);\n\n    try {\n      const data = {\n        type: 'initialAmount',\n        credentialsValue: inputValue,\n      };\n      const response = await EditImagesData({\n        id: initialAmountId,\n        role: role,\n        data: data,\n      });\n\n      if (response?.data) {\n        toast.success(response?.data?.message, { autoClose: 1000 });\n        setInitialShowModal(false);\n        setInputValue('');\n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n        setInputValue('');\n        setInitialShowModal(false);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <FetchLoader />\n      ) : (\n        <>\n          {hasServerError ? (\n            <ServerError />\n          ) : read ? (\n            <>\n              {' '}\n              <Col>\n                <Row className=\"mb-4 mt-4\">\n                  <Col className=\"d-flex flex-row justify-content-between mt-1\">\n                    <h4 className=\"fw-bold\">General Settings</h4>\n                  </Col>\n                </Row>\n                <Col className=\"d-flex flex-row justify-content-between mt-5\">\n                  <h4\n                    className=\"fw-bold\"\n                    style={{ color: color, border: 'none' }}\n                  >\n                    INITIAL AMOUNT:\n                  </h4>\n                  {write ? (\n                    <div>\n                      <Button\n                        style={{ backgroundColor: color, border: 'none' }}\n                        className=\"mb-4\"\n                        onClick={handleInitialAmountClick}\n                      >\n                        <FaEdit size={20} />\n                        <span className=\"d-none d-md-inline\"> Update</span>\n                      </Button>\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n                </Col>\n                <Col xs={12} xl={4} l={6} className=\"mt-3 p-4\">\n                  <Form.Label>Amount:</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter initial amount\"\n                    value={initialAmount}\n                    onChange={(e) => setInitialAmount(e.target.value)}\n                    disabled\n                    className=\"mb-4\"\n                  />\n                </Col>\n\n                <Col className=\"d-flex flex-row justify-content-between mt-5\">\n                  <div>\n                    <h4\n                      className=\"fw-bold\"\n                      style={{ color: color, border: 'none' }}\n                    >\n                      LOGO:\n                    </h4>\n                    <p>Dimensions should be 1:1</p>\n                  </div>\n                </Col>\n                <Col\n                  xs={12}\n                  className=\"mt-3 d-flex flex-row flex-wrap justify-content-start align-items-center\"\n                >\n                  {generalData.logo &&\n                    generalData.logo.map((logoItem, index) => (\n                      <div key={index} className=\"image-container\">\n                        <img\n                          src={logoItem.image}\n                          alt={`Logo ${index + 1}`}\n                          style={{\n                            margin: '15px',\n                            height: '200px',\n                            width: '100%',\n                            maxWidth: '350px',\n                          }}\n                        />\n                        {fullAccess && (\n                          <div className=\"icon-container\">\n                            <FaEdit\n                              className=\"edit-icon\"\n                              onClick={() => {\n                                setImageFile(logoItem.image);\n                                handleEditClick('logo', index, logoItem._id);\n                              }}\n                            />\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                </Col>\n\n                <Col className=\"d-flex flex-row justify-content-between mt-5\">\n                  <h4\n                    className=\"fw-bold\"\n                    style={{ color: color, border: 'none' }}\n                  >\n                    COLOR THEME:\n                  </h4>\n                </Col>\n                <Col\n                  xs={12}\n                  className=\"mt-3 d-flex flex-row flex-wrap justify-content-start align-items-center\"\n                >\n                  {generalData.theme &&\n                    generalData.theme.map((themeItem, index) => (\n                      <div key={index} className=\"image-container\">\n                        <div\n                          className=\"color-box\"\n                          style={{\n                            backgroundColor: themeItem.credentialsValue,\n                            margin: '15px',\n                            height: '200px',\n                            width: '220px',\n                            maxWidth: '350px',\n                          }}\n                        />\n                        {fullAccess && (\n                          <div className=\"icon-container\">\n                            <FaEdit\n                              className=\"edit-icon\"\n                              onClick={() => handleColorEditClick(index)}\n                            />\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                </Col>\n\n                {/* Color Picker Modal */}\n                {showColorPicker && (\n                  <div\n                    style={{\n                      position: 'absolute',\n                      zIndex: '2',\n                      top: '1000px',\n                      left: '50%',\n                      transform: 'translate(-50%, -50%)',\n                    }}\n                  >\n                    <ChromePicker\n                      color={selectedColor}\n                      onChange={handleColorChange}\n                    />\n\n                    <Button\n                      style={{ backgroundColor: color, border: 'none' }}\n                      className=\"m-4\"\n                      onClick={handleCancelColor}\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      style={{ backgroundColor: color, border: 'none' }}\n                      onClick={handleColorUpdate}\n                      disabled={loading}\n                    >\n                      {loading ? (\n                        <>\n                          <Spinner\n                            as=\"span\"\n                            animation=\"border\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                            className=\"me-2\"\n                          />\n                          Updating...\n                        </>\n                      ) : (\n                        'Update'\n                      )}\n                    </Button>\n                  </div>\n                )}\n\n                <Col className=\"d-flex flex-row justify-content-between mt-5\">\n                  <h4\n                    className=\"fw-bold\"\n                    style={{ color: color, border: 'none' }}\n                  >\n                    VIDEO:\n                  </h4>\n                </Col>\n                <Col\n                  xs={12}\n                  className=\"mt-3 d-flex flex-row flex-wrap justify-content-start align-items-center\"\n                >\n                  {generalData.video &&\n                    generalData.video.map((videoItem, index) => (\n                      <div key={index} className=\"image-container\">\n                        <video\n                          src={videoItem.image}\n                          alt={`Video ${index + 1}`}\n                          controls\n                          style={{\n                            margin: '15px',\n                            height: '200px',\n                            width: '100%',\n                            maxWidth: '350px',\n                          }}\n                        />\n                        {fullAccess && (\n                          <div className=\"icon-container\">\n                            <FaEdit\n                              className=\"edit-icon\"\n                              onClick={() => {\n                                setImageFile(videoItem.image);\n                                handleEditClick('video', index, videoItem._id);\n                              }}\n                            />\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                </Col>\n\n                <Col className=\"d-flex flex-row justify-content-between mt-5\">\n                  <h4\n                    className=\"fw-bold\"\n                    style={{ color: color, border: 'none' }}\n                  >\n                    GENERAL BANNER:\n                  </h4>\n                  {write ? (\n                    <div>\n                      <Button\n                        style={{ backgroundColor: color, border: 'none' }}\n                        className=\"p-2 m-1\"\n                        onClick={handleAddBannerClick}\n                      >\n                        <FaPlus size={20} />\n                        <span className=\"d-none d-md-inline\"> Add Banner</span>\n                      </Button>\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n                </Col>\n                <Col\n                  xs={12}\n                  className=\"mt-3 d-flex flex-row flex-wrap justify-content-start align-items-center\"\n                >\n                  {generalData.generalBanner &&\n                    generalData.generalBanner.map((banner, index) => (\n                      <div key={index} className=\"image-container\">\n                        <img\n                          src={banner.image}\n                          alt={`Banner ${index + 1}`}\n                          style={{\n                            margin: '15px',\n                            height: '200px',\n                            width: '100%',\n                            maxWidth: '350px',\n                          }}\n                        />\n                        {fullAccess && (\n                          <div className=\"icon-container\">\n                            <FaEdit\n                              className=\"edit-icon\"\n                              onClick={() => {\n                                setImageFile(banner.image);\n                                handleEditClick(\n                                  'generalBanner',\n                                  index,\n                                  banner._id\n                                );\n                              }}\n                            />\n                            <FaTrash\n                              className=\"delete-icon deleteicon-container\"\n                              onClick={() => deleteHandleShow(banner._id)}\n                            />\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                </Col>\n\n                <Col className=\"d-flex flex-row justify-content-between mt-5\">\n                  <div>\n                    <h4\n                      className=\"fw-bold\"\n                      style={{ color: color, border: 'none' }}\n                    >\n                      RENTAL BANNER:\n                    </h4>\n                    <p>Dimensions should be (1200px * 250px)</p>\n                  </div>\n                  {write ? (\n                    <div>\n                      <Button\n                        style={{ backgroundColor: color, border: 'none' }}\n                        className=\"p-2 m-1\"\n                        onClick={handleAddRentalBannerClick}\n                      >\n                        <FaPlus size={20} />\n                        <span className=\"d-none d-md-inline\"> Add Banner</span>\n                      </Button>\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n                </Col>\n                <Col\n                  xs={12}\n                  className=\"mt-3 d-flex flex-row flex-wrap justify-content-start align-items-center\"\n                >\n                  {generalData.rentalBanner &&\n                    generalData.rentalBanner.map((rentalBanner, index) => (\n                      <div key={index} className=\"image-container\">\n                        <img\n                          src={rentalBanner.image}\n                          alt={`Banner ${index + 1}`}\n                          style={{\n                            margin: '15px',\n                            height: '200px',\n                            width: '100%',\n                            maxWidth: '350px',\n                          }}\n                        />\n                        {fullAccess && (\n                          <div className=\"icon-container\">\n                            <FaEdit\n                              className=\"edit-icon\"\n                              onClick={() => {\n                                setImageFile(rentalBanner.image);\n                                handleEditClick(\n                                  'rentalBanner',\n                                  index,\n                                  rentalBanner._id\n                                );\n                              }}\n                            />\n                            <FaTrash\n                              className=\"delete-icon deleteicon-container\"\n                              onClick={() =>\n                                RentalBannerDeleteHandleShow(rentalBanner._id)\n                              }\n                            />\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                </Col>\n\n                <Col className=\"d-flex flex-row justify-content-between mt-5\">\n                  <div>\n                    <h4\n                      className=\"fw-bold\"\n                      style={{ color: color, border: 'none' }}\n                    >\n                      REFURBISHED BANNER:\n                    </h4>\n                    <p>Dimensions should be (1200px * 250px)</p>\n                  </div>\n                  {write ? (\n                    <div>\n                      <Button\n                        style={{ backgroundColor: color, border: 'none' }}\n                        className=\"p-2 m-1\"\n                        onClick={handleAddRefurbishedBannerClick}\n                      >\n                        <FaPlus size={20} />\n                        <span className=\"d-none d-md-inline\"> Add Banner</span>\n                      </Button>\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n                </Col>\n                <Col\n                  xs={12}\n                  className=\"mt-3 d-flex flex-row flex-wrap justify-content-start align-items-center\"\n                >\n                  {generalData.refurbishedBanner &&\n                    generalData.refurbishedBanner.map(\n                      (refurbishedBanner, index) => (\n                        <div key={index} className=\"image-container\">\n                          <img\n                            src={refurbishedBanner.image}\n                            alt={`Banner ${index + 1}`}\n                            style={{\n                              margin: '15px',\n                              height: '200px',\n                              width: '100%',\n                              maxWidth: '350px',\n                            }}\n                          />\n                          {fullAccess && (\n                            <div className=\"icon-container\">\n                              <FaEdit\n                                className=\"edit-icon\"\n                                onClick={() => {\n                                  setImageFile(refurbishedBanner.image);\n                                  handleEditClick(\n                                    'refurbishedBanner',\n                                    index,\n                                    refurbishedBanner._id\n                                  );\n                                }}\n                              />\n                              <FaTrash\n                                className=\"delete-icon deleteicon-container\"\n                                onClick={() =>\n                                  RefurbishedBannerDeleteHandleShow(\n                                    refurbishedBanner._id\n                                  )\n                                }\n                              />\n                            </div>\n                          )}\n                        </div>\n                      )\n                    )}\n                </Col>\n\n                <Col className=\"d-flex flex-row justify-content-between mt-5\">\n                  <h4\n                    className=\"fw-bold\"\n                    style={{ color: color, border: 'none' }}\n                  >\n                    MOST BOOKED SERVICE BANNER:\n                  </h4>\n                  {write ? (\n                    <div>\n                      {/* <Button\n                        style={{ backgroundColor: color, border: 'none' }}\n                        className=\"p-2 m-1\"\n                        onClick={handleAddmodelBannerClick}\n                      >\n                        <FaPlus size={20} />\n                        <span className=\"d-none d-md-inline\"> Add Banner</span>\n                      </Button> */}\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n                </Col>\n                <Col\n                  xs={12}\n                  className=\"mt-3 d-flex flex-row flex-wrap justify-content-start align-items-center\"\n                >\n                  {generalData.modelBanner &&\n                    generalData.modelBanner.map((modelBanner, index) => (\n                      <div key={index} className=\"image-container\">\n                        <img\n                          src={modelBanner.image}\n                          alt={`Banner ${index + 1}`}\n                          style={{\n                            margin: '15px',\n                            height: '200px',\n                            width: '100%',\n                            maxWidth: '350px',\n                          }}\n                        />\n                        {fullAccess && (\n                          <div className=\"icon-container\">\n                            <FaEdit\n                              className=\"edit-icon\"\n                              onClick={() => {\n                                setImageFile(modelBanner.image);\n                                handleEditClick(\n                                  'modelBanner',\n                                  index,\n                                  modelBanner._id\n                                );\n                              }}\n                            />\n                            {/* <FaTrash\n                              className=\"delete-icon deleteicon-container\"\n                              onClick={() =>\n                                ModelBannerDeleteHandleShow(modelBanner._id)\n                              }\n                            /> */}\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                </Col>\n\n                <Col className=\"d-flex flex-row justify-content-between mt-5\">\n                  <h4\n                    className=\"fw-bold\"\n                    style={{ color: color, border: 'none' }}\n                  >\n                    LAPTOP BRAND:\n                  </h4>\n                  {write ? (\n                    <div>\n                      <Button\n                        style={{ backgroundColor: color, border: 'none' }}\n                        className=\"mb-4\"\n                        onClick={handleAddBrandClick}\n                      >\n                        <FaPlus size={20} />\n                        <span className=\"d-none d-md-inline\"> Add brand</span>\n                      </Button>\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n                </Col>\n                <Col xs={12} className=\"mt-3 p-4 boxShadow\">\n                  <BasicTable COLUMNS={COLUMNS} MOCK_DATA={brandData} />\n                </Col>\n              </Col>\n              <Col className=\"d-flex flex-row justify-content-between mt-5\">\n                <h4\n                  className=\"fw-bold\"\n                  style={{ color: color, border: 'none' }}\n                >\n                  SocialLinks:\n                </h4>\n                {write ? (\n                  <div>\n                    <Button\n                      style={{ backgroundColor: color, border: 'none' }}\n                      className=\"mb-4\"\n                      onClick={handleAddLinkClick}\n                    >\n                      <FaPlus size={20} />\n                      <span className=\"d-none d-md-inline\"> Add Link</span>\n                    </Button>\n                  </div>\n                ) : (\n                  <></>\n                )}\n              </Col>\n              <Col xs={12} className=\"mt-3 p-4 boxShadow\">\n                <BasicTable COLUMNS={COLUMNSS} MOCK_DATA={sociallinkData} />\n              </Col>\n            </>\n          ) : (\n            <NoAccess />\n          )}\n        </>\n      )}\n\n      {/* Image Update Modal */}\n      <Modal show={showModal} onHide={() => setShowModal(false)} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Update{' '}\n            {editingSection === 'logo'\n              ? 'Logo'\n              : editingSection === 'generalBanner'\n                ? ' GeneralBanner'\n                : editingSection === 'rentalBanner'\n                  ? ' RentalBanner'\n                  : editingSection === 'refurbishedBanner'\n                    ? ' Refurbished Banner'\n                    : editingSection === 'modelBanner'\n                      ? ' Model Banner'\n                      : 'Video'}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"d-flex flex-column\">\n          {/* <Form.Control\n            id=\"file-upload\"\n            type=\"file\"\n            accept={\n              editingSection === 'video'\n                ? '.mp4,.mov,.mkv,.webm,.avi'\n                : '.jpg,.jpeg,.png,.svg,.webp'\n            }\n            onChange={handleImageUpload}\n          /> */}\n          {editingSection === 'video' ? (\n            <>\n              <ImageVideoDragUpload\n                labelText=\"Upload File\"\n                accepts={{\n                  'image/*': ['.gif'],\n                  'video/*': ['.mp4', '.avi', '.mov', '.mkv'],\n                }}\n                handleFileChange={(file) => {\n                  handleImageUpload(file);\n                }}\n              />\n              <div>\n                <small className=\"text-muted\">\n                  Accepted file types: .gif,\n                  .mp4, .avi, .mov, .mkv\n                </small>\n              </div>\n            </>\n          ) : (\n            <>\n            <DragAndDropImageUpload\n              labelText=\"Upload File\"\n              accepts={{\n                'image/*': ['.png', '.jpeg', '.jpg', '.svg', '.webp', '.gif'],\n              }}\n              handleFileChange={(file) => {\n                handleImageUpload(file);\n              }}\n            />\n             <div>\n            <small className=\"text-muted\">\n              Accepted file types: .jpg, .jpeg, .png, .svg, .webp, .gif\n            </small>\n          </div>\n              </>\n          )}\n          \n         \n\n          {editingSection === 'video' ? (\n            <InputVideo video={imageFile} valueVideo={imageFile} />\n          ) : (\n            <InputImageAndVideo image={imageFile} valueImage={imageFile} />\n          )}\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n          <Button\n            style={{ backgroundColor: color, border: 'none' }}\n            onClick={handleUpdateImage}\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  className=\"me-2\"\n                />\n                Updating...\n              </>\n            ) : (\n              'Update'\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* general banner delete model */}\n      <DeleteModel\n        YES={DeleteBannerImage}\n        DELETESTATE={deleteShow}\n        ONCLICK={deleteHandleClose}\n        DESCRIPTION=\"Are you sure you want to delete this General Banner\"\n        DELETETITLE=\"General Banner\"\n      />\n\n      {/* rental banner delete model */}\n\n      <DeleteModel\n        YES={DeleteRentalBanner}\n        DELETESTATE={rentalBannerDeleteShow}\n        ONCLICK={RentalBannerDeleteHandleClose}\n        DESCRIPTION=\"Are you sure you want to delete this Rental Banner\"\n        DELETETITLE=\"Rental Banner\"\n      />\n\n      {/* refurbished banner delete model */}\n\n      <DeleteModel\n        YES={DeleteRefurbishedBanner}\n        DELETESTATE={refurbishedBannerDeleteShow}\n        ONCLICK={RefurbishedBannerDeleteHandleClose}\n        DESCRIPTION=\"Are you sure you want to delete this Refurbished Banner\"\n        DELETETITLE=\"Refurbished Banner\"\n      />\n\n      {/* model banner delete model */}\n\n      <DeleteModel\n        YES={DeleteModelBanner}\n        DELETESTATE={modelBannerDeleteShow}\n        ONCLICK={ModelBannerDeleteHandleClose}\n        DESCRIPTION=\"Are you sure you want to delete this Most Booked Service Banner\"\n        DELETETITLE=\" Most Booked Service Banner\"\n      />\n\n      {/* laptop brand delete model */}\n\n      <DeleteModel\n        YES={deleteLaptopBrand}\n        DELETESTATE={laptopbranddeleteShow}\n        ONCLICK={laptopBrandDeleteHandleClose}\n        DESCRIPTION=\"Are you sure you want to delete this Brand\"\n        DELETETITLE=\"Laptop Brand\"\n      />\n\n      {/* social links delete model */}\n\n      <DeleteModel\n        YES={deleteSocialLink}\n        DELETESTATE={socialLinkdeleteShow}\n        ONCLICK={() => setsocialLinkDeleteShow(false)}\n        DESCRIPTION=\"Are you sure you want to delete this Link\"\n        DELETETITLE=\"Social Link\"\n      />\n\n      {/* edit Brand Modal */}\n\n      <Modal show={editShow} onHide={handleEditClose} centered dialogClassName=\"all-modal\">\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Brand</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"fileUpload\" className=\"mt-3 mb-3\">\n            <DragAndDropImageUpload\n              labelText=\"Upload File\"\n              accepts={{\n                'image/*': ['.png', '.jpeg', '.jpg', '.svg', '.webp', '.gif'],\n              }}\n                handleFileChange={(file) => {\n                  handleFileChange(file);\n                }}\n              />\n              <div>\n                <small className=\"text-muted\">\n                  Accepted file types: .jpg , .jpeg, .png, .svg, .webp, .gif\n                </small>\n              </div>\n\n              <InputImageAndVideo image={file} valueImage={file} />\n            </Form.Group>\n\n            <Form.Group controlId=\"CredentialsInput\" className=\"mt-3\">\n              <Form.Label>\n                Credentials Name<span className=\"text-danger\">*</span>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={credentials}\n                onChange={handleCredentialsChange}\n                placeholder=\"Enter the carousel name here\"\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleEditClose}>\n            Cancel\n          </Button>\n          <Button\n            style={{ backgroundColor: color, border: 'none' }}\n            onClick={handleEditData}\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  className=\"me-2\"\n                />\n                Updating...\n              </>\n            ) : (\n              'Update'\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* edit Link Modal */}\n\n      <Modal show={editLinkShow} onHide={handleEditLinkClose} centered dialogClassName=\"all-modal\">\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Link</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"fileUpload\" className=\"mt-3 mb-3\">\n            <DragAndDropImageUpload\n              labelText=\"Upload File\"\n              accepts={{\n                'image/*': ['.png', '.jpeg', '.jpg', '.svg', '.webp', '.gif'],\n              }}\n                handleFileChange={(file) => {\n                  handleNewSocialLinkImageUpload(file);\n                }}\n              />\n              <div>\n                <small className=\"text-muted\">\n                  Accepted file types: .jpg , .jpeg, .png, .svg, .webp, .gif\n                </small>\n              </div>\n\n              <InputImageAndVideo\n                image={newLinkImage}\n                valueImage={newLinkImage}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"CredentialsInput \" className=\"mt-3\">\n              <Form.Label>\n                Social Media<span className=\"text-danger\">*</span>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={newsocialMedia}\n                onChange={handleSocialMediaChange}\n                placeholder=\"Enter the soacial media here\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"CredentialsInput\" className=\"mt-3\">\n              <Form.Label>\n                Social Link<span className=\"text-danger\">*</span>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                pattern=\"https?://.+\"\n                required\n                value={newsocialLink}\n                onChange={handleSocialLinkChange}\n                placeholder=\"Enter the social link here\"\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleEditLinkClose}>\n            Cancel\n          </Button>\n          <Button\n            style={{ backgroundColor: color, border: 'none' }}\n            onClick={handleEditLinkData}\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  className=\"me-2\"\n                />\n                Updating...\n              </>\n            ) : (\n              'Update'\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* Add Brand Modal */}\n      <Modal show={addBrandModal} onHide={handleAddBrandClose} centered dialogClassName=\"all-modal\">\n        <Modal.Header closeButton>\n          <Modal.Title>Add Brand</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"carouselName\" className=\"mb-3\">\n              <Form.Label>\n                Name<span className=\"text-danger\">*</span>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter the carousel name here\"\n                value={newBrandName}\n                onChange={(e) => setNewBrandName(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"carouselImage\">\n            <DragAndDropImageUpload\n              labelText=\"Upload File\"\n              accepts={{\n                'image/*': ['.png', '.jpeg', '.jpg', '.svg', '.webp', '.gif'],\n              }}\n                handleFileChange={(file) => {\n                  handleNewBrandImageUpload(file);\n                }}\n              />\n              <div>\n                <small className=\"text-muted\">\n                  Accepted file types: .jpg , .jpeg, .png, .svg, .webp, .gif\n                </small>\n              </div>\n\n              <InputImageAndVideo\n                image={newBrandImage}\n                valueImage={newBrandImage}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleAddBrandClose}>\n            Close\n          </Button>\n          <Button\n            style={{ backgroundColor: color, border: 'none' }}\n            onClick={handleAddBrandSubmit}\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  className=\"me-2\"\n                />\n                Adding Brand...\n              </>\n            ) : (\n              'Add Brand'\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* Add SocailLink Modal */}\n      <Modal show={addLinkModal} onHide={handleAddLinkClose} centered dialogClassName=\"all-modal\">\n        <Modal.Header closeButton>\n          <Modal.Title>Add SocialLink</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"carouselImage\">\n            <DragAndDropImageUpload\n              labelText=\"Upload File\"\n              accepts={{\n                'image/*': ['.png', '.jpeg', '.jpg', '.svg', '.webp', '.gif'],\n              }}\n                handleFileChange={(file) => {\n                  handleNewSocialLinkImageUpload(file);\n                }}\n              />\n              <div>\n                <small className=\"text-muted\">\n                  Accepted file types: .jpg , .jpeg, .png, .svg, .webp, .gif\n                </small>\n              </div>\n              <InputImageAndVideo\n                image={newLinkImage}\n                valueImage={newLinkImage}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"carouselName\" className=\"mt-3\">\n              <Form.Label>\n                Social Media<span className=\"text-danger\">*</span>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter the social media here\"\n                value={newsocialMedia}\n                onChange={(e) => setNewsocialMedia(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"carouselName\" className=\"mt-3\">\n              <Form.Label>\n                Social Link<span className=\"text-danger\">*</span>\n              </Form.Label>\n              <Form.Control\n                pattern=\"https?://.+\"\n                type=\"url\"\n                placeholder=\"Enter the soacial link here\"\n                value={newsocialLink}\n                onChange={(e) => setNewsocialLink(e.target.value)}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleAddLinkClose}>\n            Close\n          </Button>\n          <Button\n            style={{ backgroundColor: color, border: 'none' }}\n            onClick={() => {\n              handleAddLinkSubmit();\n            }}\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  className=\"me-2\"\n                />\n                Adding Link...\n              </>\n            ) : (\n              'Add Link'\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* Modal for adding generalbanner */}\n      <Modal show={addBannerModal} onHide={handleAddBannerClose} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Add General Banner</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"bannerImage\">\n            <DragAndDropImageUpload\n              labelText=\"Upload File\"\n              accepts={{\n                'image/*': ['.png', '.jpeg', '.jpg', '.svg', '.webp', '.gif'],\n              }}\n                handleFileChange={(file) => {\n                  handleNewBannerImageUpload(file);\n                }}\n              />\n              <small className=\"text-muted\">\n                Accepted file types: .jpg , .jpeg, .png, .svg, .webp, .gif\n              </small>\n\n              <InputImageAndVideo\n                image={newBannerImage}\n                valueImage={newBannerImage}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleAddBannerClose}>\n            Close\n          </Button>\n          <Button\n            style={{ backgroundColor: color, border: 'none' }}\n            onClick={handleAddBannerSubmit}\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  className=\"me-2\"\n                />\n                Adding Banner...\n              </>\n            ) : (\n              ' Add Banner'\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* Modal for adding rentalbanner */}\n\n      <Modal\n        show={rentalBannerModal}\n        onHide={handleAddRentalBannerClose}\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add Rental Banner</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"rentalBannerImage\">\n            <DragAndDropImageUpload\n              labelText=\"Upload File\"\n              accepts={{\n                'image/*': ['.png', '.jpeg', '.jpg', '.svg', '.webp', '.gif'],\n              }}\n                handleFileChange={(file) => {\n                  handleNewRentalBannerImageUpload(file);\n                }}\n              />\n              <small className=\"text-muted\">\n                Accepted file types: .jpg , .jpeg, .png, .svg, .webp, .gif\n              </small>\n\n              <InputImageAndVideo\n                image={rentalBannerImage}\n                valueImage={rentalBannerImage}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleAddRentalBannerClose}>\n            Close\n          </Button>\n          <Button\n            style={{ backgroundColor: color, border: 'none' }}\n            onClick={handleAddRentalBannerSubmit}\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  className=\"me-2\"\n                />\n                Adding Banner...\n              </>\n            ) : (\n              ' Add Banner'\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* Modal for adding refurbishedBanner */}\n\n      <Modal\n        show={refurbishedBannerModal}\n        onHide={handleAddRefurbishedBannerClose}\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add Refurbished Banner</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"rentalBannerImage\">\n            <DragAndDropImageUpload\n              labelText=\"Upload File\"\n              accepts={{\n                'image/*': ['.png', '.jpeg', '.jpg', '.svg', '.webp', '.gif'],\n              }}\n                handleFileChange={(file) => {\n                  handleNewRefurbishedBannerImageUpload(file);\n                }}\n              />\n              <small className=\"text-muted\">\n                Accepted file types: .jpg , .jpeg, .png, .svg, .webp, .gif\n              </small>\n\n              <InputImageAndVideo\n                image={refurbishedBannerImage}\n                valueImage={refurbishedBannerImage}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleAddRefurbishedBannerClose}>\n            Close\n          </Button>\n          <Button\n            style={{ backgroundColor: color, border: 'none' }}\n            onClick={handleAddRefurbishedBannerSubmit}\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  className=\"me-2\"\n                />\n                Adding Banner...\n              </>\n            ) : (\n              ' Add Banner'\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      {/* Modal for adding modelBanner */}\n\n      <Modal\n        show={modelBannerModal}\n        onHide={handleAddmodelBannerClose}\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add model Banner</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"rentalBannerImage\">\n            <DragAndDropImageUpload\n              labelText=\"Upload File\"\n              accepts={{\n                'image/*': ['.png', '.jpeg', '.jpg', '.svg', '.webp', '.gif'],\n              }}\n                handleFileChange={(file) => {\n                  handleNewmodelBannerImageUpload(file);\n                }}\n              />\n              <small className=\"text-muted\">\n                Accepted file types: .jpg , .jpeg, .png, .svg, .webp, .gif\n              </small>\n\n              <InputImageAndVideo\n                image={modelBannerImage}\n                valueImage={modelBannerImage}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleAddmodelBannerClose}>\n            Close\n          </Button>\n          <Button\n            style={{ backgroundColor: color, border: 'none' }}\n            onClick={handleAddmodelBannerSubmit}\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  className=\"me-2\"\n                />\n                Adding Banner...\n              </>\n            ) : (\n              ' Add Banner'\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* Modal for editing initial amount */}\n      <Modal\n        show={initialshowModal}\n        onHide={() => setInitialShowModal(false)}\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Update Amount</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"formInput\">\n              <Form.Label>Amount:</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter amount\"\n                value={inputValue}\n                onChange={(e) => setInputValue(e.target.value)}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => setInitialShowModal(false)}\n          >\n            Close\n          </Button>\n          <Button\n            style={{ backgroundColor: color }}\n            onClick={handleInitialAmountSubmit}\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  className=\"me-2\"\n                />\n                Updating...\n              </>\n            ) : (\n              ' Update'\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      {/* Modal for yes or no in socail links*/}\n      <Modal\n        show={showConfirmationModal}\n        onHide={() => setShowConfirmationModal(false)}\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm Update</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure you want to update ?</Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => setShowConfirmationModal(false)}\n          >\n            Cancel\n          </Button>\n          <Button\n            style={{ backgroundColor: color }}\n            onClick={handleEditLinksData}\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  className=\"me-2\"\n                />\n                Confirm...\n              </>\n            ) : (\n              'Confirm'\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default General;\n"],"names":["_ref","setFieldValue","touched","errors","labelText","nameText","accepts","handleFileChange","disabled","getRootProps","getInputProps","isDragActive","useDropzone","accept","onDrop","acceptedFiles","file","fileExtension","name","split","pop","toLowerCase","map","ext","replace","trim","includes","toast","warning","autoClose","position","onDropRejected","rejectedFiles","color","useTheme","_jsx","_Fragment","children","_jsxs","Form","Group","Label","className","concat","style","border","padding","textAlign","borderRadius","cursor","background","FiUploadCloud","size","image","valueImage","isValidImage","Array","isArray","length","imageSrc","File","URL","createObjectURL","isVideo","type","width","height","controls","objectFit","src","alt","video","valueVideo","isValidVideo","videoSrc","props","columns","useMemo","COLUMNS","data","MOCK_DATA","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","useTable","autoResetWidth","useGlobalFilter","useSortBy","usePagination","Container","fluid","Row","Table","striped","bordered","hover","responsive","marginLeft","headerGroup","index","_createElement","getHeaderGroupProps","key","headers","column","getHeaderProps","whiteSpace","justifyContent","alignItems","onClick","e","target","classList","contains","render","toggleSortBy","isSortedDesc","FaSort","row","getRowProps","cells","cell","cellIndex","isActionColumn","id","getCellProps","textOverflow","overflow","maxWidth","value","colSpan","General","deleteShow","setDeleteShow","useState","laptopbranddeleteShow","setLaptopBrandDeleteShow","socialLinkdeleteShow","setsocialLinkDeleteShow","indexToDelete","setIndexToDelete","idToDelete","setIdToDelete","showModal","setShowModal","imageFile","setImageFile","imag","setImageKey","editingSection","setEditingSection","editingId","setEditingId","addBrandModal","setAddBrandModal","newBrandName","setNewBrandName","newBrandImage","setNewBrandImage","addBannerModal","setAddBannerModal","newBannerImage","setNewBannerImage","rentalBannerModal","setRentalBannerModal","rentalBannerImage","setRentalBannerImage","rentalBannerId","setRentalBannerId","rentalBannerDeleteId","setRentalBannerDeleteId","rentalBannerDeleteShow","setRentalBannerDeleteShow","refurbishedBannerModal","setRefurbishedBannerModal","refurbishedBannerImage","setRefurbishedBannerImage","refurbishedBannerId","setRefurbishedBannerId","refurbishedBannerDeleteId","setRefurbishedBannerDeleteId","refurbishedBannerDeleteShow","setRefurbishedBannerDeleteShow","modelBannerModal","setModelBannerModal","modelBannerImage","setModelBannerImage","modelBannerId","setModelBannerId","modelBannerDeleteId","setModelBannerDeleteId","modelBannerDeleteShow","setModelBannerDeleteShow","generalData","setGeneralData","brandData","setBrandData","sociallinkData","setSocialLinkData","loading","setLoading","addLinkModal","setAddLinkModal","newsocialMedia","setNewsocialMedia","newLinkImage","setNewLinkImage","newsocialLink","setNewsocialLink","initialshowModal","setInitialShowModal","initialAmount","setInitialAmount","inputValue","setInputValue","role","getRole","read","setRead","write","setWrite","fullAccess","setFullAccess","imageData","refetch","isError","error","isLoading","useGetGeneralQuery","editId","setEditId","editShow","setEditShow","editLinkShow","setEditLinkShow","credentials","setCredentials","setFile","formatDateTime","date","format","Date","showColorPicker","setShowColorPicker","selectedColor","setSelectedColor","selectColorIndex","setSelectColorIndex","themeId","setThemeId","initialAmountId","setInitialAmountId","hasServerError","setHasServerError","editCredentialsData","useEditCredentialsMutation","deleteLaptopBrandApi","useDeleteLaptopBrandMutation","deleteBannerApi","useDeleteBannerMutation","BrandAddData","useAddBrandMutation","LinkAddData","useAddLinkMutation","BannerAddData","useAddBannerMutation","EditImagesData","useEditImagesMutation","toggle","setToggle","showConfirmationModal","setShowConfirmationModal","selectedRowId","setSelectedRowId","useEffect","moduleAccess","laptop","socialLinks","credentialsValue","_id","status","FetchLoader","console","warn","handleEditClick","section","handleImageUpload","handleEditClose","handleAddBrandClose","allowedSocialMediaNames","handleEditLinkClose","handleAddLinkClose","handleNewSocialLinkImageUpload","handleAddBannerClose","handleAddRentalBannerClose","handleAddRefurbishedBannerClose","handleAddmodelBannerClose","Header","accessor","d","i","minWidth","Cell","imageUrl","maxHeight","HiUserCircle","_ref2","push","rowIdx","original","Button","variant","editData","find","credentialsKey","handleEditShow","FaEdit","MdDelete","COLUMNSS","_ref3","_ref4","isToggled","handleCheckboxClick","check","handleEditLinkShow","ServerError","Col","backgroundColor","handleInitialAmountClick","xs","xl","l","Control","placeholder","onChange","logo","logoItem","margin","theme","themeItem","handleColorEditClick","zIndex","top","left","transform","ChromePicker","hex","handleCancelColor","async","updatedTheme","response","success","message","window","location","reload","Spinner","as","animation","videoItem","handleAddBannerClick","FaPlus","generalBanner","banner","FaTrash","deleteHandleShow","handleAddRentalBannerClick","rentalBanner","RentalBannerDeleteHandleShow","handleAddRefurbishedBannerClick","refurbishedBanner","RefurbishedBannerDeleteHandleShow","modelBanner","handleAddBrandClick","BasicTable","handleAddLinkClick","NoAccess","Modal","show","onHide","centered","closeButton","Title","Body","ImageVideoDragUpload","DragAndDropImageUpload","InputVideo","InputImageAndVideo","Footer","formData","FormData","append","DeleteModel","YES","_response$data","_response$error","DELETESTATE","ONCLICK","deleteHandleClose","DESCRIPTION","DELETETITLE","_response$error2","RentalBannerDeleteHandleClose","_response$error3","RefurbishedBannerDeleteHandleClose","_response$error4","ModelBannerDeleteHandleClose","_response$error5","laptopBrandDeleteHandleClose","_response$error6","dialogClassName","controlId","pattern","required","RegExp","test","handleNewBrandImageUpload","_response$data3","_response$error8","_response$data2","_response$error7","handleAddLinkSubmit","handleNewBannerImageUpload","_response$data4","_response$error9","reader","FileReader","onload","event","img","Image","result","imgWidth","imgHeight","onerror","readAsDataURL","handleNewRentalBannerImageUpload","_response$data5","_response$error10","handleNewRefurbishedBannerImageUpload","_response$data6","_response$error11","handleNewmodelBannerImageUpload","_response$data7","_response$error12","_response$data8","_response$error13","toggledValue"],"sourceRoot":""}