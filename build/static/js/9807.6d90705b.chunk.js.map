{"version":3,"file":"static/js/9807.6d90705b.chunk.js","mappings":"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","sources":["components/TablePaginationComponent.js","components/RequestIdCell.js","pages/Admin/Orders/Orders.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from 'react-table';\nimport { Button, Col, Container, Row, Table } from 'react-bootstrap';\nimport { BiLeftArrow, BiRightArrow } from 'react-icons/bi';\nimport { FaSort } from 'react-icons/fa';\nimport { AiFillLeftCircle, AiFillRightCircle } from 'react-icons/ai';\nimport ReactPaginate from 'react-paginate';\nimport { IconContext } from 'react-icons/lib';\nimport './FilterComponent.css';\nimport { useTheme } from '../Contexts/ThemeContext';\n\nconst BasicTable = (props) => {\n  const { color } = useTheme();\n  const columns = useMemo(() => props.COLUMNS, [props.COLUMNS]);\n  const data = useMemo(() => props.MOCK_DATA || [], [props.MOCK_DATA]);\n  const { getTableProps, getTableBodyProps, headerGroups, prepareRow, page } =\n    useTable(\n      {\n        columns,\n        data,\n        autoResetWidth: false,\n      },\n      useGlobalFilter,\n      useSortBy,\n      usePagination\n    );\n\n  return (\n    <div>\n      <Container fluid className=\"ml-xxl-n4 ml-xl-n4 ml-lg-n4\">\n        <Row>\n          <Table\n            className=\"justify-content-center align-items-center\"\n            striped\n            hover\n            {...getTableProps()}\n            responsive={true}\n            style={{ width: '100%', marginLeft: '25px' }}\n          >\n            <thead>\n              {headerGroups.map((headerGroup, index) => (\n                <tr {...headerGroup.getHeaderGroupProps()} key={index}>\n                  {headerGroup.headers.map((column, index) => (\n                    <th\n                      {...column.getHeaderProps()}\n                      key={index}\n                      className=\"text-center text-dark\"\n                      style={{\n                        width: `${column.width}px`,\n                        whiteSpace: 'nowrap',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                      }}\n                      onClick={(e) => {\n                        // Check if the click was not on the sort icon and if the column is not \"ACTIONS\"\n                        if (\n                          !e.target.classList.contains('fa-sort') &&\n                          column.render('Header') !== 'ACTIONS'\n                        ) {\n                          // Change sorting on a single tap\n                          column.toggleSortBy(!column.isSortedDesc);\n                        }\n                      }}\n                    >\n                      {column.render('Header') === 'ACTIONS' ? (\n                        <>{column.render('Header')}</>\n                      ) : (\n                        <div>\n                          {column.render('Header')}\n                          <FaSort className=\"mx-2\" />\n                        </div>\n                      )}\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {page.length > 0 ? (\n                page.map((row, index) => {\n                  prepareRow(row);\n                  return (\n                    <tr {...row.getRowProps()} key={index}>\n                      {row.cells.map((cell, cellIndex) => {\n                        const isActionColumn =\n                          cell.column.id === 'action' ||\n                          cell.column.id === 'localShop' ||\n                          cell.column.id === 'serviceCenter' ||\n                          cell.column.id === 'ourServices' ||\n                          cell.column.id === 'addInCarousel';\n                        return (\n                          <td\n                            {...cell.getCellProps()}\n                            key={cellIndex}\n                            className=\"text-secondary text-start\"\n                            style={{\n                              textOverflow: 'ellipsis',\n                              overflow: 'hidden',\n                              whiteSpace: 'nowrap',\n                              maxWidth: '20ch',\n                              backgroundColor: index <= props.count-1 ?\"#cfd1d1\":\"\",\n                            }}\n                          >\n                            {isActionColumn\n                              ? cell.render('Cell')\n                              : cell.value\n                                ? cell.render('Cell')\n                                : '-'}\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td\n                    colSpan={columns.length}\n                    className=\"text-center text-dark\"\n                  >\n                    No Data Found\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n          <Col\n            className={`${\n              page.length > 0 ? 'd-flex' : 'd-none'\n            } flex-row justify-content-center align-items-center`}\n          >\n            <Col className=\"d-flex justify-content-start align-items-center flex-wrap\">\n              <span className=\"m-1\">\n                Showing{''}\n                <strong className=\"m-2\">\n                  {props.startIndex} to {props.endIndex} of{' '}\n                  <strong className=\"m-2\"> {props.totalItems} entries</strong>\n                </strong>\n              </span>\n            </Col>\n            <Col className=\" mt-3 d-none d-sm-none d-md-none d-xxl-flex d-xl-flex d-lg-flex justify-content-end align-items-center\">\n              <ReactPaginate\n                breakLabel=\"...\"\n                onPageChange={(selectedPage) =>\n                  props.setCurrentPage(selectedPage.selected + 1)\n                }\n                pageRangeDisplayed={5}\n                pageCount={props.totalPages}\n                renderOnZeroPageCount={null}\n                activeClassName={'active'}\n                pageClassName={'page-item'}\n                pageLinkClassName=\"page-link\"\n                previousClassName=\"page-item\"\n                previousLinkClassName=\"page-link\"\n                nextClassName=\"page-item\"\n                nextLinkClassName=\"page-link\"\n                containerClassName=\"pagination\"\n                previousLabel={\n                  <IconContext.Provider value={{ color: color, size: '28px' }}>\n                    <AiFillLeftCircle />\n                  </IconContext.Provider>\n                }\n                nextLabel={\n                  <IconContext.Provider value={{ color: color, size: '28px' }}>\n                    <AiFillRightCircle />\n                  </IconContext.Provider>\n                }\n              />\n            </Col>\n            <Col className=\"d-flex d-sm-flex d-md-flex d-xxl-none d-xl-none d-lg-none justify-content-end align-items-center\">\n              <Button\n                style={{ backgroundColor: color, border: 'none' }}\n                onClick={() => props.setCurrentPage(props.currentPage - 1)}\n                disabled={props.currentPage === 1}\n                className=\"m-2\"\n              >\n                <BiLeftArrow size={14} />\n              </Button>\n              <Button\n                style={{ backgroundColor: color, border: 'none' }}\n                onClick={() => {\n                  props.setCurrentPage(props.currentPage + 1);\n                }}\n                disabled={props.currentPage === props.totalPages}\n              >\n                <BiRightArrow size={14} />\n              </Button>\n            </Col>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\nexport default BasicTable;\n","// src/components/RequestIdCell.js\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst RequestIdCell = ({ requestId,type }) => {\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    const encodedRequestId = encodeURIComponent(requestId);\n\n\n    if (type === 'Rental') {\n      navigate(`/admin/rentalOrder-details/${encodedRequestId}`);\n    } else if (type === 'Repair') {\n      navigate(`/admin/repairOrder-details/${encodedRequestId}`);\n    }\n    else if (type === 'Refurbished') {\n      navigate(`/admin/refurbishedOrder-details/${encodedRequestId}`);\n    }\n  };\n\n  return (\n    <span\n      onClick={handleClick}\n      style={{ cursor: 'pointer', color: 'blue', textDecoration: 'underline' }}\n    >\n      {requestId}\n    </span>\n  );\n};\n\nexport default RequestIdCell;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Modal,\n  Form,\n  Spinner,\n} from 'react-bootstrap';\nimport BasicTable from '../../../components/TablePaginationComponent';\nimport {\n  useDeleteOrdersMutation,\n  useGetOrdersQuery,\n  useAcceptOtpMutation,\n  useConfirmOtpMutation,\n} from '../../../redux/api/OrdersApi';\nimport { BsSearch, BsX } from 'react-icons/bs';\nimport { toast } from 'react-toastify';\nimport { FaEdit } from 'react-icons/fa';\nimport DeleteModel from '../../../components/DeleteModel';\nimport { MdDelete } from 'react-icons/md';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport RequestIdCell from '../../../components/RequestIdCell';\nimport { getRole } from '../../../Constants/Global';\nimport FetchLoader from '../../../components/FetchLoader';\nimport NoAccess from '../../../components/NoAccess';\nimport { useTheme } from '../../../Contexts/ThemeContext';\nimport { format } from 'date-fns';\nimport { IoIosPaper } from 'react-icons/io';\nimport ServerError from '../../../components/ServerError';\nimport { getPhoneNumber } from '../../../Constants/PhoneNumberGlobal';\nconst Orders = () => {\n  const { color } = useTheme();\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [startIndex, setStartIndex] = useState(1);\n  const [endIndex, setEndIndex] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalItems, setTotalItems] = useState(0);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchInput, setSearchInput] = useState('');\n  const [isSearching, setIsSearching] = useState(false);\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [deleteShow, setDeleteShow] = useState(false);\n  const [idToDelete, setIdToDelete] = useState('');\n  const [selectedAssigned, setSelectedAssigned] = useState('All');\n  const [showOtpModal, setShowOtpModal] = useState(false);\n  const [idToEdit, setIdToEdit] = useState('');\n  const [showOtpEnterModal, setShowOtpEnterModal] = useState(false);\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [otp, setOtp] = useState(new Array(4).fill(''));\n  const [requestId, setRequestId] = useState('');\n  const [verificationId, setVerificationId] = useState('');\n  const [otpError, setOtpError] = useState(false);\n  const [write, setWrite] = useState(false);\n  const [read, setRead] = useState(false);\n  const [fullAccess, setFullAccess] = useState(false);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [selectedPeriod, setSelectedPeriod] = useState('');\n  const [timer, setTimer] = useState(120);\n  const [resendEnabled, setResendEnabled] = useState(false);\n  const [hasServerError, setHasServerError] = useState(false);\n  const [count, setCount] = useState(0);\n  const inputRefs = useRef([]);\n  const timerRef = useRef(null);\n  const role = getRole();\n  const PhoneNumberGlobal = getPhoneNumber();\n  const formatDateTime = (date) => format(new Date(date), 'dd-MMM-yyyy h:mm a');\n  const {\n    data: OrdersData,\n    isLoading,\n    isError,\n    error,\n    refetch: refetchRoleAccess,\n  } = useGetOrdersQuery({\n    page: currentPage,\n    search: searchTerm,\n    id: id,\n    assigned: selectedAssigned === 'All' ? '' : selectedAssigned,\n    role: role,\n    startDate: startDate,\n    endDate: endDate,\n    dayFilter: selectedPeriod,\n    phoneNumber: PhoneNumberGlobal,\n  });\n\n  const [deleteOrders] = useDeleteOrdersMutation();\n  const [acceptOtp] = useAcceptOtpMutation();\n  const [confirmOtp] = useConfirmOtpMutation();\n\n  const handleInvoice = (requestId) => {\n    navigate(`/admin/invoice/${requestId}`);\n  };\n\n  useEffect(() => {\n    if (OrdersData && OrdersData.data) {\n      setData(OrdersData.data);\n      setStartIndex(OrdersData.pagination.startIndex);\n      setCurrentPage(currentPage);\n      setTotalItems(OrdersData.pagination.totalItems);\n      setEndIndex(OrdersData.pagination.endIndex);\n      setTotalPages(OrdersData.pagination.totalPages);\n      setWrite(OrdersData.moduleAccess.write);\n      setRead(OrdersData.moduleAccess.read);\n      setFullAccess(OrdersData.moduleAccess.fullAccess);\n      setCount(OrdersData.orderCount);\n    }\n    if (isError && error?.status === 500) {\n      setHasServerError(true);\n    } else {\n      setHasServerError(false);\n    }\n  }, [OrdersData, currentPage, role, error, isError]);\n\n  useEffect(() => {\n    if (showOtpModal) {\n      inputRefs.current[0]?.focus();\n    }\n  }, [showOtpModal]);\n\n  useEffect(() => {\n    if (showOtpEnterModal) {\n      startTimer();\n    }\n    return () => {\n      // Cleanup timer interval on component unmount\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [showOtpEnterModal]);\n\n  const startTimer = () => {\n    setTimer(120);\n    setResendEnabled(false);\n    const interval = setInterval(() => {\n      setTimer((prevTimer) => {\n        if (prevTimer <= 1) {\n          clearInterval(interval);\n          setResendEnabled(true);\n          return 0;\n        }\n        return prevTimer - 1;\n      });\n    }, 1000);\n  };\n\n  const handleClear = () => {\n    setSearchInput('');\n    setSearchTerm('');\n  };\n\n  const handleSearch = () => {\n    setIsSearching(true);\n    setSearchTerm(searchInput);\n    refetchRoleAccess({ page: currentPage, search: searchInput }).then(() => {\n      setIsSearching(false);\n    });\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  const deleteHandleShow = (id) => {\n    setIdToDelete(id);\n    setDeleteShow(true);\n  };\n\n  const deleteHandleClose = () => {\n    setDeleteShow(false);\n  };\n\n  const handleDeleteOrders = async () => {\n    try {\n      const response = await deleteOrders({ id: idToDelete, role: role });\n      setDeleteShow(false);\n      setIdToDelete('');\n      if (response?.data) {\n        toast.success(response?.data?.message, { autoClose: 1000 });\n        refetchRoleAccess();\n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleEditClick = (id, customerLocationReached, requestId) => {\n    if (role === 'Admin') {\n      navigate(`/admin/edit-order/${id}`);\n    } else if (customerLocationReached) {\n      navigate(`/admin/edit-order/${id}`);\n    } else {\n      setIdToEdit(id);\n      setRequestId(requestId);\n      setShowOtpModal(true);\n    }\n  };\n\n  const handleOtpSend = async () => {\n    setShowOtpModal(false);\n    const selectedOrder = data.find((order) => order._id === idToEdit);\n    if (selectedOrder && selectedOrder.phoneNumber) {\n      // Remove the +91 from the phone number\n      const phoneNumberWithoutPrefix = selectedOrder.phoneNumber.replace(\n        /^(\\+91)/,\n        ''\n      );\n      setPhoneNumber(phoneNumberWithoutPrefix);\n      try {\n        const response = await acceptOtp({\n          phoneNumber: phoneNumberWithoutPrefix,\n        });\n        if (response?.data?.data.responseCode === 200) {\n          setShowOtpEnterModal(true);\n          setVerificationId(response.data.data.data.verificationId);\n          toast.success('OTP sent successfully!', { autoClose: 1000 });\n        } else {\n          toast.error(response?.data.data.message, { autoClose: 1000 });\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      console.error('Selected order or phone number is undefined.');\n    }\n  };\n\n  const handleOtpCancel = () => {\n    setShowOtpModal(false);\n  };\n\n  const handleOtpEnterCancel = () => {\n    setShowOtpEnterModal(false);\n    setOtp(new Array(4).fill(''));\n  };\n\n  const handleOtpSubmit = async () => {\n    const otpValue = otp.join('');\n    if (otpValue.length < 4) {\n      setOtpError(true);\n    } else {\n      try {\n        const response = await confirmOtp({\n          requestId,\n          phoneNumber,\n          verificationId,\n          code: otpValue,\n        });\n\n        if (\n          response.data.data.data.verificationStatus ===\n          'VERIFICATION_COMPLETED'\n        ) {\n          toast.success('OTP verified successfully!', { autoClose: 1000 });\n          setShowOtpEnterModal(false);\n          setOtp(new Array(4).fill(''));\n          navigate(`/admin/edit-order/${idToEdit}`);\n        } else {\n          toast.error(response?.data?.message || 'Failed to verify OTP', {\n            autoClose: 1000,\n          });\n        }\n      } catch (error) {\n        console.error(error);\n        toast.error('Failed to verify OTP', { autoClose: 1000 });\n      }\n      setOtpError(false);\n    }\n  };\n\n  const handleChange = (element, index) => {\n    if (isNaN(element.value)) return false;\n    const newOtp = [...otp];\n    newOtp[index] = element.value;\n    setOtp(newOtp);\n\n    // Move to next input if value is entered\n    if (element.nextSibling && element.value) {\n      element.nextSibling.focus();\n    }\n  };\n\n  const handleKeyDown = (e, index) => {\n    if (e.key === 'Backspace') {\n      const newOtp = [...otp];\n      newOtp[index] = '';\n      setOtp(newOtp);\n      if (index > 0) {\n        inputRefs.current[index - 1].focus();\n      }\n    }\n  };\n\n  const handleResendOtp = async () => {\n    const selectedOrder = data.find((order) => order._id === idToEdit);\n\n    if (selectedOrder && selectedOrder.phoneNumber) {\n      const phoneNumberWithoutPrefix = selectedOrder.phoneNumber.replace(\n        /^(\\+91)/,\n        ''\n      );\n      setPhoneNumber(phoneNumberWithoutPrefix);\n      try {\n        const response = await acceptOtp({\n          phoneNumber: phoneNumberWithoutPrefix,\n        });\n        console.log(response?.data?.data);\n        console.log('-----------------------------');\n        if (response?.data?.data.responseCode === 200) {\n          setVerificationId(response.data.data.data.verificationId);\n          toast.success('OTP sent successfully!', { autoClose: 1000 });\n          startTimer();\n        } else {\n          toast.error(response?.data.data.message, { autoClose: 1000 });\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      console.error('Selected order or phone number is undefined.');\n    }\n  };\n\n  const COLUMNS = [\n    {\n      Header: 'ID',\n      accessor: 's_no',\n    },\n    {\n      Header: 'User Name',\n      accessor: 'userName',\n    },\n    {\n      Header: 'Phone Number',\n      accessor: 'phoneNumber',\n    },\n    {\n      Header: 'Alternate PhoneNumber',\n      accessor: 'alternatePhoneNumber',\n    },\n    {\n      Header: 'Email',\n      accessor: 'email',\n    },\n    {\n      Header: 'Address',\n      accessor: 'address',\n    },\n\n    {\n      Header: 'Request Id',\n      accessor: 'requestId',\n      Cell: ({ row }) => {\n        const { requestId, type } = row.original;\n        return <RequestIdCell requestId={requestId} type={type} />;\n      },\n    },\n    {\n      Header: 'Type',\n      accessor: 'type',\n    },\n    {\n      Header: 'Status',\n      accessor: 'status',\n    },\n\n    {\n      Header: 'Notes',\n      accessor: 'notes',\n    },\n    {\n      Header: 'Bill Generated',\n      accessor: 'billGenerated',\n    },\n    {\n      Header: 'Initial Amount',\n      accessor: 'amount',\n    },\n    {\n      Header: ' Initial Amount Paid Through',\n      accessor: 'initialAmountPaidThrough',\n    },\n    {\n      Header: 'Assigned On',\n      accessor: 'assignedOn',\n    },\n    {\n      Header: 'Assigned To',\n      accessor: 'assignedTo',\n    },\n    {\n      Header: 'Technician Comments',\n      accessor: 'technicianComments',\n    },\n    {\n      Header: 'Closed On',\n      accessor: 'closedOn',\n    },\n    {\n      Header: 'Paid Through',\n      accessor: 'paidThrough',\n    },\n    {\n      Header: 'Final Transaction Id',\n      accessor: 'finalTransactionId',\n    },\n    {\n      Header: 'Final Amount Paid',\n      accessor: 'finalAmountPaid',\n    },\n    {\n      Header: 'Total Amount Paid',\n      accessor: 'totalAmountPaid',\n    },\n\n    {\n      Header: 'Created At',\n      accessor: 'createdAt',\n      Cell: ({ value }) => formatDateTime(value),\n    },\n    {\n      Header: 'Updated At',\n      accessor: 'updatedAt',\n      Cell: ({ value }) => formatDateTime(value),\n    },\n  ];\n  if (fullAccess) {\n    COLUMNS.push({\n      Header: 'ACTIONS',\n      accessor: 'action',\n      Cell: (props) => {\n        const {\n          _id: rowIdx,\n          customerLocationReached,\n          requestId,\n          billGenerated,\n        } = props.row.original;\n        const printerButtonVariant =\n          billGenerated === 'yes' ? 'success' : 'secondary';\n        const handlePrinterClick = () => {\n          if (billGenerated === 'yes') {\n            const { requestId } = props.row.original;\n            handleInvoice(requestId);\n          }\n        };\n\n        return (\n          <div className=\"d-flex align-items-center justify-content-center flex-row\">\n            {billGenerated === 'yes' ? (\n              <Button\n                variant={printerButtonVariant}\n                className=\"ms-2\"\n                onClick={handlePrinterClick}\n              >\n                <IoIosPaper />\n              </Button>\n            ) : (\n              <Link to={`/admin/bill-information/${rowIdx}`}>\n                <Button variant={printerButtonVariant} className=\"ms-2\">\n                  <IoIosPaper />\n                </Button>\n              </Link>\n            )}\n\n            <Button\n              variant=\"warning\"\n              className=\"ms-2\"\n              onClick={() =>\n                handleEditClick(rowIdx, customerLocationReached, requestId)\n              }\n            >\n              <FaEdit />\n            </Button>\n\n            {/* <Button\n              variant=\"danger\"\n              className=\"ms-2\"\n              onClick={() => deleteHandleShow(rowIdx)}\n            >\n              <MdDelete />\n            </Button> */}\n          </div>\n        );\n      },\n    });\n  }\n\n  return (\n    <div>\n      {isLoading ? (\n        <FetchLoader />\n      ) : (\n        <>\n          {hasServerError ? (\n            <ServerError />\n          ) : read ? (\n            <Container fluid className=\"mt-3 \">\n              <Row className=\"boxShadow p-4 mb-4 mt-4 align-items-center\">\n                <Col\n                  xs={12}\n                  md={2}\n                  className=\"d-flex align-items-center justify-content-start mb-3 mb-md-0\"\n                >\n                  <h4 className=\"fw-bold mb-0\">Orders</h4>\n                </Col>\n\n                <Col\n                  xs={12}\n                  sm={6}\n                  md={3}\n                  className=\"d-flex flex-column align-items-start  mb-3 mb-md-0\"\n                >\n                  <p className=\"mb-0\">\n                    Total Orders: {OrdersData?.totalOrders}\n                  </p>\n                  <p className=\"mb-0\">\n                    Completed Orders: {OrdersData?.completedOrders}\n                  </p>\n                </Col>\n\n                <Col\n                  xs={12}\n                  sm={6}\n                  md={3}\n                  className=\"d-flex flex-column align-items-start  mb-3 mb-md-0\"\n                >\n                  <p className=\"mb-0\">\n                    In Process Orders: {OrdersData?.inProcessOrders}\n                  </p>\n                  <p className=\"mb-0\">\n                    Pending Orders: {OrdersData?.pendingOrders}\n                  </p>\n                </Col>\n\n                <Col\n                  xs={12}\n                  sm={6}\n                  md={3}\n                  className=\"d-flex flex-column align-items-start  mb-3 mb-md-0\"\n                >\n                  <p className=\"mb-0\">\n                    In Transit Orders: {OrdersData?.inTransitOrders}\n                  </p>\n                  <p className=\"mb-0\">\n                    Cancelled Orders: {OrdersData?.cancelledOrders}\n                  </p>\n                </Col>\n              </Row>\n\n              <Row className=\"boxShadow p-3 mb-4 d-flex flex-lg-row flex-column flex-xxl-row flex-xl-row flex-sm-column flex-md-row\">\n                <Col className=\"my-4 mx-2\" xxl={3} xl={3} lg={3} sm={6} md={6}>\n                  <div className=\"input-group\">\n                    <span className=\"input-group-text\">\n                      <BsSearch />\n                    </span>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Search Orders...\"\n                      className=\"form-control\"\n                      value={searchInput}\n                      onChange={(e) => setSearchInput(e.target.value)}\n                      onKeyPress={handleKeyPress}\n                    />\n                    {searchInput && (\n                      <span className=\"input-group-text\" onClick={handleClear}>\n                        <BsX />\n                      </span>\n                    )}\n                  </div>\n                </Col>\n                <Col\n                  className=\"d-flex flex-column text-center my-4\"\n                  xxl={2}\n                  xl={2}\n                  lg={2}\n                  sm={3}\n                  md={3}\n                >\n                  <Button\n                    style={{ backgroundColor: color, border: 'none' }}\n                    onClick={handleSearch}\n                    disabled={isSearching || searchInput === ''}\n                  >\n                    {isSearching ? (\n                      <>\n                        <Spinner\n                          as=\"span\"\n                          animation=\"border\"\n                          size=\"sm\"\n                          role=\"status\"\n                          aria-hidden=\"true\"\n                          className=\"me-2\"\n                        />\n                        Searching...\n                      </>\n                    ) : (\n                      'Search'\n                    )}\n                  </Button>\n                </Col>\n              </Row>\n              <Row className=\"boxShadow p-4 mb-4\">\n                <BasicTable\n                  COLUMNS={COLUMNS}\n                  MOCK_DATA={data}\n                  currentPage={currentPage}\n                  startIndex={startIndex}\n                  endIndex={endIndex}\n                  setCurrentPage={setCurrentPage}\n                  totalItems={totalItems}\n                  totalPages={totalPages}\n                  count={count}\n                />\n              </Row>\n\n              <DeleteModel\n                YES={handleDeleteOrders}\n                DELETESTATE={deleteShow}\n                ONCLICK={deleteHandleClose}\n                DESCRIPTION=\"Are you sure want to delete this Orders\"\n                DELETETITLE=\"Orders\"\n              />\n            </Container>\n          ) : (\n            <NoAccess />\n          )}\n        </>\n      )}\n\n      {/* Send OTP Modal */}\n      <Modal show={showOtpModal} onHide={handleOtpCancel} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Send OTP</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Customer location has not been reached. Do you want to send an OTP to\n          the customer?\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleOtpCancel}>\n            Cancel\n          </Button>\n          <Button\n            onClick={handleOtpSend}\n            style={{ backgroundColor: color, border: 'none' }}\n          >\n            Send OTP\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* Enter OTP Modal */}\n      <Modal show={showOtpEnterModal} onHide={handleOtpEnterCancel} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Enter OTP</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group>\n            <Form.Label>\n              Enter the OTP sent to {phoneNumber} Number{' '}\n              <span className=\"text-danger\">*</span>\n            </Form.Label>\n            <div className=\"d-flex justify-content-between\">\n              {otp.map((data, index) => (\n                <Form.Control\n                  key={index}\n                  type=\"text\"\n                  maxLength=\"1\"\n                  value={data}\n                  onChange={(e) => handleChange(e.target, index)}\n                  onKeyDown={(e) => handleKeyDown(e, index)}\n                  ref={(el) => (inputRefs.current[index] = el)}\n                  className=\"otp-input mx-1\"\n                  style={{\n                    width: '3rem',\n                    height: '3rem',\n                    margin: '0 0.5rem',\n                    fontSize: '1rem',\n                    borderRadius: 4,\n                    border: '1px solid rgba(0,0,0,0.3)',\n                    textAlign: 'center',\n                  }}\n                  centered\n                />\n              ))}\n            </div>\n            {otpError && (\n              <Form.Text className=\"text-danger\">\n                Please enter the OTP.\n              </Form.Text>\n            )}\n          </Form.Group>\n          <div className=\"text-center mt-3\">\n            <p>Resend OTP in {timer} seconds</p>\n            <Button\n              onClick={handleResendOtp}\n              variant=\"link\"\n              disabled={!resendEnabled}\n            >\n              Resend OTP\n            </Button>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleOtpEnterCancel}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={handleOtpSubmit}>\n            Submit OTP\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Orders;\n"],"names":["props","color","useTheme","columns","useMemo","COLUMNS","data","MOCK_DATA","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","useTable","autoResetWidth","useGlobalFilter","useSortBy","usePagination","_jsx","children","Container","fluid","className","_jsxs","Row","Table","striped","hover","responsive","style","width","marginLeft","map","headerGroup","index","_createElement","getHeaderGroupProps","key","headers","column","getHeaderProps","concat","whiteSpace","justifyContent","alignItems","onClick","e","target","classList","contains","render","toggleSortBy","isSortedDesc","_Fragment","FaSort","length","row","getRowProps","cells","cell","cellIndex","isActionColumn","id","getCellProps","textOverflow","overflow","maxWidth","backgroundColor","count","value","colSpan","Col","startIndex","endIndex","totalItems","ReactPaginate","breakLabel","onPageChange","selectedPage","setCurrentPage","selected","pageRangeDisplayed","pageCount","totalPages","renderOnZeroPageCount","activeClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","containerClassName","previousLabel","IconContext","Provider","size","AiFillLeftCircle","nextLabel","AiFillRightCircle","Button","border","currentPage","disabled","BiLeftArrow","BiRightArrow","_ref","requestId","type","navigate","useNavigate","handleClick","encodedRequestId","encodeURIComponent","cursor","textDecoration","Orders","setData","useState","setStartIndex","setEndIndex","setTotalPages","setTotalItems","searchTerm","setSearchTerm","searchInput","setSearchInput","isSearching","setIsSearching","useParams","deleteShow","setDeleteShow","idToDelete","setIdToDelete","selectedAssigned","setSelectedAssigned","showOtpModal","setShowOtpModal","idToEdit","setIdToEdit","showOtpEnterModal","setShowOtpEnterModal","phoneNumber","setPhoneNumber","otp","setOtp","Array","fill","setRequestId","verificationId","setVerificationId","otpError","setOtpError","write","setWrite","read","setRead","fullAccess","setFullAccess","startDate","setStartDate","endDate","setEndDate","selectedPeriod","setSelectedPeriod","timer","setTimer","resendEnabled","setResendEnabled","hasServerError","setHasServerError","setCount","inputRefs","useRef","timerRef","role","getRole","PhoneNumberGlobal","getPhoneNumber","formatDateTime","date","format","Date","OrdersData","isLoading","isError","error","refetch","refetchRoleAccess","useGetOrdersQuery","search","assigned","dayFilter","deleteOrders","useDeleteOrdersMutation","acceptOtp","useAcceptOtpMutation","confirmOtp","useConfirmOtpMutation","useEffect","pagination","moduleAccess","orderCount","status","_inputRefs$current$","current","focus","startTimer","clearInterval","interval","setInterval","prevTimer","handleSearch","then","handleOtpCancel","handleOtpEnterCancel","Header","accessor","Cell","original","RequestIdCell","_ref2","_ref3","push","_id","rowIdx","customerLocationReached","billGenerated","printerButtonVariant","variant","handlePrinterClick","handleInvoice","IoIosPaper","Link","to","handleEditClick","FaEdit","FetchLoader","ServerError","xs","md","sm","totalOrders","completedOrders","inProcessOrders","pendingOrders","inTransitOrders","cancelledOrders","xxl","xl","lg","BsSearch","placeholder","onChange","onKeyPress","handleClear","BsX","Spinner","as","animation","BasicTable","DeleteModel","YES","async","response","_response$data","_response$error","toast","success","message","autoClose","console","DELETESTATE","ONCLICK","deleteHandleClose","DESCRIPTION","DELETETITLE","NoAccess","Modal","show","onHide","centered","closeButton","Title","Body","Footer","selectedOrder","find","order","phoneNumberWithoutPrefix","replace","_response$data2","responseCode","Form","Group","Label","Control","maxLength","handleChange","element","isNaN","newOtp","nextSibling","onKeyDown","handleKeyDown","ref","el","height","margin","fontSize","borderRadius","textAlign","Text","_response$data4","_response$data5","log","otpValue","join","code","_response$data3","verificationStatus"],"sourceRoot":""}