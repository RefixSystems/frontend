{"version":3,"file":"static/js/3136.f4c32859.chunk.js","mappings":"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","sources":["components/TablePaginationComponent.js","pages/Admin/Settingss/Credentials.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from 'react-table';\nimport { Button, Col, Container, Row, Table } from 'react-bootstrap';\nimport { BiLeftArrow, BiRightArrow } from 'react-icons/bi';\nimport { FaSort } from 'react-icons/fa';\nimport { AiFillLeftCircle, AiFillRightCircle } from 'react-icons/ai';\nimport ReactPaginate from 'react-paginate';\nimport { IconContext } from 'react-icons/lib';\nimport './FilterComponent.css';\nimport { useTheme } from '../Contexts/ThemeContext';\n\nconst BasicTable = (props) => {\n  const { color } = useTheme();\n  const columns = useMemo(() => props.COLUMNS, [props.COLUMNS]);\n  const data = useMemo(() => props.MOCK_DATA || [], [props.MOCK_DATA]);\n  const { getTableProps, getTableBodyProps, headerGroups, prepareRow, page } =\n    useTable(\n      {\n        columns,\n        data,\n        autoResetWidth: false,\n      },\n      useGlobalFilter,\n      useSortBy,\n      usePagination\n    );\n\n  return (\n    <div>\n      <Container fluid className=\"ml-xxl-n4 ml-xl-n4 ml-lg-n4\">\n        <Row>\n          <Table\n            className=\"justify-content-center align-items-center\"\n            striped\n            hover\n            {...getTableProps()}\n            responsive={true}\n            style={{ width: '100%', marginLeft: '25px' }}\n          >\n            <thead>\n              {headerGroups.map((headerGroup, index) => (\n                <tr {...headerGroup.getHeaderGroupProps()} key={index}>\n                  {headerGroup.headers.map((column, index) => (\n                    <th\n                      {...column.getHeaderProps()}\n                      key={index}\n                      className=\"text-center text-dark\"\n                      style={{\n                        width: `${column.width}px`,\n                        whiteSpace: 'nowrap',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                      }}\n                      onClick={(e) => {\n                        // Check if the click was not on the sort icon and if the column is not \"ACTIONS\"\n                        if (\n                          !e.target.classList.contains('fa-sort') &&\n                          column.render('Header') !== 'ACTIONS'\n                        ) {\n                          // Change sorting on a single tap\n                          column.toggleSortBy(!column.isSortedDesc);\n                        }\n                      }}\n                    >\n                      {column.render('Header') === 'ACTIONS' ? (\n                        <>{column.render('Header')}</>\n                      ) : (\n                        <div>\n                          {column.render('Header')}\n                          <FaSort className=\"mx-2\" />\n                        </div>\n                      )}\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {page.length > 0 ? (\n                page.map((row, index) => {\n                  prepareRow(row);\n                  return (\n                    <tr {...row.getRowProps()} key={index}>\n                      {row.cells.map((cell, cellIndex) => {\n                        const isActionColumn =\n                          cell.column.id === 'action' ||\n                          cell.column.id === 'localShop' ||\n                          cell.column.id === 'serviceCenter' ||\n                          cell.column.id === 'ourServices' ||\n                          cell.column.id === 'addInCarousel';\n                        return (\n                          <td\n                            {...cell.getCellProps()}\n                            key={cellIndex}\n                            className=\"text-secondary text-start\"\n                            style={{\n                              textOverflow: 'ellipsis',\n                              overflow: 'hidden',\n                              whiteSpace: 'nowrap',\n                              maxWidth: '20ch',\n                              backgroundColor: index <= props.count-1 ?\"#cfd1d1\":\"\",\n                            }}\n                          >\n                            {isActionColumn\n                              ? cell.render('Cell')\n                              : cell.value\n                                ? cell.render('Cell')\n                                : '-'}\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td\n                    colSpan={columns.length}\n                    className=\"text-center text-dark\"\n                  >\n                    No Data Found\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n          <Col\n            className={`${\n              page.length > 0 ? 'd-flex' : 'd-none'\n            } flex-row justify-content-center align-items-center`}\n          >\n            <Col className=\"d-flex justify-content-start align-items-center flex-wrap\">\n              <span className=\"m-1\">\n                Showing{''}\n                <strong className=\"m-2\">\n                  {props.startIndex} to {props.endIndex} of{' '}\n                  <strong className=\"m-2\"> {props.totalItems} entries</strong>\n                </strong>\n              </span>\n            </Col>\n            <Col className=\" mt-3 d-none d-sm-none d-md-none d-xxl-flex d-xl-flex d-lg-flex justify-content-end align-items-center\">\n              <ReactPaginate\n                breakLabel=\"...\"\n                onPageChange={(selectedPage) =>\n                  props.setCurrentPage(selectedPage.selected + 1)\n                }\n                pageRangeDisplayed={5}\n                pageCount={props.totalPages}\n                renderOnZeroPageCount={null}\n                activeClassName={'active'}\n                pageClassName={'page-item'}\n                pageLinkClassName=\"page-link\"\n                previousClassName=\"page-item\"\n                previousLinkClassName=\"page-link\"\n                nextClassName=\"page-item\"\n                nextLinkClassName=\"page-link\"\n                containerClassName=\"pagination\"\n                previousLabel={\n                  <IconContext.Provider value={{ color: color, size: '28px' }}>\n                    <AiFillLeftCircle />\n                  </IconContext.Provider>\n                }\n                nextLabel={\n                  <IconContext.Provider value={{ color: color, size: '28px' }}>\n                    <AiFillRightCircle />\n                  </IconContext.Provider>\n                }\n              />\n            </Col>\n            <Col className=\"d-flex d-sm-flex d-md-flex d-xxl-none d-xl-none d-lg-none justify-content-end align-items-center\">\n              <Button\n                style={{ backgroundColor: color, border: 'none' }}\n                onClick={() => props.setCurrentPage(props.currentPage - 1)}\n                disabled={props.currentPage === 1}\n                className=\"m-2\"\n              >\n                <BiLeftArrow size={14} />\n              </Button>\n              <Button\n                style={{ backgroundColor: color, border: 'none' }}\n                onClick={() => {\n                  props.setCurrentPage(props.currentPage + 1);\n                }}\n                disabled={props.currentPage === props.totalPages}\n              >\n                <BiRightArrow size={14} />\n              </Button>\n            </Col>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\nexport default BasicTable;\n","import React, { useState, useEffect } from 'react';\nimport { Button, Col, Container, Row, Modal, Form, Spinner } from 'react-bootstrap';\nimport BasicTable from '../../../components/TablePaginationComponent';\nimport {\n  useEditCredentialsMutation,\n  useGetCredentialsQuery,\n} from '../../../redux/api/CredentialsApi';\nimport { toast } from 'react-toastify';\nimport { FaEdit } from 'react-icons/fa';\nimport { useParams } from 'react-router-dom';\nimport { getRole } from '../../../Constants/Global';\nimport FetchLoader from '../../../components/FetchLoader';\nimport NoAccess from '../../../components/NoAccess';\nimport { useTheme } from '../../../Contexts/ThemeContext';\nimport { format } from 'date-fns';\nimport ServerError from '../../../components/ServerError';\nconst Credentials = () => {\n  const { color } = useTheme();\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [startIndex, setStartIndex] = useState(1);\n  const [endIndex, setEndIndex] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalItems, setTotalItem] = useState();\n  const { id } = useParams();\n  const [editId, setEditId] = useState(null);\n  const [editShow, setEditShow] = useState(false);\n  const [Credentials, setCredentials] = useState('');\n  const [Credentialsvalue, setCredentialsValue] = useState('');\n  const [read, setRead] = useState(false);\n  const [fullAccess, setFullAccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [hasServerError, setHasServerError] = useState(false);\n\n  const role = getRole();\n\n  const { data: CredentialsData, isLoading, isError, \n    error, } = useGetCredentialsQuery({\n    page: currentPage,\n    search: '',\n    id: id,\n    role: role,\n  });\n  const [editCredentialsData] = useEditCredentialsMutation();\n  const formatDateTime = (date) => format(new Date(date), 'dd-MMM-yyyy h:mm a');\n  useEffect(() => {\n    if (CredentialsData && CredentialsData.data) {\n      setData(CredentialsData.data);\n      setStartIndex(CredentialsData.pagination.startIndex);\n      setCurrentPage(currentPage);\n      setTotalItem(CredentialsData.pagination.totalItems);\n      setEndIndex(CredentialsData.pagination.endIndex);\n      setTotalPages(CredentialsData.pagination.totalPages);\n      setFullAccess(CredentialsData.moduleAccess.fullAccess);\n      setRead(CredentialsData.moduleAccess.read);\n    }\n    if (isError && error?.status === 500) {\n      setHasServerError(true);\n    } else {\n      setHasServerError(false);\n    }\n  }, [CredentialsData, currentPage, role,error,isError]);\n\n\n  const handleEditShow = (id) => {\n    const credentials = data.find((d) => d._id === id);\n\n    if (credentials) {\n      setEditId(id);\n      setCredentials(credentials.credentialsKey);\n      setCredentialsValue(credentials.credentialsValue);\n      setEditShow(true);\n    }\n  };\n\n  const handleEditClose = () => {\n    setEditShow(false);\n    setEditId(null);\n    setCredentials('');\n  };\n\n  const handleCredentialsChange = (e) => {\n    setCredentials(e.target.value);\n  };\n\n  const handleCredentialsValueChange = (e) => {\n    setCredentialsValue(e.target.value);\n  };\n\n  const handleEditData = async () => {\n    if (!Credentialsvalue) {\n      toast.error('Please fill  the fields', { autoClose: 1000 });\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await editCredentialsData({\n        id: editId,\n        role: role,\n        data: {\n          type: 'credential',\n          credentialsValue: Credentialsvalue,\n        },\n      });\n\n      if (response.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n        setEditShow(false);\n      } else {\n        toast.error(response.error.data.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const COLUMNS = [\n    {\n      Header: 'ID',\n      accessor: (d, i) => i + 1,\n      minWidth: 10,\n    },\n    {\n      Header: 'Name',\n      accessor: 'credentialsKey',\n    },\n    {\n      Header: 'value',\n      accessor: 'credentialsValue',\n    },\n\n    {\n      Header: 'Created At',\n      accessor: 'createdAt',\n      Cell: ({ value }) => formatDateTime(value),\n    },\n    {\n      Header: 'Updated At',\n      accessor: 'updatedAt',\n      Cell: ({ value }) => formatDateTime(value),\n    },\n  ];\n\n  if (fullAccess) {\n    COLUMNS.push({\n      Header: 'ACTIONS',\n      accessor: 'action',\n      Cell: (props) => {\n        const rowIdx = props.row.original._id;\n        return (\n          <div className=\"d-flex align-items-center justify-content-center flex-row\">\n            <Button variant=\"warning\" onClick={() => handleEditShow(rowIdx)}>\n              <FaEdit />\n            </Button>\n          </div>\n        );\n      },\n    });\n  }\n\n  return (\n    <div>\n      {isLoading ? (\n        <FetchLoader />\n      ) : (\n        <>\n          {hasServerError ? (\n         <ServerError/>\n        ) : read ? (\n            <Container fluid className=\"mt-3 \">\n              <Row className=\"boxShadow p-4 mb-4 mt-4\">\n                <Col className=\"d-flex flex-row justify-content-between mt-1\">\n                  <h4 className=\"fw-bold\">Credentials</h4>\n                </Col>\n              </Row>\n              <Row className=\"boxShadow p-4 mb-4\">\n                <BasicTable\n                  COLUMNS={COLUMNS}\n                  MOCK_DATA={data}\n                  currentPage={currentPage}\n                  startIndex={startIndex}\n                  endIndex={endIndex}\n                  setCurrentPage={setCurrentPage}\n                  totalItems={totalItems}\n                  totalPages={totalPages}\n                />\n              </Row>\n            </Container>\n          ) : (\n            <NoAccess />\n          )}\n        </>\n      )}\n\n      <Modal show={editShow} onHide={handleEditClose} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Credentials</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"CredentialsInput\">\n              <Form.Label>Credentials Name:</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={Credentials}\n                onChange={handleCredentialsChange}\n                readOnly\n                disabled\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"CredentialsInput\">\n              <Form.Label>Credentials value:</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={Credentialsvalue}\n                onChange={handleCredentialsValueChange}\n                placeholder=\"Enter the credentials value here\"\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleEditClose}>\n            Cancel\n          </Button>\n          <Button\n            style={{ backgroundColor: color, border: 'none' }}\n            onClick={handleEditData}\n            disabled={loading}\n            >\n              {loading ? (\n                <>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                    className=\"me-2\"\n                  />\n                  Updating...\n                </>\n              ) : (\n                'Update'\n              )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Credentials;\n"],"names":["props","color","useTheme","columns","useMemo","COLUMNS","data","MOCK_DATA","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","useTable","autoResetWidth","useGlobalFilter","useSortBy","usePagination","_jsx","children","Container","fluid","className","_jsxs","Row","Table","striped","hover","responsive","style","width","marginLeft","map","headerGroup","index","_createElement","getHeaderGroupProps","key","headers","column","getHeaderProps","concat","whiteSpace","justifyContent","alignItems","onClick","e","target","classList","contains","render","toggleSortBy","isSortedDesc","_Fragment","FaSort","length","row","getRowProps","cells","cell","cellIndex","isActionColumn","id","getCellProps","textOverflow","overflow","maxWidth","backgroundColor","count","value","colSpan","Col","startIndex","endIndex","totalItems","ReactPaginate","breakLabel","onPageChange","selectedPage","setCurrentPage","selected","pageRangeDisplayed","pageCount","totalPages","renderOnZeroPageCount","activeClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","containerClassName","previousLabel","IconContext","Provider","size","AiFillLeftCircle","nextLabel","AiFillRightCircle","Button","border","currentPage","disabled","BiLeftArrow","BiRightArrow","Credentials","setData","useState","setStartIndex","setEndIndex","setTotalPages","setTotalItem","useParams","editId","setEditId","editShow","setEditShow","setCredentials","Credentialsvalue","setCredentialsValue","read","setRead","fullAccess","setFullAccess","loading","setLoading","hasServerError","setHasServerError","role","getRole","CredentialsData","isLoading","isError","error","useGetCredentialsQuery","search","editCredentialsData","useEditCredentialsMutation","formatDateTime","date","format","Date","useEffect","pagination","moduleAccess","status","handleEditClose","Header","accessor","d","i","minWidth","Cell","_ref","_ref2","push","rowIdx","original","_id","variant","credentials","find","credentialsKey","credentialsValue","handleEditShow","FaEdit","FetchLoader","ServerError","BasicTable","NoAccess","Modal","show","onHide","centered","closeButton","Title","Body","Form","Group","controlId","Label","Control","type","onChange","readOnly","placeholder","Footer","async","response","toast","success","message","autoClose","console","Spinner","as","animation"],"sourceRoot":""}