{"version":3,"file":"static/js/4196.0293c740.chunk.js","mappings":"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","sources":["components/FetchLoader.js","components/Heading.js","pages/Profile/OrderReviewValidation.js","components/OrdersEmpty.js","pages/Profile/Orders.js","pages/Profile/Addresses.js","pages/Profile/Quotes.js","pages/Profile/ProfileValidation.js","pages/Cart/Cart.js","pages/Profile/Profile.js"],"sourcesContent":["import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { RotatingLines } from 'react-loader-spinner'; \nimport loader from '../assests/images/loader.gif';\n\nconst FetchLoader = () => {\n  return (\n    <Container className=\"vh-100 d-flex flex-column justify-content-center align-items-center\">\n      {/* Add your GIF image below */}\n      <img \n        src={loader} \n        alt=\"Loading...\" \n        style={{ width: '150px', height: '150px' }} \n      />\n      {/* Optional: Use a text loader if needed */}\n      <div className=\"text mt-3\">Loading ...</div>\n    </Container>\n  );\n};\n\nexport default FetchLoader;\n","import React from 'react';\n\nexport const HeadingWithQuotes = ({ children }) => {\n  return (\n    <h4 className=\"text-center\">\n      <span className=\"main\">“</span>\n      {children}\n      <span className=\"main\">”</span>\n    </h4>\n  );\n};\n\nexport const Heading = ({ children }) => {\n  return <h4 className=\"text-center\">{children}</h4>;\n};\n","import * as Yup from 'yup';\n\n\n\nexport const reviewValidationSchema = Yup.object().shape({\n  rating: Yup.number()\n    .min(1, 'Rating must be at least 1 star')\n    .max(5, 'Rating cannot exceed 5 stars')\n    .required('Rating is required'),\n  review: Yup.string()\n   \n    .required('Review is required'),\n  images: Yup.array()\n    .of(\n      Yup.mixed()\n        // .test(\n        //   'fileSize',\n        //   'File size is too large. Maximum size is 10MB',\n        //   (value) => !value || (value && value.size <= 10 * 1024 * 1024)\n        // )\n        .test(\n          'fileFormat',\n          'Unsupported format. Only JPG, JPEG, PNG, WEBP, MP4, MOV, AVI, and MKV are allowed',\n          (value) =>\n            !value ||\n            (value &&\n              [\n                'image/jpeg',\n                'image/jpg',\n                'image/png',\n                'image/webp',\n                'video/mp4',\n                'video/quicktime', // .mov\n                'video/x-msvideo', // .avi\n                'video/x-matroska' // .mkv\n              ].includes(value.type))\n        )\n    )\n    .max(3, 'You can upload a maximum of 3 images or videos'),\n});\n\n\n\n\nexport const productReviewValidationSchema = Yup.object().shape({\n  rating: Yup.number()\n    .min(1, 'Rating must be at least 1 star')\n    .max(5, 'Rating cannot exceed 5 stars')\n    .required('Rating is required'),\n  review: Yup.string()\n    \n    .required('Review is required'),\n    images: Yup.array()\n    .of(\n      Yup.mixed()\n        // .test(\n        //   'fileSize',\n        //   'File size is too large. Maximum size is 10MB',\n        //   (value) => !value || (value && value.size <= 10 * 1024 * 1024)\n        // )\n        .test(\n          'fileFormat',\n          'Unsupported format. Only JPG, JPEG, PNG, WEBP, MP4, MOV, AVI, and MKV are allowed',\n          (value) =>\n            !value ||\n            (value &&\n              [\n                'image/jpeg',\n                'image/jpg',\n                'image/png',\n                'image/webp',\n                'video/mp4',\n                'video/quicktime', // .mov\n                'video/x-msvideo', // .avi\n                'video/x-matroska' // .mkv\n              ].includes(value.type))\n        )\n    )\n    .max(3, 'You can upload a maximum of 3 images or videos'),\n});\n","import React from 'react';\nimport Ordersnotfound from '../assests/json/Noorders.json';\nimport { Container } from 'react-bootstrap';\nimport Lottie from 'react-lottie';\n\nconst OrdersEmpty = () => {\n  const options = {\n    loop: true,\n    autoplay: true,\n    animationData: Ordersnotfound,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice',\n    },\n  };\n  return (\n    <Container\n      fluid\n      className=\"w-100 d-flex flex-column justify-content-center align-items-center \"\n    >\n      {' '}\n      <Lottie\n        options={options}\n        height=\"auto\"\n        width=\"100%\"\n        style={{ maxWidth: '600px', maxHeight: '400px',alignItems:'center'}}\n      />\n    </Container>\n  );\n};\n\nexport default OrdersEmpty ;\n\n\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  useAddProductReviewMutation,\n  useAddProductsReviewMutation,\n} from '../../redux/api/ReviewsApi';\n\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Button,\n  Form,\n  Modal,\n  Image,\n} from 'react-bootstrap';\nimport Laptop from '../../assests/images/laptop.webp';\n\nimport Paragraph from '../../components/paragraph';\nimport { BsChevronDown } from 'react-icons/bs';\nimport { Rating } from 'react-simple-star-rating';\nimport BasicButton from '../../components/BasicButton';\nimport { useGetViewUserOrderQuery } from '../../redux/api/ProfileOrdersApi';\nimport { Heading } from '../../components/Heading';\nimport CustomPagination from '../../components/CustomPagination';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport SuccessModal from '../../components/SuccessModal';\n\nimport {\n  reviewValidationSchema,\n  productReviewValidationSchema,\n} from './OrderReviewValidation';\nimport FetchLoader from '../../components/FetchLoader';\nimport OrdersEmpty from '../../components/OrdersEmpty';\nimport { useTheme } from '../../Contexts/ThemeContext';\n\nimport { MdInsertPhoto } from 'react-icons/md';\nimport { IoMdCloseCircle } from 'react-icons/io';\nimport { FiUploadCloud, FiXCircle } from 'react-icons/fi';\nimport { useNavigate } from 'react-router-dom';\nimport { FaCircle, FaStar } from 'react-icons/fa';\nimport { FaDownload } from 'react-icons/fa';\nfunction Orders() {\n  const { color } = useTheme();\n  const navigate = useNavigate();\n  const [activities, setActivities] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [showAddressModal, setShowAddressModal] = useState(false);\n  const [selectedActivity, setSelectedActivity] = useState(null);\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [totalItems, setTotalItems] = useState();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [reviewModal, setReviewModal] = useState(false);\n  const [totalPage, setTotalPage] = useState();\n  const [errorLottie, setErrorLottie] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [rating, setRating] = useState('');\n  const [review, setReview] = useState('');\n  const [images, setImages] = useState([]);\n  const [similarProduct, setSimilarProduct] = useState([]);\n  const [productReviewModal, setProductReviewModal] = useState(false);\n  const { data: OrdersData, isLoading: orderLoader } = useGetViewUserOrderQuery(\n    {\n      phoneNumber: phoneNumber,\n      page: currentPage,\n    }\n  );\n\n  const [ReviewsApi, { isLoading }] = useAddProductReviewMutation();\n  const [productReview, { isLoading: reviewLoader }] =\n    useAddProductsReviewMutation();\n\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      const parsedToken = JSON.parse(storedToken);\n      setPhoneNumber(parsedToken.phoneNumber);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (OrdersData && OrdersData.data) {\n      setActivities(OrdersData.data);\n    }\n    if (OrdersData && OrdersData.pagination) {\n      setTotalPage(OrdersData.pagination.totalPages);\n      setTotalItems(OrdersData.pagination.totalItems);\n      setCurrentPage(currentPage);\n    }\n  }, [OrdersData, currentPage]);\n\n  const extractDate = (dateTimeString) => {\n    const datePart = dateTimeString.split(' ')[0];\n    const [year, month, day] = datePart.split('-');\n    return `${day}-${month}-${year}`;\n  };\n\n  const handleChevronClick = (laptop) => {\n    setSelectedActivity(laptop);\n    setShowAddressModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowAddressModal(false);\n    setSelectedActivity(null);\n  };\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n    window.scrollTo(0, 1);\n  };\n\n  const handleRating = (rate) => {\n    setRating(rate);\n  };\n\n  const handleImageChange = (e, index, setFieldValue, values) => {\n    const selectedFile = e.target.files[0];\n    const updatedImages = [...values.images];\n    updatedImages[index] = selectedFile;\n    setFieldValue('images', updatedImages);\n  };\n\n  const handleImageRemove = (index, setFieldValue, values) => {\n    const updatedImages = values.images.filter((_, idx) => idx !== index);\n    setFieldValue('images', updatedImages);\n  };\n  const handleSubmit = async (values, { resetForm, setFieldValue }) => {\n    const formData = new FormData();\n    formData.append('phoneNumber', phoneNumber);\n    formData.append('rating', values.rating);\n    formData.append('review', values.review);\n    values.images.forEach((image) => {\n      formData.append('images', image);\n    });\n\n    try {\n      const response = await ReviewsApi({ data: formData });\n      if (response?.data) {\n        setReviewModal(false);\n        setErrorLottie(false);\n        setSuccessMessage(response.data.message);\n        setShowModal(true);\n        setTimeout(() => setShowModal(false), 4000);\n        resetForm();\n        setImages([]);\n        setFieldValue('rating', 0);\n      } else {\n        setReviewModal(false);\n        setErrorLottie(true);\n        setSuccessMessage(response?.error?.data.error);\n        setShowModal(true);\n        setTimeout(() => setShowModal(false), 4000);\n        resetForm();\n      }\n    } catch (error) {\n      console.error('Error submitting review:', error);\n    }\n  };\n\n  const handleProductSubmit = async (values, { resetForm, setFieldValue }) => {\n    const formData = new FormData();\n    formData.append('phoneNumber', phoneNumber);\n    formData.append('rating', values.rating);\n    formData.append('review', values.review);\n    formData.append('productId', selectedActivity?.productId);\n    formData.append('productType', selectedActivity?.type);\n    values.images.forEach((image) => {\n      formData.append('images', image);\n    });\n\n    try {\n      const response = await productReview({ data: formData });\n      if (response?.data) {\n        setProductReviewModal(false);\n        setErrorLottie(false);\n        setSuccessMessage(response.data.message);\n        setShowModal(true);\n        setTimeout(() => setShowModal(false), 4000);\n        resetForm();\n        setImages([]);\n        setFieldValue('rating', 0);\n      } else {\n        setProductReviewModal(false);\n        setErrorLottie(true);\n        setSuccessMessage(response?.error?.data.error);\n        setShowModal(true);\n        setTimeout(() => setShowModal(false), 4000);\n        resetForm();\n      }\n    } catch (error) {\n      console.error('Error submitting review:', error);\n      setErrorLottie(true);\n      setShowModal(true);\n      setTimeout(() => setShowModal(false), 4000);\n    }\n  };\n\n  const navigateToRentDetails = (productDetails, laptop) => {\n    let similarProduct;\n    if (laptop.type === 'Rental') {\n      similarProduct = OrdersData.rentalCarousel;\n      navigate('/rent/rent-details', {\n        state: { laptop: productDetails, similarProduct },\n      });\n    } else if (laptop.type === 'Refurbished') {\n      similarProduct = OrdersData.refurbishedCarousel;\n      navigate('/refurbished/refurbished-details', {\n        state: { laptop: productDetails, similarProduct },\n      });\n    } else {\n      navigate('/repair-service');\n    }\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center mt-2\">\n        <Heading>Your Orders</Heading>\n      </Row>\n      {orderLoader ? (\n        <FetchLoader />\n      ) : (\n        <>\n          {activities.length > 0 ? (\n            activities.map((laptop, idx) => (\n              <Row className=\"justify-content-center mt-4\" key={idx}>\n                <Col md={12} sm={12}>\n                  <Row className=\"justify-content-center mt-4\" key={laptop._id}>\n                    <Col md={12} lg={12}>\n                      <Card>\n                        <Card.Body>\n                          <Row className=\"d-flex justify-content-between \">\n                            <Col xs={12} md={3} lg={3} className=\"mt-1\">\n                              <span className=\"d-md-block\">\n                                <strong>Order Date: </strong>\n                              </span>\n                              <span className=\"custom-span\">\n                                {extractDate(laptop.createdAt)}\n                              </span>\n                            </Col>\n\n                            <Col xs={12} md={3} lg={3} className=\"mt-1 \">\n                              <span>\n                                <strong>Ship To: </strong>\n                                <BsChevronDown\n                                  onClick={() => handleChevronClick(laptop)}\n                                  style={{\n                                    cursor: 'pointer',\n                                    marginLeft: '1px',\n                                  }}\n                                />\n                              </span>\n                              <span className=\"d-md-block custom-span\">\n                                {laptop.userName}\n                              </span>\n                            </Col>\n\n                            <Col\n                              xs={12}\n                              md={3}\n                              lg={3}\n                              className=\"mt-1 text-nowrap\"\n                            >\n                              <span>\n                                <strong>Order Id:</strong>\n                              </span>\n                              <span\n                                className=\"custom-span d-md-block\"\n                                style={\n                                  window.innerWidth < 768\n                                    ? { width: '100%', whiteSpace: 'normal' }\n                                    : { whiteSpace: 'nowrap' }\n                                }\n                              >\n                                #{laptop.requestId}\n                              </span>\n                            </Col>\n\n                            <Col xs={12} md={3} lg={3} className=\"mt-1\">\n                              <span className=\"\">\n                                <strong>Payment Mode: </strong>\n                              </span>\n                              <span className=\" custom-span\">\n                                {laptop.initialAmountPaidThrough === 'COD'\n                                  ? 'Cash On Delivery'\n                                  : 'Digital Payment'}\n                              </span>\n                            </Col>\n                            <Row\n                              className=\"mt-lg-3 mt-md-3 d-none d-md-flex \"\n                              style={{ cursor: 'pointer' }}\n                            >\n                              <Col\n                                xs={12}\n                                className=\"text-lg-end d-flex justify-content-end align-items-center\"\n                              >\n                                <span className=\"\">\n                                  <strong>Order Status:</strong>\n                                </span>\n                                <span className=\"m-1\"> {laptop.status}</span>\n\n                                {laptop.status === 'Completed' && (\n                                  <>\n                                    <span className=\"mx-2\">|</span>\n                                    <span\n                                      className=\"ms-1\"\n                                      style={{ cursor: 'pointer' }}\n                                    >\n                                      <div>\n                                        <button\n                                          style={{\n                                            border: `1px solid ${color}`,\n                                            cursor: 'pointer',\n                                          }}\n                                          className=\"rounded p-1\"\n                                          onClick={() =>\n                                            navigate('/invoice', {\n                                              state: { data: laptop.billInfo },\n                                            })\n                                          }\n                                          key={laptop._id}\n                                        >\n                                          <FaDownload\n                                            size={16}\n                                            className=\"mx-1\"\n                                          />\n                                          Invoice\n                                        </button>\n                                      </div>\n                                    </span>\n                                  </>\n                                )}\n                              </Col>\n                            </Row>\n\n                            {/* Order Status and Invoice */}\n                            <Row className=\"d-block d-md-none \">\n                              <Col xs={12} className=\"mt-1\">\n                                <span className=\"\">\n                                  <strong>Status: </strong>\n                                </span>\n                                <span className=\"custom-span text-nowrap d-md-block\">\n                                  {laptop.status}\n                                </span>\n                              </Col>\n                              <Col\n                                className=\"d-flex justify-content-start mt-2\"\n                                xs={12}\n                              >\n                                {laptop.status === 'Completed' && (\n                                  <>\n                                    <div>\n                                      <button\n                                        style={{\n                                          border: `1px solid ${color}`,\n                                          cursor: 'pointer',\n                                        }}\n                                        className=\"rounded p-1\"\n                                        onClick={() =>\n                                          navigate('/invoice', {\n                                            state: { data: laptop.billInfo },\n                                          })\n                                        }\n                                        key={laptop._id}\n                                      >\n                                        <FaDownload\n                                          size={16}\n                                          className=\"mx-1\"\n                                        />\n                                        Invoices\n                                      </button>\n                                    </div>\n                                  </>\n                                )}\n                              </Col>\n                            </Row>\n                          </Row>\n\n                          <hr className=\"horizontal-line\" />\n                          {/* *****laptop**** */}\n                          <Row className=\"d-flex flex-column flex-md-row justify-content-center justify-content-md-between align-items-center d-none d-md-flex\">\n                            <Col\n                              xs={12}\n                              md={4}\n                              lg={4}\n                              className=\"d-flex justify-content-center align-items-center\"\n                            >\n                              <img\n                                src={laptop.image ?? Laptop}\n                                width={150}\n                                height={100}\n                                style={{\n                                  backgroundColor: 'white',\n                                  objectFit: 'cover',\n                                  cursor: 'pointer',\n                                }}\n                                alt=\"Laptop\"\n                                onClick={() =>\n                                  navigateToRentDetails(\n                                    laptop.productDetails,\n                                    laptop\n                                  )\n                                }\n                              />\n                            </Col>\n                            <Col xs={12} md={8} lg={8} className=\"mt-3\">\n                              {laptop &&\n                                laptop.productDetails &&\n                                (laptop.type === 'Rental' ||\n                                  laptop.productDetails.type ===\n                                    'Refurbished') && (\n                                  <Row className=\"gx-5 gy-5\">\n                                    <Col\n                                      xs={6}\n                                      md={4}\n                                      className=\"d-lg-inline text-nowrap\"\n                                    >\n                                      <Paragraph className=\"custom-paragraph \">\n                                        Brand:{' '}\n                                        <span\n                                          style={{\n                                            fontWeight: 'normal',\n                                            fontSize: '14px',\n                                          }}\n                                        >\n                                          {laptop.brand}\n                                        </span>\n                                      </Paragraph>\n                                      <Paragraph className=\"custom-paragraph \">\n                                        RAM:{' '}\n                                        <span\n                                          style={{\n                                            fontWeight: 'normal',\n                                            fontSize: '14px',\n                                          }}\n                                        >\n                                          {laptop.productDetails.ram}\n                                        </span>\n                                      </Paragraph>\n                                      <Paragraph className=\"custom-paragraph \">\n                                        Color:{' '}\n                                        <span\n                                          style={{\n                                            fontWeight: 'normal',\n                                            fontSize: '14px',\n                                          }}\n                                        >\n                                          {laptop.productDetails.color}{' '}\n                                        </span>\n                                        (\n                                        <FaCircle\n                                          style={{\n                                            fontWeight: 'normal',\n                                            fontSize: '14px',\n                                          }}\n                                          color={laptop.productDetails.color}\n                                        />\n                                        )\n                                      </Paragraph>\n\n                                      <Paragraph className=\"fw-0  custom-paragraph\">\n                                        OS:{' '}\n                                        <span\n                                          style={{\n                                            fontWeight: 'normal',\n                                            fontSize: '14px',\n                                          }}\n                                        >\n                                          {\n                                            laptop.productDetails\n                                              .operatingSystem\n                                          }\n                                        </span>\n                                      </Paragraph>\n                                    </Col>\n\n                                    <Col\n                                      xs={6}\n                                      md={4}\n                                      className=\"justify-content-center align-items-start d-lg-inline text-nowrap\"\n                                    >\n                                      <Paragraph className=\" custom-paragraph\">\n                                        Model:{' '}\n                                        <span\n                                          style={{\n                                            fontWeight: 'normal',\n                                            fontSize: '14px',\n                                          }}\n                                        >\n                                          {laptop.productDetails.model}\n                                        </span>\n                                      </Paragraph>\n\n                                      <Paragraph className=\"fw-0  custom-paragraph\">\n                                        Storage:{' '}\n                                        <span\n                                          style={{\n                                            fontWeight: 'normal',\n                                            fontSize: '14px',\n                                          }}\n                                        >\n                                          {laptop.productDetails?.storage}\n                                        </span>\n                                      </Paragraph>\n\n                                      <Paragraph className=\"custom-paragraph \">\n                                        Processor:{' '}\n                                        <span\n                                          style={{\n                                            fontWeight: 'normal',\n                                            fontSize: '14px',\n                                          }}\n                                        >\n                                          {laptop.productDetails.processor}\n                                        </span>\n                                      </Paragraph>\n\n                                      <Paragraph className=\"fw-0  custom-paragraph\">\n                                        ScreenSize:{' '}\n                                        <span\n                                          style={{\n                                            fontWeight: 'normal',\n                                            fontSize: '14px',\n                                          }}\n                                        >\n                                          {laptop.productDetails.screenSize}\n                                        </span>\n                                      </Paragraph>\n                                    </Col>\n                                  </Row>\n                                )}\n\n                              {laptop && laptop.type === 'Repair' && (\n                                <>\n                                  <Paragraph className=\"custom-paragraph text-center text-md-start\">\n                                    Initial Amount:{'  '}\n                                    <span\n                                      style={{\n                                        fontWeight: 'normal',\n                                        fontSize: '14px',\n                                      }}\n                                    >\n                                      {laptop.amount !== null\n                                        ? `₹ ${laptop.amount}`\n                                        : '₹ 00.00'}\n                                    </span>\n                                  </Paragraph>\n\n                                  {laptop.issue && (\n                                    <span className=\"custom-span text-center text-md-start\">\n                                      Your Laptop issue {laptop.issue} is still\n                                      not working, it's time to take it to a\n                                      qualified technician for repair.\n                                    </span>\n                                  )}\n                                  {laptop.issueDetails && (\n                                    <span className=\"custom-span text-center text-md-start\">\n                                      I'm pleased with the laptop. It meets my\n                                      needs perfectly {laptop.issueDetails}{' '}\n                                      without any issues.\n                                    </span>\n                                  )}\n                                </>\n                              )}\n                            </Col>\n                          </Row>\n\n                          {/* *****small device*** */}\n\n                          <Row className=\"d-flex flex-column flex-md-row justify-content-center justify-content-md-between align-items-center  d-block d-md-none\">\n                            <Col\n                              xs={12}\n                              md={4}\n                              lg={4}\n                              className=\"d-flex justify-content-center align-items-center\"\n                            >\n                              <img\n                                src={laptop.image ?? Laptop}\n                                width={150}\n                                height={100}\n                                style={{\n                                  backgroundColor: 'white',\n                                  objectFit: 'cover',\n                                  cursor: 'pointer',\n                                }}\n                                alt=\"Laptop\"\n                                onClick={() =>\n                                  navigateToRentDetails(\n                                    laptop.productDetails,\n                                    laptop\n                                  )\n                                }\n                              />\n                            </Col>\n                            <Col xs={12} md={8} lg={8}>\n                              {laptop &&\n                                laptop.productDetails &&\n                                (laptop.type === 'Rental' ||\n                                  laptop.productDetails.type ===\n                                    'Refurbished') && (\n                                  <Row className=\"gx-2 gy-1 mt-2\">\n                                    <Col\n                                      xs={12}\n                                      md={6}\n                                      lg={4}\n                                      className=\"d-flex flex-column align-items-start text-wrap text-lg-nowrap\"\n                                    >\n                                      <Paragraph className=\"custom-paragraph\">\n                                        Brand:{' '}\n                                        <span\n                                          style={{\n                                            fontWeight: 'normal',\n                                            fontSize: '15px',\n                                          }}\n                                        >\n                                          {laptop.productDetails.brand}\n                                        </span>\n                                      </Paragraph>\n                                      <Paragraph className=\"fw-0 custom-paragraph\">\n                                        Storage:{' '}\n                                        <span\n                                          style={{\n                                            fontWeight: 'normal',\n                                            fontSize: '15px',\n                                          }}\n                                        >\n                                          {laptop.productDetails?.storage}\n                                        </span>\n                                      </Paragraph>\n\n                                      <Paragraph className=\"custom-paragraph\">\n                                        Processor:{' '}\n                                        <span\n                                          style={{\n                                            fontWeight: 'normal',\n                                            fontSize: '15px',\n                                          }}\n                                        >\n                                          {laptop.productDetails.processor}\n                                        </span>\n                                      </Paragraph>\n                                      <Paragraph className=\"fw-0 custom-paragraph\">\n                                        OS:{'   '}\n                                        <span\n                                          style={{\n                                            fontWeight: 'normal',\n                                            fontSize: '15px',\n                                          }}\n                                        >\n                                          {\n                                            laptop.productDetails\n                                              .operatingSystem\n                                          }\n                                        </span>\n                                      </Paragraph>\n                                    </Col>\n                                    <Col\n                                      xs={12}\n                                      md={6}\n                                      lg={4}\n                                      className=\"d-flex flex-column align-items-start text-wrap text-lg-nowrap\"\n                                    >\n                                      <Paragraph className=\"custom-paragraph\">\n                                        RAM:{'   '}\n                                        <span\n                                          style={{\n                                            fontWeight: 'normal',\n                                            fontSize: '15px',\n                                          }}\n                                        >\n                                          {laptop.productDetails.ram}\n                                        </span>\n                                      </Paragraph>\n\n                                      <Paragraph className=\"fw-0 custom-paragraph\">\n                                        ScreenSize:{' '}\n                                        <span\n                                          style={{\n                                            fontWeight: 'normal',\n                                            fontSize: '15px',\n                                          }}\n                                        >\n                                          {laptop.productDetails.screenSize}\n                                        </span>\n                                      </Paragraph>\n                                      <Paragraph className=\"custom-paragraph\">\n                                        Color:{' '}\n                                        <span\n                                          style={{\n                                            fontWeight: 'normal',\n                                            fontSize: '15px',\n                                          }}\n                                        >\n                                          {laptop.productDetails.color}\n                                          \n                                          <FaCircle\n                                            className=\"ms-1\"\n                                            style={{\n                                              fontWeight: 'normal',\n                                              fontSize: '16px',\n                                            }}\n                                            color={laptop.productDetails.color}\n                                          />\n                                          \n                                        </span>\n                                      </Paragraph>\n                                      <Paragraph className=\"custom-paragraph \">\n                                        Model:{' '}\n                                        <span\n                                          style={{\n                                            fontWeight: 'normal',\n                                            fontSize: '15px',\n                                          }}\n                                        >\n                                          {laptop.productDetails.model}\n                                        </span>\n                                      </Paragraph>\n                                    </Col>\n                                  </Row>\n                                )}\n\n                              {laptop && laptop.type === 'Repair' && (\n                                <>\n                                  <Paragraph className=\"custom-paragraph text-center text-md-start\">\n                                    Initial Amount:{'  '}\n                                    <span\n                                      style={{\n                                        fontWeight: 'normal',\n                                        fontSize: '14px',\n                                      }}\n                                    >\n                                      {laptop.amount !== null\n                                        ? `₹ ${laptop.amount}`\n                                        : '₹ 00.00'}\n                                    </span>\n                                  </Paragraph>\n\n                                  {laptop.issue && (\n                                    <span className=\"custom-span text-center text-md-start\">\n                                      Your Laptop issue {laptop.issue} is still\n                                      not working, it's time to take it to a\n                                      qualified technician for repair.\n                                    </span>\n                                  )}\n                                  {laptop.issueDetails && (\n                                    <span className=\"custom-span text-center text-md-start\">\n                                      I'm pleased with the laptop. It meets my\n                                      needs perfectly {laptop.issueDetails}{' '}\n                                      without any issues.\n                                    </span>\n                                  )}\n                                </>\n                              )}\n                            </Col>\n                          </Row>\n                          <hr className=\"horizontal-line mt-3\" />\n                          <Row className=\"flex-wrap flex-column flex-md-row justify-content-center align-items-center\">\n                            <Col className=\"d-flex justify-content-md-start justify-content-center align-items-center mt-2\">\n                              <span\n                                style={{ fontSize: '15px', fontWeight: 'bold' }}\n                              >\n                                {laptop.type}\n                              </span>\n                            </Col>\n                            {laptop.status === 'Completed' && (\n                              <Col className=\"d-flex justify-content-md-end justify-content-center align-items-center mt-2\">\n                                <BasicButton\n                                  onClick={() => {\n                                    if (laptop.type !== 'Repair') {\n                                      setSelectedActivity(laptop);\n                                      setProductReviewModal(true);\n                                    } else {\n                                      setSelectedActivity(laptop);\n                                      setReviewModal(true);\n                                    }\n                                  }}\n                                  label={'Write a Review'}\n                                />\n                              </Col>\n                            )}\n                          </Row>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            ))\n          ) : (\n            <Row className=\"justify-content-center\">\n              <Col md={12}>\n                <OrdersEmpty />\n              </Col>\n            </Row>\n          )}\n        </>\n      )}\n\n      <Modal\n        show={showAddressModal}\n        onHide={handleCloseModal}\n        centered\n        size=\"md\"\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Order Address</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {selectedActivity && (\n            <>\n              <Paragraph>UserName: {selectedActivity.userName}</Paragraph>\n              <Paragraph>\n                Phone Number: {selectedActivity.phoneNumber}\n              </Paragraph>\n              <Paragraph>Address: {selectedActivity.address}</Paragraph>\n            </>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseModal}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* Modal for Add Review */}\n      <Modal\n        show={reviewModal}\n        onHide={() => setReviewModal(false)}\n        centered\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title className=\"fs-5\">Add Product Review</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Formik\n            initialValues={{\n              review: '',\n              rating: 0,\n              images: [],\n              phoneNumber: phoneNumber || '',\n            }}\n            validationSchema={reviewValidationSchema}\n            onSubmit={handleSubmit}\n          >\n            {({ handleSubmit, setFieldValue, values }) => (\n              <Form onSubmit={handleSubmit}>\n                <Row>\n                  <Col md={12} className=\"my-1\">\n                    <Form.Group>\n                      <Form.Label>\n                        Rating <span className=\"text-danger\">*</span>\n                      </Form.Label>\n                      <Col>\n                        <Rating\n                          name=\"rating\"\n                          onClick={(rate) => setFieldValue('rating', rate)}\n                          size={26}\n                          fillColor=\"#ffd700\"\n                        />\n                      </Col>\n                      <ErrorMessage\n                        name=\"rating\"\n                        component=\"div\"\n                        className=\"text-danger\"\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col md={12} className=\"my-1\">\n                    <Form.Group>\n                      <Form.Label>\n                        Review <span className=\"text-danger\">*</span>\n                      </Form.Label>\n                      <Field\n                        as=\"textarea\"\n                        name=\"review\"\n                        className=\"form-control\"\n                        placeholder=\"Write your review here...\"\n                      />\n                      <ErrorMessage\n                        name=\"review\"\n                        component=\"div\"\n                        className=\"text-danger\"\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Form.Group className=\"my-1\">\n                    <Form.Label>Upload Images or Videos</Form.Label>\n                    <div className=\"image-upload-grid\">\n                      <div className=\"image-grid\">\n                        <Row>\n                          {Array.from({ length: 3 }, (_, index) => (\n                            <Col key={index} md={4}>\n                              <div\n                                className=\"image-item\"\n                                style={{\n                                  position: 'relative',\n                                  height: '150px',\n                                }}\n                              >\n                                {values.images[index] ? (\n                                  <>\n                                    <IoMdCloseCircle\n                                      className=\"image-clear-icon\"\n                                      onClick={() =>\n                                        handleImageRemove(\n                                          index,\n                                          setFieldValue,\n                                          values\n                                        )\n                                      }\n                                      size={25}\n                                      style={{\n                                        position: 'absolute',\n                                        top: '0px',\n                                        right: '0px',\n                                        cursor: 'pointer',\n                                        zIndex: 2,\n                                        color: 'red',\n                                      }}\n                                    />\n                                    {[\n                                      'image/jpeg',\n                                      'image/jpg',\n                                      'image/png',\n                                      'image/webp',\n                                    ].includes(values.images[index].type) ? (\n                                      <img\n                                        src={URL.createObjectURL(\n                                          values.images[index]\n                                        )}\n                                        alt=\"Uploaded\"\n                                        className=\"image-preview\"\n                                        style={{\n                                          width: '100%',\n                                          border: `1px dotted ${color}`,\n                                          height: '150px',\n                                        }}\n                                      />\n                                    ) : (\n                                      <video\n                                        controls\n                                        className=\"video-preview\"\n                                        style={{\n                                          width: '100%',\n                                          border: `1px dotted ${color}`,\n                                          height: '150px',\n                                        }}\n                                      >\n                                        <source\n                                          src={URL.createObjectURL(\n                                            values.images[index]\n                                          )}\n                                          type={values.images[index].type}\n                                        />\n                                        Your browser does not support the video\n                                        tag.\n                                      </video>\n                                    )}\n                                  </>\n                                ) : (\n                                  <div\n                                    className=\"d-flex justify-content-center align-items-center\"\n                                    style={{\n                                      width: '100%',\n                                      border: `1px dotted ${color}`,\n                                      height: '150px',\n                                    }}\n                                  >\n                                    <label\n                                      htmlFor={`image-upload-${index}`}\n                                      className=\"d-flex justify-content-center\"\n                                    >\n                                      <FiUploadCloud\n                                        size={50}\n                                        style={{ cursor: 'pointer' }}\n                                      />\n                                    </label>\n                                    <input\n                                      id={`image-upload-${index}`}\n                                      type=\"file\"\n                                      accept=\"image/jpeg, image/jpg, image/png, image/webp, video/mp4, video/quicktime, video/x-msvideo, video/x-matroska\"\n                                      onChange={(e) =>\n                                        handleImageChange(\n                                          e,\n                                          index,\n                                          setFieldValue,\n                                          values\n                                        )\n                                      }\n                                      style={{ display: 'none' }}\n                                    />\n                                  </div>\n                                )}\n                              </div>\n                            </Col>\n                          ))}\n                        </Row>\n                      </div>\n                      <ErrorMessage\n                        name=\"images\"\n                        component=\"div\"\n                        className=\"text-danger\"\n                      />\n                    </div>\n                  </Form.Group>\n                </Row>\n                <BasicButton\n                  type=\"submit\"\n                  className=\"bg-main w-100 px-3 py-1 my-4\"\n                  label=\"Submit Review\"\n                  isLoading={isLoading}\n                />\n              </Form>\n            )}\n          </Formik>\n        </Modal.Body>\n      </Modal>\n\n      {/* Modal for Product Review */}\n      <Modal\n        show={productReviewModal}\n        onHide={() => setProductReviewModal(false)}\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add Review</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Formik\n            initialValues={{\n              review: '',\n              rating: 0,\n              images: [],\n              phoneNumber: phoneNumber,\n              productType: selectedActivity ? selectedActivity.type : '',\n              productId: selectedActivity ? selectedActivity.laptopId : '',\n            }}\n            validationSchema={productReviewValidationSchema}\n            onSubmit={handleProductSubmit}\n          >\n            {({ handleSubmit, setFieldValue, values }) => (\n              <Form onSubmit={handleSubmit}>\n                <Row>\n                  <Col md={12} className=\"my-1\">\n                    <Form.Group>\n                      <Form.Label>\n                        Rating <span className=\"text-danger\">*</span>\n                      </Form.Label>\n                      <Rating\n                        name=\"rating\"\n                        onClick={(rate) => setFieldValue('rating', rate)}\n                        size={24}\n                        fillColor=\"#ffd700\"\n                      />\n                      <ErrorMessage\n                        name=\"rating\"\n                        component=\"div\"\n                        className=\"text-danger\"\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col md={12} className=\"my-1\">\n                    <Form.Group>\n                      <Form.Label>\n                        Review <span className=\"text-danger\">*</span>\n                      </Form.Label>\n                      <Field\n                        as=\"textarea\"\n                        name=\"review\"\n                        className=\"form-control\"\n                        placeholder=\"Write your review here...\"\n                      />\n                      <ErrorMessage\n                        name=\"review\"\n                        component=\"div\"\n                        className=\"text-danger\"\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Form.Group>\n                    <Form.Label>Upload Images or Videos</Form.Label>\n                    <div className=\"image-upload-grid\">\n                      <div className=\"image-grid\">\n                        <Row>\n                          {Array.from({ length: 3 }, (_, index) => (\n                            <Col key={index} md={4}>\n                              <div\n                                className=\"image-item\"\n                                style={{\n                                  position: 'relative',\n                                  height: '150px',\n                                }}\n                              >\n                                {values.images[index] ? (\n                                  <>\n                                    <FiXCircle\n                                      className=\"image-clear-icon\"\n                                      onClick={() =>\n                                        handleImageRemove(\n                                          index,\n                                          setFieldValue,\n                                          values\n                                        )\n                                      }\n                                      size={20}\n                                      style={{\n                                        position: 'absolute',\n                                        top: '5px',\n                                        right: '5px',\n                                        cursor: 'pointer',\n                                        zIndex: 2,\n                                        color: 'red',\n                                      }}\n                                    />\n                                    {[\n                                      'image/jpeg',\n                                      'image/jpg',\n                                      'image/png',\n                                      'image/webp',\n                                    ].includes(values.images[index].type) ? (\n                                      <img\n                                        src={URL.createObjectURL(\n                                          values.images[index]\n                                        )}\n                                        alt=\"Uploaded\"\n                                        className=\"image-preview\"\n                                        style={{\n                                          width: '100%',\n                                          border: `1px dotted ${color}`,\n                                          height: '150px',\n                                        }}\n                                      />\n                                    ) : (\n                                      <video\n                                        controls\n                                        className=\"video-preview\"\n                                        style={{\n                                          width: '100%',\n                                          border: `1px dotted ${color}`,\n                                          height: '150px',\n                                        }}\n                                      >\n                                        <source\n                                          src={URL.createObjectURL(\n                                            values.images[index]\n                                          )}\n                                          type={values.images[index].type}\n                                        />\n                                        Your browser does not support the video\n                                        tag.\n                                      </video>\n                                    )}\n                                  </>\n                                ) : (\n                                  <div\n                                    className=\"d-flex justify-content-center align-items-center\"\n                                    style={{\n                                      width: '100%',\n                                      border: `1px dotted ${color}`,\n                                      height: '150px',\n                                    }}\n                                  >\n                                    <label\n                                      htmlFor={`image-upload-${index}`}\n                                      className=\"d-flex justify-content-center\"\n                                    >\n                                      <FiUploadCloud\n                                        size={50}\n                                        style={{ cursor: 'pointer' }}\n                                      />\n                                    </label>\n                                    <input\n                                      id={`image-upload-${index}`}\n                                      type=\"file\"\n                                      accept=\"image/jpeg, image/jpg, image/png, image/webp, video/mp4, video/quicktime, video/x-msvideo, video/x-matroska\"\n                                      onChange={(e) =>\n                                        handleImageChange(\n                                          e,\n                                          index,\n                                          setFieldValue,\n                                          values\n                                        )\n                                      }\n                                      style={{ display: 'none' }}\n                                    />\n                                  </div>\n                                )}\n                              </div>\n                            </Col>\n                          ))}\n                        </Row>\n                      </div>\n                      <ErrorMessage\n                        name=\"images\"\n                        component=\"div\"\n                        className=\"text-danger\"\n                      />\n                    </div>\n                  </Form.Group>\n                </Row>\n                <BasicButton\n                  type=\"submit\"\n                  className=\"bg-main w-100 px-3 py-1 my-4\"\n                  label=\"Submit Review\"\n                  isLoading={reviewLoader}\n                />\n              </Form>\n            )}\n          </Formik>\n        </Modal.Body>\n      </Modal>\n\n      {activities.length > 0 ? (\n        <Col className=\"d-flex justify-content-end mt-4\">\n          <CustomPagination\n            totalItems={totalItems}\n            currentPage={currentPage}\n            onPageChange={handlePageChange}\n            totalPages={totalPage}\n          />\n        </Col>\n      ) : (\n        <></>\n      )}\n      <SuccessModal\n        showModal={showModal}\n        setShowModal={setShowModal}\n        successMessage={successMessage}\n        error={errorLottie}\n      />\n    </Container>\n  );\n}\n\nexport default Orders;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Form,\n  Button,\n  Spinner,\n  Modal,\n  FormLabel,\n} from 'react-bootstrap';\nimport {\n  useDeleteUserAddressMutation,\n  useGetUserDetailsQuery,\n  useUpdateUserAddressMutation,\n  useUpdateUserProfileMutation,\n} from '../../redux/api/ProfileOrdersApi';\nimport { FaEdit, FaTrash } from 'react-icons/fa';\nimport { toast } from 'react-toastify';\nimport DeleteModel from '../../components/DeleteModel';\nimport Lottie from 'react-lottie';\nimport Addressnotfound from '../../assests/json/location.json';\nimport { useTheme } from '../../Contexts/ThemeContext';\nimport { FaLocationDot } from 'react-icons/fa6';\n\nconst Addresses = () => {\n  const { color } = useTheme();\n  const [addresses, setAddresses] = useState({\n    address: [],\n  });\n  const [userPhoneNumber, setUserPhoneNumber] = useState('');\n  const [showForm, setShowForm] = useState(false);\n  const [currentAddress, setCurrentAddress] = useState('');\n  const [currentType, setCurrentType] = useState('');\n  const [currentAddressId, setCurrentAddressId] = useState('');\n  const [newAddress, setNewAddress] = useState('');\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [deleteShow, setDeleteShow] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [isPrimary, setIsPrimary] = useState(true);\n\n  const [updateAddress, { isLoading: updateAddressLoader }] =\n    useUpdateUserAddressMutation();\n  const [deleteAddress] = useDeleteUserAddressMutation();\n  const {\n    data: userData,\n    isLoading,\n    refetch,\n  } = useGetUserDetailsQuery({\n    phoneNumber: userPhoneNumber,\n  });\n\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      const parsedToken = JSON.parse(storedToken);\n      const phoneNumber = parsedToken.phoneNumber;\n      setUserPhoneNumber(phoneNumber);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (userData && userData.data) {\n      setAddresses({\n        address: userData.data.address ?? [],\n      });\n    }\n  }, [userData]);\n\n  const handleEdit = (address, type, id) => {\n    setCurrentAddress(address);\n    setCurrentType(type);\n    setCurrentAddressId(id);\n    setShowEditForm(true);\n  };\n\n  const handleAddAddress = async () => {\n    if (!newAddress.trim()) {\n      toast.error('Address cannot be empty', { autoClose: 1000 });\n      return;\n    }\n    if (isPrimary === undefined) {\n      toast.error('Please select an address type', { autoClose: 1000 });\n      return;\n    }\n    try {\n      const response = await updateAddress({\n        data: {\n          type: currentType,\n          addressId: null,\n          address: newAddress,\n        },\n        phoneNumber: userPhoneNumber,\n      });\n\n      if (response.data) {\n        setShowForm(false);\n        toast.success(response?.data?.message, { autoClose: 1000 });\n        setNewAddress('');\n        refetch();\n      } else {\n        setShowForm(false);\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error('Error adding address:', error);\n    }\n  };\n\n  const handleUpdateAddress = async () => {\n    if (!currentAddress.trim()) {\n      toast.error('Address cannot be empty', { autoClose: 1000 });\n      return;\n    }\n    try {\n      const response = await updateAddress({\n        data: {\n          addressId: currentAddressId,\n          address: currentAddress,\n          primaryAddress: isPrimary,\n        },\n        phoneNumber: userPhoneNumber,\n      });\n\n      if (response.data) {\n        setShowEditForm(false);\n        toast.success(response?.data?.message, { autoClose: 1000 });\n      } else {\n        setShowEditForm(false);\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error('Error updating address:', error);\n    }\n  };\n\n  const deleteHandleShow = (id, type) => {\n    setCurrentAddressId(id);\n    setCurrentType(type);\n    setDeleteShow(true);\n  };\n\n  const deleteHandleClose = () => {\n    setDeleteShow(false);\n  };\n\n  const handleDelete = async () => {\n    try {\n      const response = await deleteAddress({\n        data: {\n          type: currentType,\n          addressId: currentAddressId,\n        },\n        phoneNumber: userPhoneNumber,\n      });\n\n      if (response.data) {\n        setDeleteShow(false);\n        toast.success(response?.data?.message, { autoClose: 1000 });\n        refetch();\n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error('Error deleting address:', error);\n    }\n  };\n\n  const options = {\n    loop: true,\n    autoplay: true,\n    animationData: Addressnotfound,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice',\n    },\n  };\n\n  return (\n    <Container fluid>\n      <Col md={12} lg={12} sm={12}>\n        <div className=\"p-md-5 p-xs-2\">\n          <Card.Title className=\" text-center\">Manage Addresses</Card.Title>\n          <Row className=\"align-items-center justify-content-center text-start mt-5\">\n            <Col md={12} className=\"shadow rounded border p-3\">\n              <h5>\n                <FaLocationDot className=\"me-2\" />\n                Address\n              </h5>\n              {addresses.address.map((address) =>\n                address.primaryAddress ? (\n                  <Card\n                    className=\" mt-4 p-1  position-relative text-wrap\"\n                    style={{ height: '140px' }}\n                    key={address._id}\n                  >\n                    <p>\n                      <span\n                        style={{\n                          textTransform: 'uppercase',\n                          fontSize: '11px',\n                          color: '#878787',\n                          verticalAlign: 'middle',\n                          padding: '4px 7px',\n                          borderRadius: '2px',\n                          backgroundColor: '#f0f0f0',\n                          fontWeight: 500,\n                          marginRight: '15px',\n                        }}\n                      >\n                        Preferred Location\n                      </span>\n                    </p>\n                    <div className=\"d-flex justify-content-end mb-0\">\n                      <div\n                        className=\"position-absolute rounded-circle mx-3\"\n                        style={{ top: '10px', right: '40px' }}\n                        onClick={() =>\n                          handleEdit(address.address, 'Address', address._id)\n                        }\n                      >\n                        <FaEdit style={{ cursor: 'pointer' }} color=\"black\" />\n                      </div>\n                      <div\n                        className=\"position-absolute rounded-circle mx-3\"\n                        style={{ top: '10px', right: '10px' }}\n                        onClick={() => deleteHandleShow(address._id, 'address')}\n                      >\n                        <FaTrash style={{ cursor: 'pointer' }} color={color} />\n                      </div>\n                    </div>\n                    <div className=\"m-2 mt-2 d-flex justify-content-start\">\n                      {address.address}\n                    </div>\n                  </Card>\n                ) : (\n                  <Card\n                    className=\" mt-4 p-1  position-relative text-wrap\"\n                    style={{ height: '140px' }}\n                    key={address._id}\n                  >\n                    <p>\n                      <span\n                        style={{\n                          textTransform: 'uppercase',\n                          fontSize: '11px',\n                          color: '#878787',\n                          verticalAlign: 'middle',\n                          padding: '4px 7px',\n                          borderRadius: '2px',\n                          backgroundColor: '#f0f0f0',\n                          fontWeight: 500,\n                          marginRight: '15px',\n                        }}\n                      >\n                        Alternate Location\n                      </span>\n                    </p>\n                    <div className=\"d-flex justify-content-end mb-0\">\n                      <div\n                        className=\"position-absolute rounded-circle mx-3\"\n                        style={{ top: '10px', right: '40px' }}\n                        onClick={() =>\n                          handleEdit(address.address, 'Address', address._id)\n                        }\n                      >\n                        <FaEdit style={{ cursor: 'pointer' }} color=\"black\" />\n                      </div>\n                      <div\n                        className=\"position-absolute rounded-circle mx-3\"\n                        style={{ top: '10px', right: '10px' }}\n                        onClick={() => deleteHandleShow(address._id, 'address')}\n                      >\n                        <FaTrash style={{ cursor: 'pointer' }} color={color} />\n                      </div>\n                    </div>\n                    <div className=\"m-2 mt-2 d-flex justify-content-start\">\n                      {address.address}\n                    </div>\n                  </Card>\n                )\n              )}\n            </Col>\n\n            {/* <Col md={6}>\n              <p\n                style={{ fontSize: '20px' }}\n                onClick={() => {\n                  setCurrentType('address');\n                  setShowForm(true);\n                }}\n                className=\"my-4 text-primary pointer add-address\"\n              >\n                + Add  Address\n              </p>\n              {addresses.address.map((address) => (\n                <Card\n                  className=\"mb-2 mt-3 p-1 position-relative text-wrap\"\n                  key={address._id}\n                >\n                  <div className=\"d-flex justify-content-end mb-4\">\n                    <div\n                      className=\"position-absolute rounded-circle mx-3\"\n                      style={{ top: '10px', right: '40px' }}\n                      onClick={() =>\n                        handleEdit(\n                          address.address,\n                          'Address',\n                          address._id\n                        )\n                      }\n                    >\n                      <FaEdit style={{ cursor: 'pointer' }} color=\"black\" />\n                    </div>\n                    <div\n                      className=\"position-absolute rounded-circle mx-3\"\n                      style={{ top: '10px', right: '10px' }}\n                      onClick={() =>\n                        deleteHandleShow(address._id, 'address')\n                      }\n                    >\n                      <FaTrash style={{ cursor: 'pointer' }} color={color} />\n                    </div>\n                  </div>\n                  <div className=\"m-2 mt-2 d-flex  justify-content-start\">{address.address}</div>\n                </Card>\n              ))}\n            </Col> */}\n          </Row>\n          {addresses.address.length > 0 ? (\n            <div></div>\n          ) : (\n            <div className=\"text-center mt-4\">\n              <Lottie options={options} height=\"250px\" width=\"250px\" />\n              <h4 style={{ color: color }}>No Address Found</h4>\n            </div>\n          )}\n        </div>\n        {/* edit address modal */}\n        <Modal\n          show={showEditForm}\n          onHide={() => setShowEditForm(false)}\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Edit Address</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group className=\"mb-3 mt-2\" controlId=\"formGridAddress\">\n                {/* Address Type Label */}\n                <Form.Label>\n                  Address type <span className=\"text-danger\">*</span>\n                </Form.Label>\n\n                {/* Radio buttons for Address Type */}\n                <div className=\"d-flex align-items-center mb-3\">\n                  {/* Primary Location Radio Button */}\n                  <div className=\"me-4\">\n                    <Form.Check\n                      inline\n                      type=\"radio\"\n                      aria-label=\"Primary Location\" // Change this to reflect the correct label\n                      name=\"addressType\"\n                      id=\"primaryLocation\"\n                      className=\"me-2\"\n                      checked={isPrimary} // This is checked if isPrimary is true\n                      onChange={() => setIsPrimary(true)}\n                    />\n                    <Form.Label htmlFor=\"primaryLocation\">\n                      Preferred Location\n                    </Form.Label>\n                  </div>\n\n                  <div>\n                    <Form.Check\n                      inline\n                      type=\"radio\"\n                      aria-label=\"Alternative Location\"\n                      name=\"addressType\"\n                      id=\"alternativeLocation\"\n                      className=\"me-2\"\n                      checked={!isPrimary}\n                      onChange={() => setIsPrimary(false)}\n                    />\n                    <Form.Label htmlFor=\"alternativeLocation\">\n                      Alternative Location\n                    </Form.Label>\n                  </div>\n                </div>\n\n                {/* Address Field */}\n                <Form.Label>\n                  Address <span className=\"text-danger\">*</span>\n                </Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={4}\n                  name=\"address\"\n                  placeholder=\"Enter your address\"\n                  value={currentAddress}\n                  onChange={(e) => setCurrentAddress(e.target.value)}\n                />\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              style={{ backgroundColor: color }}\n              onClick={handleUpdateAddress}\n              disabled={updateAddressLoader}\n            >\n              {updateAddressLoader ? (\n                <>\n                  <Spinner size=\"sm\" color={color} className=\"mx-1\" />\n                  Updating\n                </>\n              ) : (\n                'Update'\n              )}\n            </Button>\n            <Button variant=\"secondary\" onClick={() => setShowEditForm(false)}>\n              Cancel\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        {/* add address modal */}\n        <Modal show={showForm} onHide={() => setShowForm(false)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Add {currentType}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group\n                className=\"mb-3 mt-2\"\n                controlId=\"formGridNewAddress\"\n                lg={6}\n                sm={12}\n                md={6}\n              >\n                <Form.Label>\n                  Address <span className=\"text-danger\">*</span>\n                </Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={4}\n                  name=\"newAddress\"\n                  placeholder={`Enter your  ${currentType}`}\n                  value={newAddress}\n                  onChange={(e) => setNewAddress(e.target.value)}\n                />\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              style={{ backgroundColor: color }}\n              onClick={handleAddAddress}\n              disabled={updateAddressLoader}\n            >\n              {updateAddressLoader ? (\n                <>\n                  <Spinner size=\"sm\" color={color} className=\"mx-1\" />\n                  Adding\n                </>\n              ) : (\n                'Add'\n              )}\n            </Button>\n            <Button variant=\"secondary\" onClick={() => setShowForm(false)}>\n              Cancel\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <DeleteModel\n          YES={handleDelete}\n          DELETESTATE={deleteShow}\n          ONCLICK={deleteHandleClose}\n          DESCRIPTION={`Are you sure want to delete this ${currentType}`}\n          DELETETITLE={`Delete ${currentType}`}\n        />\n      </Col>\n    </Container>\n  );\n};\n\nexport default Addresses;\n","import React, { useState, useEffect } from 'react';\nimport { useGetViewMyQuotesQuery } from '../../redux/api/AuthApi';\nimport { Container, Card, Col, Row, Button, Modal } from 'react-bootstrap';\nimport FetchLoader from '../../components/FetchLoader';\nimport { Heading } from '../../components/Heading';\nimport Laptop from '../../assests/images/laptop.webp';\nimport CustomPagination from '../../components/CustomPagination';\nimport Lottie from 'react-lottie';\nimport QuotesNotFound from '../../assests/json/QuotesNoData.json';\nimport { useTheme } from '../../Contexts/ThemeContext';\nimport Paragraph from '../../components/paragraph';\nimport { BsChevronDown } from 'react-icons/bs';\nimport { truncateText } from '../../Constants/constant';\nimport { useNavigate } from 'react-router-dom';\nimport { FaCircle, FaStar } from 'react-icons/fa';\nconst Quotes = () => {\n  const { color } = useTheme();\n  const navigate = useNavigate();\n  const [laptop, setLaptop] = useState([]);\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [totalItems, setTotalItems] = useState();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [similarProduct, setSimilarProduct] = useState([]);\n  const [totalPage, setTotalPage] = useState();\n  const [selectedActivity, setSelectedActivity] = useState(null);\n  const [showAddressModal, setShowAddressModal] = useState(false);\n  const { data: QuotesData, isLoading } = useGetViewMyQuotesQuery({\n    phoneNumber: phoneNumber,\n    page: currentPage,\n  });\n\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      const parsedToken = JSON.parse(storedToken);\n      setPhoneNumber(parsedToken.phoneNumber);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (QuotesData && QuotesData.data) {\n      setLaptop(QuotesData.data);\n      setSimilarProduct(QuotesData.youMayLikeProducts);\n    }\n\n    if (QuotesData && QuotesData.pagination) {\n      setTotalPage(QuotesData.pagination.totalPages);\n      setTotalItems(QuotesData.pagination.totalItems);\n      setCurrentPage(currentPage);\n    }\n  }, [QuotesData, currentPage]);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n    window.scrollTo(0, 1);\n  };\n\n  const extractDate = (dateTimeString) => {\n    const datePart = dateTimeString.split(' ')[0];\n    const [year, month, day] = datePart.split('-');\n    return `${day}-${month}-${year}`;\n  };\n\n  const handleChevronClick = (laptop) => {\n    setSelectedActivity(laptop);\n    setShowAddressModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowAddressModal(false);\n    setSelectedActivity(null);\n  };\n\n  const options = {\n    loop: true,\n    autoplay: true,\n    animationData: QuotesNotFound,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice',\n    },\n  };\n\n  const navigateToRentDetails = (productDetails) => {\n    navigate('/rent/rent-details', {\n      state: { laptop: productDetails, similarProduct },\n    });\n  };\n\n  return (\n    <>\n      <Container fluid>\n        <Row className=\"justify-content-center mt-4\">\n          <Heading>Quotes Details</Heading>\n        </Row>\n        {isLoading ? (\n          <FetchLoader />\n        ) : laptop.length > 0 ? (\n          laptop.map((laptop, idx) => (\n            <Row className=\"justify-content-center mt-4\" key={idx}>\n              <Col md={12} sm={12}>\n                <Row className=\"justify-content-center mt-4\" key={laptop._id}>\n                  <Col md={12} lg={12}>\n                    <Card>\n                      <Card.Body>\n                        <Row className=\"d-flex justify-content-between \">\n                          <Col xs={12} md={3} lg={3} className=\"mt-1\">\n                            <span className=\"d-md-block\">\n                              <strong>Order Date: </strong>\n                            </span>\n                            <span className=\"custom-span\">\n                              {extractDate(laptop.createdAt)}\n                            </span>\n                          </Col>\n\n                          <Col xs={12} md={3} lg={3} className=\"mt-1 \">\n                            <span>\n                              <strong>Ship To:</strong>{' '}\n                            </span>\n                            <span className=\"d-md-block custom-span\">\n                              {laptop.userName}\n                              <BsChevronDown\n                                onClick={() => handleChevronClick(laptop)}\n                                style={{\n                                  cursor: 'pointer',\n                                  marginLeft: '1px',\n                                }}\n                              />\n                            </span>\n                          </Col>\n\n                          <Col\n                            xs={12}\n                            md={3}\n                            lg={3}\n                            className=\"mt-1 text-nowrap\"\n                          >\n                            <span>\n                              <strong>Order Id:</strong>\n                            </span>\n                            <span\n                              className=\"custom-span d-md-block\"\n                              style={\n                                window.innerWidth < 768\n                                  ? { width: '100%', whiteSpace: 'normal' }\n                                  : { whiteSpace: 'nowrap' }\n                              }\n                            >\n                              #{laptop.requestId}\n                            </span>\n                          </Col>\n\n                          <Col xs={12} md={3} lg={3} className=\"mt-1\">\n                            <span className=\"\">\n                              <strong>Payment Mode: </strong>\n                            </span>\n                            <span className=\" custom-span\">\n                              {laptop.initialAmountPaidThrough === 'COD'\n                                ? 'Cash On Delivery'\n                                : 'Digital Payment'}\n                            </span>\n                          </Col>\n                          <Row\n                            className=\"mt-lg-3 mt-md-3 d-none d-md-flex \"\n                            style={{ cursor: 'pointer' }}\n                          >\n                            <Col\n                              xs={12}\n                              className=\"text-lg-end d-flex justify-content-end align-items-center\"\n                            >\n                              <span className=\"\">\n                                <strong>Order Status: </strong>\n                              </span>\n                              <span className=\"m-1\"> {laptop.status}</span>\n\n                              {laptop.status === 'Completed' && (\n                                <>\n                                  <span className=\"mx-2\">|</span>\n                                  <span\n                                    className=\"ms-1\"\n                                    style={{ cursor: 'pointer' }}\n                                  >\n                                    <div>\n                                      <button\n                                        style={{\n                                          border: `1px solid ${color}`,\n                                          cursor: 'pointer',\n                                        }}\n                                        className=\"rounded p-1\"\n                                        onClick={() =>\n                                          navigate('/invoice', {\n                                            state: { data: laptop.billInfo },\n                                          })\n                                        }\n                                        key={laptop._id}\n                                      >\n                                        <FaDownload\n                                          size={16}\n                                          className=\"mx-1\"\n                                        />\n                                        Invoice\n                                      </button>\n                                    </div>\n                                  </span>\n                                </>\n                              )}\n                            </Col>\n                          </Row>\n\n                          {/* Order Status and Invoice */}\n                          <Row className=\"d-block d-md-none \">\n                            <Col xs={12} className=\"mt-1\">\n                              <span className=\"\">\n                                <strong>Status: </strong>\n                              </span>\n                              <span className=\"custom-span text-nowrap d-md-block\">\n                                {laptop.status}\n                              </span>\n                            </Col>\n                            <Col\n                              className=\"d-flex justify-content-start mt-2\"\n                              xs={12}\n                            >\n                              {laptop.status === 'Completed' && (\n                                <>\n                                  <div>\n                                    <button\n                                      style={{\n                                        border: `1px solid ${color}`,\n                                        cursor: 'pointer',\n                                      }}\n                                      className=\"rounded p-1\"\n                                      onClick={() =>\n                                        navigate('/invoice', {\n                                          state: { data: laptop.billInfo },\n                                        })\n                                      }\n                                      key={laptop._id}\n                                    >\n                                      <FaDownload size={16} className=\"mx-1\" />\n                                      Invoices\n                                    </button>\n                                  </div>\n                                </>\n                              )}\n                            </Col>\n                          </Row>\n                        </Row>\n                        <hr className=\"horizontal-line\" />\n                        {/* ************* small device*************** */}\n\n                        <Row className=\"  justify-content-center justify-content-md-between align-items-center  d-block d-md-none \">\n                          <Col\n                            xs={12}\n                            md={4}\n                            lg={4}\n                            className=\"d-flex justify-content-center align-items-center\"\n                          >\n                            <img\n                              src={laptop.productDetails.image ?? Laptop}\n                              width={150}\n                              height={100}\n                              style={{\n                                backgroundColor: 'white',\n                                objectFit: 'cover',\n                                cursor: 'pointer',\n                              }}\n                              alt=\"Laptop\"\n                              onClick={() =>\n                                navigateToRentDetails(\n                                  laptop.productDetails,\n                                  laptop\n                                )\n                              }\n                            />\n                          </Col>\n                          <Col xs={12} md={8} lg={8}>\n                            <Row className=\" \">\n                              <Col\n                                xs={12}\n                                md={6}\n                                lg={4}\n                                className=\"d-flex flex-column align-items-start justify-content-start text-wrap text-lg-nowrap mt-3\"\n                              >\n                                <Paragraph className=\"custom-paragraph\">\n                                  Brand:{' '}\n                                  <span\n                                    style={{\n                                      fontWeight: 'normal',\n                                      fontSize: '15px',\n                                    }}\n                                  >\n                                    {laptop.productDetails.brand}\n                                  </span>\n                                </Paragraph>\n                                <Paragraph className=\"fw-0 custom-paragraph\">\n                                  Storage:{' '}\n                                  <span\n                                    style={{\n                                      fontWeight: 'normal',\n                                      fontSize: '15px',\n                                    }}\n                                  >\n                                    {laptop.productDetails?.storage}\n                                  </span>\n                                </Paragraph>\n\n                                <Paragraph className=\"custom-paragraph\">\n                                  Processor:{' '}\n                                  <span\n                                    style={{\n                                      fontWeight: 'normal',\n                                      fontSize: '15px',\n                                    }}\n                                  >\n                                    {laptop.productDetails.processor}\n                                  </span>\n                                </Paragraph>\n                                <Paragraph className=\"fw-0 custom-paragraph\">\n                                  OS:{' '}\n                                  <span\n                                    style={{\n                                      fontWeight: 'normal',\n                                      fontSize: '15px',\n                                    }}\n                                  >\n                                    {laptop.productDetails.operatingSystem}\n                                  </span>\n                                </Paragraph>\n                              </Col>\n                              <Col\n                                xs={12}\n                                md={6}\n                                lg={4}\n                                className=\"d-flex flex-column align-items-start justify-content-start text-wrap text-lg-nowrap\"\n                              >\n                                <Paragraph className=\"custom-paragraph\">\n                                  RAM:{' '}\n                                  <span\n                                    style={{\n                                      fontWeight: 'normal',\n                                      fontSize: '15px',\n                                    }}\n                                  >\n                                    {laptop.productDetails.ram}\n                                  </span>\n                                </Paragraph>\n\n                                <Paragraph className=\"fw-0 custom-paragraph\">\n                                  ScreenSize:{' '}\n                                  <span\n                                    style={{\n                                      fontWeight: 'normal',\n                                      fontSize: '15px',\n                                    }}\n                                  >\n                                    {laptop.productDetails.screenSize}\n                                  </span>\n                                </Paragraph>\n                                <Paragraph className=\"custom-paragraph\">\n                                  Color:{' '}\n                                  <span\n                                    style={{\n                                      fontWeight: 'normal',\n                                      fontSize: '15px',\n                                      \n                                    }}\n                                  >\n                                    {laptop.productDetails.color}\n                                    <FaCircle\n                                      className='ms-1'\n                                      style={{\n                                      \n                                        fontWeight: 'normal',\n                                        fontSize: '15px',\n                                      }}\n                                      color={laptop.productDetails.color}\n                                    />\n                                    \n                                  </span>\n                                </Paragraph>\n                                <Paragraph className=\"custom-paragraph\">\n                                  Model:{' '}\n                                  <span\n                                    style={{\n                                      fontWeight: 'normal',\n                                      fontSize: '15px',\n                                    }}\n                                  >\n                                    {laptop.productDetails.model}\n                                  </span>\n                                </Paragraph>\n                              </Col>\n                            </Row>\n                          </Col>\n                        </Row>\n                        {/* ************* laptop device*************** */}\n                        <Row className=\"d-flex flex-column flex-md-row justify-content-center justify-content-md-between align-items-center d-none d-md-flex\">\n                          <Col\n                            xs={12}\n                            md={4}\n                            lg={4}\n                            className=\"d-flex justify-content-start align-items-start\"\n                          >\n                            <img\n                              src={laptop.productDetails.image ?? Laptop}\n                              width={150}\n                              height={100}\n                              style={{\n                                backgroundColor: 'white',\n                                objectFit: 'cover',\n                                cursor: 'pointer',\n                              }}\n                              alt=\"Laptop\"\n                              onClick={() =>\n                                navigateToRentDetails(\n                                  laptop.productDetails,\n                                  laptop\n                                )\n                              }\n                            />\n                          </Col>\n                          <Col xs={12} md={8} lg={8} className=\"mt-3\">\n                            {laptop &&\n                              laptop.productDetails &&\n                              (laptop.type === 'Rental' || 'Refurbished') && (\n                                <Row className=\"gx-5 gy-5\">\n                                  <Col\n                                    xs={6}\n                                    md={4}\n                                    className=\"d-lg-inline text-nowrap\"\n                                  >\n                                    <Paragraph className=\"custom-paragraph \">\n                                      Brand:{' '}\n                                      <span\n                                        style={{\n                                          fontWeight: 'normal',\n                                          fontSize: '14px',\n                                        }}\n                                      >\n                                        {laptop.brand}\n                                      </span>\n                                    </Paragraph>\n                                    <Paragraph className=\"custom-paragraph \">\n                                      RAM:{' '}\n                                      <span\n                                        style={{\n                                          fontWeight: 'normal',\n                                          fontSize: '14px',\n                                        }}\n                                      >\n                                        {laptop.productDetails.ram}\n                                      </span>\n                                    </Paragraph>\n                                    <Paragraph className=\"custom-paragraph \">\n                                      Color:{' '}\n                                      <span\n                                        style={{\n                                          fontWeight: 'normal',\n                                          fontSize: '14px',\n                                        }}\n                                      >\n                                        {laptop.productDetails.color}{' '}\n                                      </span>\n                                      (\n                                      <FaCircle\n                                        style={{\n                                          fontWeight: 'normal',\n                                          fontSize: '14px',\n                                        }}\n                                        color={laptop.productDetails.color}\n                                      />\n                                      )\n                                    </Paragraph>\n\n                                    <Paragraph className=\"fw-0  custom-paragraph\">\n                                      OS:{' '}\n                                      <span\n                                        style={{\n                                          fontWeight: 'normal',\n                                          fontSize: '14px',\n                                        }}\n                                      >\n                                        {laptop.productDetails.operatingSystem}\n                                      </span>\n                                    </Paragraph>\n                                  </Col>\n\n                                  <Col\n                                    xs={6}\n                                    md={4}\n                                    className=\"justify-content-center align-items-start d-lg-inline text-nowrap\"\n                                  >\n                                    <Paragraph className=\" custom-paragraph\">\n                                      Model:{' '}\n                                      <span\n                                        style={{\n                                          fontWeight: 'normal',\n                                          fontSize: '14px',\n                                        }}\n                                      >\n                                        {laptop.productDetails.model}\n                                      </span>\n                                    </Paragraph>\n\n                                    <Paragraph className=\"fw-0  custom-paragraph\">\n                                      Storage:{' '}\n                                      <span\n                                        style={{\n                                          fontWeight: 'normal',\n                                          fontSize: '14px',\n                                        }}\n                                      >\n                                        {laptop.productDetails?.storage}\n                                      </span>\n                                    </Paragraph>\n\n                                    <Paragraph className=\"custom-paragraph \">\n                                      Processor:{' '}\n                                      <span\n                                        style={{\n                                          fontWeight: 'normal',\n                                          fontSize: '14px',\n                                        }}\n                                      >\n                                        {laptop.productDetails.processor}\n                                      </span>\n                                    </Paragraph>\n\n                                    <Paragraph className=\"fw-0  custom-paragraph\">\n                                      ScreenSize:{' '}\n                                      <span\n                                        style={{\n                                          fontWeight: 'normal',\n                                          fontSize: '14px',\n                                        }}\n                                      >\n                                        {laptop.productDetails.screenSize}\n                                      </span>\n                                    </Paragraph>\n                                  </Col>\n                                </Row>\n                              )}\n                          </Col>\n                        </Row>\n                        <hr className=\"horizontal-line mt-2\" />\n                        <Row className=\"flex-wrap flex-column flex-md-row justify-content-center align-items-center\">\n                          <Col className=\"d-flex justify-content-md-start justify-content-center align-items-center mt-1\">\n                            <span\n                              style={{ fontSize: '15px', fontWeight: 'bold' }}\n                            >\n                              {laptop.type}\n                            </span>\n                          </Col>\n                        </Row>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          ))\n        ) : (\n          <div className=\"text-center mt-4\">\n            <Lottie options={options} height=\"250px\" width=\"250px\" />\n            <h4 style={{ color: color }}>No Quotes Found</h4>\n          </div>\n        )}\n\n        {laptop.length > 0 ? (\n          <Col className=\"d-flex justify-content-end mt-4\">\n            <CustomPagination\n              totalItems={totalItems}\n              currentPage={currentPage}\n              onPageChange={handlePageChange}\n              totalPages={totalPage}\n            />\n          </Col>\n        ) : (\n          <></>\n        )}\n      </Container>\n\n      <Modal\n        show={showAddressModal}\n        onHide={handleCloseModal}\n        centered\n        size=\"md\"\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Quotes Address</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {selectedActivity && (\n            <>\n              <Paragraph>UserName: {selectedActivity.userName}</Paragraph>\n              <Paragraph>\n                Phone Number: {selectedActivity.phoneNumber}\n              </Paragraph>\n              <Paragraph>Address: {selectedActivity.address}</Paragraph>\n            </>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseModal}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default Quotes;\n","import * as Yup from 'yup';\n\nconst MAX_SIZE = 1048576; // 1MB\n\nconst SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'image/gif', 'image/png'];\n\nexport const ProfileSchema = (isEditName, isEditEmail,isEditPhoneNumber ) =>\n  Yup.object().shape({\n    userName: isEditName\n      ? Yup.string()\n          .max(30, 'Name must be 25 characters or less')\n          .required('Name is required...!')\n      : Yup.string().max(30, 'Name must be 25 characters or less'),\n      \n      phoneNumber: isEditPhoneNumber \n      ? Yup.string()\n          .matches(/^[6-9][0-9]{9}$/, 'Invalid phone number format...!')\n          .required('Phone number is required...!')\n      : Yup.string()\n          .matches(/^[6-9][0-9]{9}$/, 'Invalid phone number format...!')\n          .test('length', 'Phone number must be 10 characters', (val) => val && val.length === 10),\n     \n   email: isEditEmail\n  ? Yup.string()\n      .email('Invalid email address')\n      .matches(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/, 'Email must be in lowercase and enter valid Email...!')\n      .required('Email is required......!')\n  : Yup.string()\n      .email('Invalid email address')\n      .matches(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/, 'Email must be in lowercase and enter valid Email...!'),\n    image: Yup.mixed()\n      .test('fileSize', 'File size is too large. Max 1MB.', (value) => {\n        return !value || (value && value.size <= MAX_SIZE);\n      })\n      .test('fileFormat', 'Unsupported file format.', (value) => {\n        return !value || (value && SUPPORTED_FORMATS.includes(value.type));\n      }),\n  });\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n  Button,\n  Card,\n  Col,\n  Container,\n  Row,\n  Image,\n  Spinner,\n  Form,\n  Modal,\n  InputGroup,\n  FormControl,\n} from 'react-bootstrap';\nimport {\n  useCartCheckoutMutation,\n  useGetCartQuery,\n  useRemoveCartMutation,\n  useUpdateCartMutation,\n  useVerifyCouponMutation,\n} from '../../redux/api/UserCartApi';\nimport FetchLoader from '../../components/FetchLoader';\nimport CustomPagination from '../../components/CustomPagination';\nimport { Heading } from '../../components/Heading';\nimport SuccessModal from '../../components/SuccessModal';\nimport BasicButton from '../../components/BasicButton';\nimport { ErrorMessage, Field, Formik } from 'formik';\nimport LoginModal from '../Authentication/LoginModel';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport { VscVerifiedFilled } from 'react-icons/vsc';\nimport Lottie from 'react-lottie';\nimport cartNotFound from '../../assests/json/cartNoData.json';\nimport Laptop from '../../assests/images/laptop.webp';\nimport {\n  deleteItemFromCart,\n  getAllItemsInCart,\n  updateItemInCart,\n} from '../../utils/CartStorage';\nimport { useNavigate } from 'react-router-dom';\nimport { FaMinus, FaPlus } from 'react-icons/fa6';\nimport { useTheme } from '../../Contexts/ThemeContext';\nimport { removePrefix } from '../../Constants/constant';\nimport { CiDiscount1 } from 'react-icons/ci';\nimport {\n  FaShoppingCart,\n  FaRupeeSign,\n  FaTools,\n  FaCheckSquare,\n  FaCheck,\n} from 'react-icons/fa';\nimport {\n  useOtpSumbitEmailMutation,\n  useVerifyEmailOTPMutation,\n} from '../../redux/api/ProfileOrdersApi';\nimport { useSendPinCodeMutation } from '../../redux/api/OrdersApi';\nconst Cart = () => {\n  const { color } = useTheme();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [cartId, setCartId] = useState('');\n  const [totalItems, setTotalItems] = useState(0);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [address, setAddress] = useState([]);\n  const [pinCode, setPinCode] = useState('');\n  const [couponAmount, setCouponAmount] = useState(0);\n  const [initialAmount, setInitialAmount] = useState(0);\n  const [gSTAmount, setGSTAmount] = useState(0);\n  const [data, setData] = useState([]);\n  const [rentalCarousel, setRentalCarousel] = useState(null);\n  const [refurbishedCarousel, setRefurbishedCarousel] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [errorLottie, setErrorLottie] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [coupon, setCoupon] = useState('');\n  const [showFormModal, setShowFormModal] = useState(false);\n  const [isLoginOpen, setIsLoginOpen] = useState(false);\n  const [showVerify, setShowVerify] = useState(false);\n  const [razorPaySecretKey, setRazorPaySecretKey] = useState('');\n  const [razorPayKey, setRazorPayKey] = useState('');\n  const [removingProductId, setRemovingProductId] = useState('');\n  const [paymentMethod, setPaymentMethod] = useState('onlinePayment');\n  const [isEmailVerified, setIsEmailVerified] = useState(false);\n  const [isPinCodeVerified, setIsPinCodeVerified] = useState(false);\n  const [loadingPin, setLoadingPin] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [otpEmail, setOtpEmail] = useState(new Array(4).fill(''));\n  const inputEmailRefs = useRef([]);\n  const [showEmailOtpModal, setShowEmailOtpModal] = useState(false);\n  const [otpError, setOtpError] = useState(false);\n\n  const navigate = useNavigate();\n  const {\n    data: CartData,\n    isLoading,\n    refetch,\n  } = useGetCartQuery({\n    currentPage: currentPage,\n    phoneNumber: phoneNumber,\n  });\n  const [removeProduct, { isLoading: removeLoader }] = useRemoveCartMutation();\n  const [updateProduct, { isLoading: quantityLoader }] =\n    useUpdateCartMutation();\n  const [Checkout, { isLoading: checkoutLoader }] = useCartCheckoutMutation();\n  const [VerifyCoupon, { isLoading: couponLoader }] = useVerifyCouponMutation();\n  const [otpEmailApi] = useVerifyEmailOTPMutation();\n  const [otpEmailSubmitApi, { isLoading: otpEmailLoader }] =\n    useOtpSumbitEmailMutation();\n  const [pinCodeApi] = useSendPinCodeMutation();\n\n  useEffect(() => {\n    if (showEmailOtpModal) {\n      inputEmailRefs.current[0]?.focus();\n    }\n  }, [showEmailOtpModal]);\n\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    const secretKey = localStorage.getItem('razorPaySecretKey');\n    const payKey = localStorage.getItem('razorPayKey');\n    if (storedToken) {\n      const { phoneNumber } = JSON.parse(storedToken);\n      setPhoneNumber(phoneNumber);\n    }\n    if (secretKey) {\n      setRazorPaySecretKey(secretKey);\n    }\n    if (payKey) {\n      setRazorPayKey(payKey);\n    }\n  }, []);\n\n  useEffect(() => {\n    setData([]);\n    setCartId();\n    setTotalPage(1);\n    setItemsPerPage(10);\n    setTotalItems(0);\n    setCouponAmount(0);\n    setTotalAmount(0);\n    setInitialAmount(0);\n    setGSTAmount(0);\n    setUserName();\n    setEmail();\n    setAddress([]);\n    if (phoneNumber) {\n      if (CartData && CartData.data) {\n        setData(CartData.data || []);\n        setCartId(CartData.cartId || '');\n        setTotalPage(CartData.pagination?.totalPages || 1);\n        setItemsPerPage(CartData.pagination?.itemsPerPage || 10);\n        setTotalItems(CartData.pagination?.totalItems || 0);\n        setUserName(CartData.userName || '');\n        setEmail(CartData.email || '');\n        setAddress(CartData.address || []);\n        localStorage.setItem('rental', JSON.stringify(CartData.rentalCarousel));\n        localStorage.setItem(\n          'refurbished',\n          JSON.stringify(CartData.refurbishedCarousel)\n        );\n\n        if (CartData.totalAmount) {\n          setTotalAmount(CartData.totalAmount || 0);\n          setCouponAmount(CartData.totalAmount || 0);\n          setInitialAmount(CartData.totalAmountBeforeGST || 0);\n          setGSTAmount(CartData.GST || 0);\n        }\n      } else {\n        setData([]);\n      }\n    } else {\n      const { cart } = getAllItemsInCart();\n      if (Array.isArray(cart)) {\n        const totalItemsCount = cart.length;\n        const startIndex = (currentPage - 1) * itemsPerPage;\n        const paginatedData = cart.slice(startIndex, startIndex + itemsPerPage);\n        const repairTotalAmount = cart\n          .filter((item) => item.type === 'Repair')\n          .reduce((acc, item) => acc + (item.amount || 0), 0);\n        setData(paginatedData);\n        setCartId('');\n        setTotalPage(Math.ceil(totalItemsCount / itemsPerPage));\n        setItemsPerPage(itemsPerPage);\n        setTotalItems(totalItemsCount);\n        setTotalAmount(repairTotalAmount);\n        setCouponAmount(0);\n        setInitialAmount(0);\n        setGSTAmount(0);\n      } else {\n        console.error('Local data is not an array:', cart);\n        setData([]);\n        setTotalPage(1);\n        setTotalItems(0);\n      }\n    }\n  }, [CartData, currentPage, phoneNumber, removingProductId]);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      refetch();\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [refetch]);\n  useEffect(() => {\n    const storedRentalCarousel = localStorage.getItem('rental');\n    const storedRefurbishedCarousel = localStorage.getItem('refurbished');\n\n    if (storedRentalCarousel) {\n      setRentalCarousel(JSON.parse(storedRentalCarousel));\n    }\n    if (storedRefurbishedCarousel) {\n      setRefurbishedCarousel(JSON.parse(storedRefurbishedCarousel));\n    }\n  }, []);\n\n  const primaryAddress =\n    address.find((addr) => addr.primaryAddress)?.address || '';\n\n  const initialValues = {\n    fullName: '',\n    phoneNumber: '',\n    email: '',\n    address: '',\n    pinCode: '',\n    aphoneNumber: '',\n    paymentMethod: '',\n    termsAndConditions: false,\n  };\n  const validationSchema = Yup.object().shape({\n    fullName: Yup.string()\n      .min(2, 'Full Name must be at least 2 characters')\n      .max(50, 'Full Name must be at most 50 characters')\n      .required('Full Name is required'),\n    phoneNumber: Yup.string()\n      .matches(/^[6-9][0-9]{9}$/, 'Invalid phone number format')\n      .required('Phone Number is required'),\n    email: Yup.string()\n      .email('Invalid email format')\n      .matches(\n        /^[a-zA-Z0-9._%+-]+[0-9]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/,\n        'Invalid email format'\n      )\n      .required('Email is required'),\n    address: Yup.string()\n      .min(10, 'Address must be at least 10 characters')\n      .max(200, 'Address must be at most 200 characters')\n      .required('Address is required'),\n    pinCode: Yup.string()\n      .min(6, 'Pin Code must be at least 6 characters')\n      .max(6, 'Pin Code must be at most 6 characters')\n      .required('Pin Code is required'),\n    termsAndConditions: Yup.boolean()\n      .oneOf([true], 'Must Accept Terms and Conditions')\n      .required('Must Accept Terms and Conditions'),\n  });\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n    window.scrollTo(0, 0);\n  };\n  const options = {\n    loop: true,\n    autoplay: true,\n    animationData: cartNotFound,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice',\n    },\n  };\n  const renderIssues = (issue) => {\n    if (!issue) return null;\n    const issues = issue.split(',').map((i) => i.trim());\n    return (\n      <>\n        {issues.map((i, index) => (\n          <div key={index} style={{ marginLeft: '5px' }}>\n            {i}\n            {index < issues.length - 1 && ','}\n          </div>\n        ))}\n      </>\n    );\n  };\n  const handleRazorPay = async (values, { resetForm }) => {\n    if (!isEmailVerified) {\n      toast.error('Please verify your email before submitting', {\n        position: 'bottom-center',\n        autoClose: 1000,\n      });\n      return;\n    }\n    if (!isPinCodeVerified) {\n      toast.error('Please verify Pin Code before submitting', {\n        position: 'bottom-center',\n        autoClose: 1000,\n      });\n      return;\n    }\n    const fullAddress = `${values.address} - ${values.pinCode}`;\n\n    var options = {\n      key: razorPayKey,\n      key_secret: razorPaySecretKey,\n      amount: couponAmount * 100,\n      currency: 'INR',\n      name: 'Refix System',\n      description: 'Refix System Laptop Services',\n      handler: function (response) {\n        handleSubmit(\n          values,\n          { resetForm },\n          response.razorpay_payment_id,\n          couponAmount,\n          'onlinePayment'\n        );\n      },\n\n      prefill: {\n        name: values.fullName,\n        email: values.email,\n        phone: values.phoneNumber,\n        address: fullAddress,\n        city: values.city,\n      },\n      notes: {\n        address: 'Razorpay Corporate Office',\n      },\n      theme: {\n        color: '#3399cc',\n      },\n    };\n    try {\n      var pay = new window.Razorpay(options);\n      pay.open();\n    } catch (error) {\n      console.error('Error initializing Razorpay:', error);\n    }\n  };\n  const handleVerifyCoupon = async () => {\n    const data = {\n      phoneNumber: phoneNumber,\n      coupon: coupon.toUpperCase(),\n    };\n    try {\n      const response = await VerifyCoupon({ data: data });\n      if (response?.data) {\n        setCouponAmount(response?.data?.payableAmount);\n        setInitialAmount(response?.data?.totalAmountBeforeGST);\n        setGSTAmount(response?.data?.GST);\n        setShowVerify(true);\n        toast.success(response?.data?.message, {\n          autoClose: 2000,\n          position: 'bottom-center',\n        });\n      } else {\n        setShowVerify(false);\n        toast.error(response?.error?.data.error, {\n          autoClose: 2000,\n          position: 'bottom-center',\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleSubmit = async (\n    values,\n    { resetForm },\n    transactionId,\n    amount,\n    paymentType\n  ) => {\n    if (!isEmailVerified) {\n      toast.error('Please verify your email before submitting', {\n        position: 'bottom-center',\n        autoClose: 1000,\n      });\n      return;\n    }\n    if (!isPinCodeVerified) {\n      toast.error('Please verify Pin Code before submitting', {\n        position: 'bottom-center',\n        autoClose: 1000,\n      });\n      return;\n    }\n    const fullAddress = `${values.address} - ${values.pinCode}`;\n\n    const data = {\n      userName: values.fullName,\n      phoneNumber: phoneNumber,\n      address: fullAddress,\n      email: values.email,\n      transactionId: transactionId,\n      amount: amount,\n      coupon: coupon,\n      alternatePhoneNumber: values.aphoneNumber,\n      initialAmountPaidThrough: paymentType,\n      GST: gSTAmount,\n    };\n    try {\n      const response = await Checkout({ id: cartId, data: data });\n      if (response?.data) {\n        setShowFormModal(false);\n        setErrorLottie(false);\n        setSuccessMessage(response?.data?.message);\n        setData([]);\n        setShowModal(true);\n        setTimeout(() => {\n          setShowModal(false);\n          window.location.reload();\n        }, 2000);\n        setCartId('');\n        setTotalAmount(0);\n        setCoupon('');\n        setPinCode('');\n        setCouponAmount(0);\n        setInitialAmount(0);\n        setGSTAmount(0);\n        resetForm();\n      } else {\n        setShowFormModal(false);\n        setErrorLottie(true);\n        setSuccessMessage(response?.error?.data.error);\n        setShowModal(true);\n        setTimeout(() => setShowModal(false), 4000);\n        resetForm();\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleRemoveProduct = async (productId) => {\n    setRemovingProductId(productId);\n    try {\n      const response = await removeProduct({ cartId, productId });\n      if (response?.data) {\n        setErrorLottie(false);\n        setSuccessMessage(response.data.message);\n        setShowModal(true);\n        setTimeout(() => {\n          setShowModal(false);\n        }, 2000);\n        if (data.length === 1) {\n          setTimeout(() => {\n            setShowModal(false);\n            window.location.reload();\n          }, 2000);\n        }\n        setRemovingProductId('');\n      } else {\n        setErrorLottie(true);\n        setSuccessMessage(\n          response.error?.data?.error || 'Failed to remove item'\n        );\n        setRemovingProductId('');\n      }\n      setShowModal(true);\n      setTimeout(() => {\n        setShowModal(false);\n      }, 4000);\n    } catch (error) {\n      console.error('Error removing product:', error);\n\n      setRemovingProductId('');\n    }\n  };\n  const handleRemoveLocalProduct = (id) => {\n    const { status, message } = deleteItemFromCart(id);\n    if (status === 200) {\n      const { cart } = getAllItemsInCart();\n      if (Array.isArray(cart)) {\n        const totalItemsCount = cart.length;\n        const startIndex = (currentPage - 1) * itemsPerPage;\n        const paginatedData = cart.slice(startIndex, startIndex + itemsPerPage);\n        const repairTotalAmount = cart\n          .filter((item) => item.type === 'Repair')\n          .reduce((acc, item) => acc + (item.amount || 0), 0);\n        setData(paginatedData);\n        setCartId('');\n        setTotalPage(Math.ceil(totalItemsCount / itemsPerPage));\n        setItemsPerPage(itemsPerPage);\n        setTotalItems(totalItemsCount);\n        setTotalAmount(repairTotalAmount);\n        setCouponAmount(0);\n        setInitialAmount(0);\n        setGSTAmount(0);\n      } else {\n        console.error('Local data is not an array:', cart);\n        setData([]);\n        setTotalPage(1);\n        setTotalItems(0);\n      }\n\n      setErrorLottie(false);\n      setSuccessMessage(message);\n      setShowModal(true);\n      setTimeout(() => {\n        setShowModal(false);\n      }, 4000);\n    } else {\n      setErrorLottie(true);\n      setSuccessMessage(message);\n      setShowModal(true);\n      setTimeout(() => {\n        setShowModal(false);\n      }, 4000);\n    }\n  };\n  const handleProductQuantity = async (productId, quantity) => {\n    setRemovingProductId(productId);\n    const data = {\n      quantity: quantity,\n    };\n    try {\n      const response = await updateProduct({ cartId, productId, data });\n      if (response?.data) {\n        setRemovingProductId('');\n      } else {\n        setRemovingProductId('');\n      }\n    } catch (error) {\n      console.error('Error removing product:', error);\n\n      setRemovingProductId('');\n    }\n  };\n  const handleLocalProductQuantity = async (productId, quantity) => {\n    const { status, message } = updateItemInCart(productId, quantity);\n    if (status === 200) {\n      const { cart } = getAllItemsInCart();\n      if (Array.isArray(cart)) {\n        const totalItemsCount = cart.length;\n        const startIndex = (currentPage - 1) * itemsPerPage;\n        const paginatedData = cart.slice(startIndex, startIndex + itemsPerPage);\n        const repairTotalAmount = cart\n          .filter((item) => item.type === 'Repair')\n          .reduce((acc, item) => acc + (item.amount || 0), 0);\n        setData(paginatedData);\n        setCartId('');\n        setTotalPage(Math.ceil(totalItemsCount / itemsPerPage));\n        setItemsPerPage(itemsPerPage);\n        setTotalItems(totalItemsCount);\n        setTotalAmount(repairTotalAmount);\n        setCouponAmount(0);\n        setInitialAmount(0);\n        setGSTAmount(0);\n      } else {\n        console.error('Local data is not an array:', cart);\n        setData([]);\n        setTotalPage(1);\n        setTotalItems(0);\n      }\n    } else {\n    }\n  };\n\n  if (isLoading) {\n    return <FetchLoader />;\n  }\n  const navigateToDetails = (laptop, similarProduct, type) => {\n    window.scrollTo(0, 0);\n    navigate(\n      type === 'Refurbished'\n        ? '/refurbished/refurbished-details'\n        : type === 'Rental'\n          ? '/rent/rent-details'\n          : '',\n      { state: { laptop, similarProduct } }\n    );\n  };\n\n  const handleKeyDownEmail = (e, index) => {\n    if (e.key === 'Backspace') {\n      const newOtp = [...otpEmail];\n      newOtp[index] = '';\n      setOtpEmail(newOtp);\n      if (index > 0) {\n        inputEmailRefs.current[index - 1].focus();\n      }\n    }\n  };\n\n  const handleChangeEmail = (element, index) => {\n    if (isNaN(element.value)) return false;\n    const newOtp = [...otpEmail];\n    newOtp[index] = element.value;\n    setOtpEmail(newOtp);\n\n    // Move to next input if value is entered\n    if (element.nextSibling && element.value) {\n      element.nextSibling.focus();\n    }\n  };\n\n  const handleEmailOtpSend = async (values) => {\n    const phoneNumberWithoutPrefix = phoneNumber.replace(/^(\\+91)/, '');\n    setLoading(true);\n    try {\n      const response = await otpEmailApi({\n        phoneNumber: phoneNumberWithoutPrefix,\n        email: values.email,\n      });\n\n      if (response?.data) {\n        setShowEmailOtpModal(true);\n      } else {\n        toast.error(response?.error.data.error, {\n          position: 'bottom-center',\n          autoClose: 1000,\n        });\n      }\n    } catch (error) {\n      console.error(error);\n      toast.error('An error occurred', { autoClose: 1000 });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEmailOtpSubmit = async (values) => {\n    if (otpEmail.length < 4) {\n      setOtpError(true);\n    }\n    const phoneNumberWithoutPrefix = phoneNumber.replace(/^(\\+91)/, '');\n    setLoading(true);\n    try {\n      const response = await otpEmailSubmitApi({\n        phoneNumber: phoneNumberWithoutPrefix,\n        email: values.email,\n        code: otpEmail.join(''),\n      });\n\n      if (response?.data) {\n        setShowEmailOtpModal(false);\n        toast.success(response?.data.message, {\n          position: 'bottom-center',\n          autoClose: 1000,\n        });\n        setIsEmailVerified(true);\n        setOtpEmail(new Array(4).fill(''));\n      } else {\n        toast.error(response?.error.data.error, {\n          position: 'bottom-center',\n          autoClose: 1000,\n        });\n        setOtpEmail(new Array(4).fill(''));\n      }\n    } catch (error) {\n      console.error(error);\n      toast.error('An error occurred', { autoClose: 1000 });\n    } finally {\n      setLoading(false);\n      setOtpEmail(new Array(4).fill(''));\n    }\n  };\n\n  const handlepinCodeOtpSend = async (values) => {\n    setLoadingPin(true);\n    try {\n      const response = await pinCodeApi({\n        pincode: values.pinCode,\n      });\n\n      if (response?.data) {\n        toast.success(response?.data.message, {\n          position: 'bottom-center',\n          autoClose: 1000,\n        });\n        setIsPinCodeVerified(true);\n      } else {\n        toast.error(response?.error.data.error, {\n          position: 'bottom-center',\n          autoClose: 1000,\n        });\n      }\n    } catch (error) {\n      console.error(error);\n      toast.error('An error occurred', { autoClose: 1000 });\n    } finally {\n      setLoadingPin(false);\n    }\n  };\n\n  return (\n    <Container className=\"mt-4\">\n      <Row className=\"justify-content-center mt-2\">\n        <Heading>Your Cart</Heading>\n      </Row>\n      {data.length > 0 ? (\n        <>\n          <Row className=\"g-3\">\n            {data.map((item) => (\n              <Col key={item._id} xs={12} md={6} lg={4}>\n                <Card className=\"d-flex flex-column p-2 shadow-sm border-0 h-100\">\n                  <Card.Body className=\"d-flex flex-column\">\n                    <Row className=\"align-items-center mb-3\">\n                      <Col xs={4} className=\"p-0\">\n                        <Image\n                          alt=\"images\"\n                          src={item.image ?? Laptop}\n                          rounded\n                          className={`h-auto ${item.type === 'Repair' ? '' : 'pointer'}`}\n                          style={{ maxWidth: '100%', objectFit: 'cotain' }}\n                          onClick={() => {\n                            item.type === 'Repair&Service'\n                              ? null\n                              : navigateToDetails(\n                                  phoneNumber ? item : item.item,\n                                  item.type === 'Refurbished'\n                                    ? refurbishedCarousel\n                                    : item.type === 'Rental'\n                                      ? rentalCarousel\n                                      : [],\n                                  item.type\n                                );\n                          }}\n                        />\n                      </Col>\n                      <Col xs={8}>\n                        <Card.Title\n                          className=\"text-truncate\"\n                          style={{ fontSize: '16px', fontWeight: '600' }}\n                        >\n                          {item.brand}\n                        </Card.Title>\n                        <Card.Text\n                          className=\"text-muted text-center text-truncate mb-2\"\n                          style={{ fontSize: '14px' }}\n                        >\n                          {item.type === 'Rental' ? 'Rental' : item.type}\n                        </Card.Text>\n                      </Col>\n                    </Row>\n                    <Card.Text\n                      className=\"text-dark d-flex flex-row flex-wrap align-items-start justify-content-start w-100 text-wrap mb-2\"\n                      style={{ fontSize: '14px' }}\n                    >\n                      <span style={{ marginRight: '5px' }}>{item.model}</span>\n                    </Card.Text>\n                    {item.issue && (\n                      <Card.Text\n                        className=\"text-dark d-flex flex-row flex-wrap align-items-start justify-content-start w-100 text-wrap mb-2\"\n                        style={{ fontSize: '14px' }}\n                      >\n                        <span style={{ marginRight: '5px' }}>Issue:</span>\n                        {renderIssues(item.issue)}\n                      </Card.Text>\n                    )}\n                    <Col></Col>\n                    {!item.issue && (\n                      <Col className=\"my-2 d-flex flex-center flex-column justity-content-center align-items-center\">\n                        <div\n                          key={item._id}\n                          className=\"d-flex align-items-center my-auto\"\n                        >\n                          <Button\n                            className=\"d-flex align-items-center justify-content-center p-1 m-0\"\n                            variant=\"outline-danger\"\n                            style={{ width: '30px', height: '25px' }}\n                            onClick={() =>\n                              phoneNumber\n                                ? handleProductQuantity(\n                                    item._id,\n                                    item.quantity - 1\n                                  )\n                                : handleLocalProductQuantity(\n                                    item._id,\n                                    item.quantity - 1\n                                  )\n                            }\n                            disabled={item.quantity === 1 || quantityLoader}\n                          >\n                            <FaMinus />\n                          </Button>\n                          <InputGroup\n                            className=\"mx-2\"\n                            style={{\n                              width: '40px',\n                            }}\n                          >\n                            <FormControl\n                              style={{\n                                width: '40px',\n                                height: '25px',\n                                fontSize: '12px',\n                              }}\n                              type=\"text\"\n                              value={item.quantity}\n                              readOnly\n                              className=\"text-center\"\n                            />\n                          </InputGroup>\n                          <Button\n                            className=\"d-flex align-items-center justify-content-center p-1 m-0\"\n                            variant=\"outline-success\"\n                            style={{ width: '30px', height: '25px' }}\n                            onClick={() =>\n                              phoneNumber\n                                ? handleProductQuantity(\n                                    item._id,\n                                    item.quantity + 1\n                                  )\n                                : handleLocalProductQuantity(\n                                    item._id,\n                                    item.quantity + 1\n                                  )\n                            }\n                            disabled={item.quantity === 50 || quantityLoader}\n                          >\n                            <FaPlus />\n                          </Button>\n                        </div>\n                      </Col>\n                    )}\n\n                    <Button\n                      variant=\"outline-danger\"\n                      size=\"sm\"\n                      className=\"w-100 mt-auto\"\n                      disabled={removeLoader && removingProductId === item._id}\n                      onClick={() =>\n                        phoneNumber\n                          ? handleRemoveProduct(item._id)\n                          : handleRemoveLocalProduct(item._id)\n                      }\n                    >\n                      {removeLoader && removingProductId === item._id ? (\n                        <Spinner size=\"sm\" />\n                      ) : (\n                        'Remove'\n                      )}\n                    </Button>\n                  </Card.Body>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n          <Row>\n            <Col xs={12} md={8} lg={7} className=\"mx-auto mt-5\">\n              <div className=\"border p-3\">\n                {/* Coupon Section */}\n                {!couponAmount <= 0 && (\n                  <div className=\"cupon\" style={{ width: '100%' }}>\n                    {/* Headline and Verified Icon Row */}\n                    <Row className=\"align-items-center mb-2\">\n                      <Col className=\"d-flex\">\n                        <CiDiscount1 color=\"green\" size={30} className=\"me-1\" />\n                        <h6 className=\"mt-1\" style={{ fontSize: '20px' }}>\n                          Coupon\n                        </h6>\n                      </Col>\n                      <Col className=\"text-end\">\n                        {showVerify && (\n                          <VscVerifiedFilled color=\"green\" size={25} />\n                        )}\n                      </Col>\n                      <Col lg={9}>\n                        <input\n                          type=\"text\"\n                          name=\"coupon\"\n                          className=\"form-control w-100 mt-1\"\n                          placeholder=\"Enter Coupon code\"\n                          value={coupon.toUpperCase()}\n                          onChange={(e) => setCoupon(e.target.value)}\n                          disabled={couponAmount <= 0 || showVerify}\n                        />\n                      </Col>\n                      <Col\n                        lg={3}\n                        className=\"text-lg-start text-md-center text-xs-center text-sm-center\"\n                      >\n                        <span style={{ color: color }}>\n                          {couponLoader ? (\n                            <Spinner size=\"sm\" color={color} />\n                          ) : showVerify ? (\n                            <></>\n                          ) : (\n                            <span\n                              style={{ cursor: 'pointer' }}\n                              onClick={() =>\n                                coupon.length > 0\n                                  ? handleVerifyCoupon()\n                                  : toast.error(\n                                      'Please Enter Coupon before Clicking Apply',\n                                      {\n                                        autoClose: 1000,\n                                        position: 'fixed',\n                                      }\n                                    )\n                              }\n                            >\n                              Apply\n                            </span>\n                          )}\n                        </span>\n                      </Col>\n                    </Row>\n                  </div>\n                )}\n\n                <div className=\"mt-3\">\n                  <h6 className=\"\" style={{ color: 'red' }}>\n                    Disclaimer\n                  </h6>\n                  <FaCheck\n                    color=\"green\"\n                    size={15}\n                    style={{ fontSize: '16px' }}\n                  />{' '}\n                  <span style={{ fontSize: '14px' }}>\n                    The initial amount (without GST) you've paid will be\n                    deducted from the total amount.\n                  </span>\n                  <br />\n                  <FaCheck\n                    color=\"green\"\n                    size={15}\n                    style={{ fontSize: '16px' }}\n                  />{' '}\n                  <span style={{ fontSize: '14px' }}>\n                    Spare parts and repair costs will be charged separately.\n                  </span>\n                </div>\n\n                {/* Price Plan Section */}\n                <Row className=\"mt-3\">\n                  <Col xs={6}>\n                    <h6>Initial Amount:</h6>\n                  </Col>\n                  <Col xs={6} className=\"text-end\">\n                    <h6>₹{initialAmount.toString()}</h6>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs={6}>\n                    <h6>GST Amount:</h6>\n                  </Col>\n                  <Col xs={6} className=\"text-end\">\n                    <h6>₹{gSTAmount.toString()}</h6>\n                  </Col>\n                </Row>\n                <hr />\n                <Row>\n                  <Col xs={6}>\n                    <h6>Subtotal:</h6>\n                  </Col>\n                  <Col xs={6} className=\"text-end\">\n                    <h6>₹{couponAmount.toString()}</h6>\n                  </Col>\n                </Row>\n\n                <Row className=\"mt-3\">\n                  <Col xs={12}>\n                    <Button\n                      style={{\n                        backgroundColor: color,\n                        borderColor: color,\n                      }}\n                      size=\"sm\"\n                      className=\"w-100\"\n                      onClick={() =>\n                        phoneNumber\n                          ? setShowFormModal(true)\n                          : setIsLoginOpen(true)\n                      }\n                    >\n                      Checkout\n                    </Button>\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n          </Row>\n\n          <Row className=\"mt-4\">\n            <Col className=\"d-flex justify-content-end\">\n              <CustomPagination\n                itemsPerPage={itemsPerPage}\n                totalItems={totalItems}\n                currentPage={currentPage}\n                onPageChange={handlePageChange}\n                totalPages={totalPage}\n              />\n            </Col>\n          </Row>\n        </>\n      ) : (\n        <div className=\"text-center mt-4\">\n          <Lottie options={options} height=\"250px\" width=\"250px\" />\n          <h4 style={{ color: color }}>No Products Found</h4>\n        </div>\n      )}\n      <SuccessModal\n        showModal={showModal}\n        setShowModal={setShowModal}\n        successMessage={successMessage}\n        error={errorLottie}\n      />\n      <Modal\n        show={showFormModal}\n        onHide={() => setShowFormModal(false)}\n        backdrop=\"static\"\n        keyboard={false}\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title className=\"fs-5\">Checkout Application Form</Modal.Title>\n        </Modal.Header>\n        <Formik\n          initialValues={{\n            ...initialValues,\n            phoneNumber: removePrefix(phoneNumber) || '',\n            fullName: userName,\n            email: email,\n            address: primaryAddress,\n            pinCode: '',\n            paymentMethod: 'onlinePayment',\n          }}\n          validationSchema={validationSchema}\n          onSubmit={(values, { resetForm }) => {\n            const paymentType =\n              totalAmount > 0\n                ? values.paymentMethod === 'cashOnDelivery'\n                  ? 'COD'\n                  : 'Online Payment'\n                : 'COD';\n\n            if (totalAmount > 0 && values.paymentMethod === 'onlinePayment') {\n              handleRazorPay(values, { resetForm });\n            } else {\n              handleSubmit(values, { resetForm }, '', 0, paymentType);\n            }\n          }}\n        >\n          {({ handleSubmit, setFieldValue, values, errors }) => (\n            <Form onSubmit={handleSubmit}>\n              <Modal.Body style={{ maxHeight: '400px', overflowY: 'scroll' }}>\n                <Row className=\"my-1\">\n                  <Form.Group>\n                    <Form.Label>Full Name</Form.Label>\n                    <Field\n                      type=\"text\"\n                      name=\"fullName\"\n                      className=\"form-control\"\n                      placeholder=\"Enter your Full name\"\n                    />\n                    <ErrorMessage\n                      name=\"fullName\"\n                      component=\"div\"\n                      className=\"text-danger\"\n                    />\n                  </Form.Group>\n                </Row>\n                <Row className=\"my-1\">\n                  <Form.Group controlId=\"phoneNumber\">\n                    <Form.Label>Phone Number</Form.Label>\n                    <InputGroup className=\"\">\n                      <InputGroup.Text\n                        className=\"input-group-prepend\"\n                        style={{ fontSize: '14px', height: '40px' }}\n                      >\n                        +91\n                      </InputGroup.Text>\n                      <Field\n                        type=\"text\"\n                        name=\"phoneNumber\"\n                        className=\"form-control\"\n                        placeholder=\"Enter your Phone number\"\n                        onInput={(e) => {\n                          const value = e.target.value.replace(/\\D/g, '');\n                          if (value.length <= 10) {\n                            e.target.value = value;\n                          } else {\n                            e.target.value = value.slice(0, 10);\n                          }\n                        }}\n                      />\n                    </InputGroup>\n                    <ErrorMessage\n                      name=\"phoneNumber\"\n                      component=\"div\"\n                      className=\"text-danger\"\n                    />\n                  </Form.Group>\n                </Row>\n                <Row className=\"my-1\">\n                  <Form.Group controlId=\"aphoneNumber\">\n                    <Form.Label>Alternative Phone Number(Optional)</Form.Label>\n                    <InputGroup className=\"\">\n                      <InputGroup.Text\n                        className=\"input-group-prepend\"\n                        style={{ fontSize: '14px', height: '40px' }}\n                      >\n                        +91\n                      </InputGroup.Text>\n                      <Field\n                        placeholder=\"Enter your Alternative Phone Number\"\n                        type=\"text\"\n                        name=\"aphoneNumber\"\n                        className=\"form-control\"\n                        onInput={(e) => {\n                          const value = e.target.value.replace(/\\D/g, '');\n                          if (value.length <= 10) {\n                            e.target.value = value;\n                          } else {\n                            e.target.value = value.slice(0, 10);\n                          }\n                        }}\n                      />\n                    </InputGroup>\n                    <ErrorMessage\n                      name=\"aphoneNumber\"\n                      component=\"div\"\n                      className=\"text-danger\"\n                    />\n                  </Form.Group>\n                </Row>\n                <Row className=\"my-1\">\n                  <Form.Group controlId=\"email\">\n                    <Form.Label>\n                      Email <span className=\"text-danger\">*</span>\n                    </Form.Label>\n                    <div className=\"d-flex\">\n                      <Field\n                        type=\"email\"\n                        name=\"email\"\n                        className=\"form-control\"\n                        placeholder=\"Enter your Email\"\n                        onChange={(e) => {\n                          const value = e.target.value.toLowerCase();\n                          e.target.value = value;\n                          setFieldValue('email', value);\n\n                          if (value !== email) {\n                            setIsEmailVerified(false);\n                          }\n                        }}\n                      />\n\n                      {!isEmailVerified ? (\n                        values.email === email ? (\n                          <Button\n                            style={{ backgroundColor: 'white' }}\n                            className=\"ml-2\"\n                            disabled\n                          >\n                            <i\n                              className=\"fas fa-check-circle\"\n                              style={{ color: 'green' }}\n                            ></i>\n                          </Button>\n                        ) : (\n                          <Button\n                            style={{ backgroundColor: color }}\n                            className=\"ml-2 mx-2\"\n                            onClick={() => {\n                              handleEmailOtpSend(values);\n                            }}\n                            disabled={loading || !values.email || errors.email}\n                          >\n                            {loading ? (\n                              <>\n                                <Spinner animation=\"border\" size=\"sm\" />{' '}\n                                Verify...\n                              </>\n                            ) : (\n                              'Verify'\n                            )}\n                          </Button>\n                        )\n                      ) : (\n                        <Button\n                          style={{ backgroundColor: 'white' }}\n                          className=\"ml-2\"\n                          disabled={loading || !values.email || errors.email}\n                        >\n                          <i\n                            className=\"fas fa-check-circle\"\n                            style={{ color: 'green' }}\n                          ></i>\n                        </Button>\n                      )}\n                    </div>\n                    <ErrorMessage\n                      name=\"email\"\n                      component=\"div\"\n                      className=\"text-danger\"\n                    />\n                  </Form.Group>\n                </Row>\n                {/* <Row className=\"my-1\">\n                  <Form.Group controlId=\"email\">\n                    <Form.Label>\n                      Email <span className=\"text-danger\">*</span>\n                    </Form.Label>\n                    <div className=\"d-flex\">\n                      <Field\n                        type=\"email\"\n                        name=\"email\"\n                        className=\"form-control\"\n                        placeholder=\"Enter your Email\"\n                        onChange={(e) => {\n                          const value = e.target.value.toLowerCase();\n                          e.target.value = value;\n                          setFieldValue('email', value);\n                        }}\n                      />\n                      {!isEmailVerified ? (\n                        <Button\n                          style={{ backgroundColor: color }}\n                          className=\"ml-2 mx-2\"\n                          onClick={() => {\n                            handleEmailOtpSend(values);\n                          }}\n                          disabled={loading}\n                        >\n                          {loading ? (\n                            <>\n                              <Spinner animation=\"border\" size=\"sm\" /> Verify...\n                            </>\n                          ) : (\n                            'Verify'\n                          )}\n                        </Button>\n                      ) : (\n                        <Button\n                          style={{ backgroundColor: 'white' }}\n                          className=\"ml-2\"\n                          disabled\n                        >\n                          <i\n                            className=\"fas fa-check-circle\"\n                            style={{ color: 'green' }}\n                          ></i>\n                        </Button>\n                      )}\n                    </div>\n                    <ErrorMessage\n                      name=\"email\"\n                      component=\"div\"\n                      className=\"text-danger\"\n                    />\n                  </Form.Group>\n                </Row> */}\n                {/* Payment Method Selection */}\n                {totalAmount > 0 && (\n                  <Row className=\"my-1\">\n                    <Form.Group as={Row}>\n                      <Col sm={12}>\n                        <Form.Label>Payment Method</Form.Label>\n                      </Col>\n                      <Col sm={6}>\n                        <Field\n                          type=\"radio\"\n                          name=\"paymentMethod\"\n                          value=\"cashOnDelivery\"\n                          className=\"form-check-input\"\n                          id=\"cashOnDelivery\"\n                          onClick={() => {\n                            setPaymentMethod('cashOnDelivery');\n                            setFieldValue('paymentMethod', 'cashOnDelivery');\n                          }}\n                        />\n                        <Form.Label\n                          htmlFor=\"cashOnDelivery\"\n                          className=\"form-check-label mx-1\"\n                        >\n                          Cash on Delivery\n                        </Form.Label>\n                      </Col>\n                      <Col sm={6}>\n                        <Field\n                          type=\"radio\"\n                          name=\"paymentMethod\"\n                          value=\"onlinePayment\"\n                          className=\"form-check-input\"\n                          id=\"onlinePayment\"\n                          onClick={() => {\n                            setPaymentMethod('onlinePayment');\n                            setFieldValue('paymentMethod', 'onlinePayment');\n                          }}\n                        />\n                        <Form.Label\n                          htmlFor=\"onlinePayment\"\n                          className=\"form-check-label mx-1\"\n                        >\n                          Digital Payment\n                        </Form.Label>\n                      </Col>\n                      <ErrorMessage\n                        name=\"paymentMethod\"\n                        component=\"div\"\n                        className=\"text-danger\"\n                      />\n                    </Form.Group>\n                  </Row>\n                )}\n\n                <Row className=\"my-1\">\n                  <Form.Group>\n                    <Form.Label>Address</Form.Label>\n                    <Field\n                      as=\"textarea\"\n                      name=\"address\"\n                      className=\"form-control\"\n                      placeholder=\"Enter your  Address\"\n                    />\n                    <ErrorMessage\n                      name=\"address\"\n                      component=\"div\"\n                      className=\"text-danger\"\n                    />\n                  </Form.Group>\n                </Row>\n                <Row className=\"my-1\">\n                  <Form.Group controlId=\"pinCode\">\n                    <Form.Label>\n                      PinCode <span className=\"text-danger\">*</span>\n                    </Form.Label>\n                    <div className=\"d-flex\">\n                      <Field\n                        type=\"pinCode\"\n                        name=\"pinCode\"\n                        className=\"form-control\"\n                        placeholder=\"Enter your PinCode\"\n                      />\n                      {!isPinCodeVerified ? (\n                        <Button\n                          style={{ backgroundColor: color }}\n                          className=\"ml-2 mx-2\"\n                          onClick={() => {\n                            handlepinCodeOtpSend(values);\n                          }}\n                          disabled={\n                            loadingPin || errors.pinCode || !values.pinCode\n                          }\n                        >\n                          {loadingPin ? (\n                            <>\n                              <Spinner animation=\"border\" size=\"sm\" /> Verify...\n                            </>\n                          ) : (\n                            'Verify'\n                          )}\n                        </Button>\n                      ) : (\n                        <Button\n                          style={{ backgroundColor: 'white' }}\n                          className=\"ml-2\"\n                          disabled\n                        >\n                          <i\n                            className=\"fas fa-check-circle\"\n                            style={{ color: 'green' }}\n                          ></i>\n                        </Button>\n                      )}\n                    </div>\n                    <ErrorMessage\n                      name=\"pinCode\"\n                      component=\"div\"\n                      className=\"text-danger\"\n                    />\n                  </Form.Group>\n                </Row>\n\n                <Form.Group\n                  controlId=\"termsAndConditions\"\n                  className=\"my-2 pointer\"\n                >\n                  <Field\n                    type=\"checkbox\"\n                    name=\"termsAndConditions\"\n                    className=\"form-check-input\"\n                  />\n                  <Form.Label\n                    id=\"termsAndConditions\"\n                    className=\"form-check-label  mx-1\"\n                    style={{ fontSize: '14px' }}\n                  >\n                    I accept the terms and conditions\n                  </Form.Label>\n                  <ErrorMessage\n                    name=\"termsAndConditions\"\n                    component=\"div\"\n                    className=\"text-danger\"\n                  />\n                </Form.Group>\n                <Button\n                  type=\"submit\"\n                  className=\"w-100 px-3 py-1 my-4\"\n                  disabled={\n                    checkoutLoader || (coupon.length > 0 && !showVerify)\n                  }\n                  style={{ backgroundColor: color, borderColor: color }}\n                >\n                  {checkoutLoader ? (\n                    <Spinner size=\"sm\" />\n                  ) : (\n                    <>\n                      {paymentMethod === 'onlinePayment' && totalAmount > 0\n                        ? 'Pay now ₹' + couponAmount.toString()\n                        : 'Checkout'}\n                    </>\n                  )}\n                </Button>\n                {/* <BasicButton\n                  type=\"submit\"\n                  className=\"bg-main w-100 px-3 py-1 my-4\"\n                  label={\n                    couponAmount > 0\n                      ? 'Pay now ₹' + couponAmount.toString()\n                      : 'Checkout'\n                  }\n                  isLoading={coupon.length > 0 || checkoutLoader}\n                /> */}\n              </Modal.Body>\n\n              <Modal\n                show={showEmailOtpModal}\n                onHide={() => setShowEmailOtpModal(false)}\n                centered\n                size='sm'\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title className='border-0 fs-5'>Enter OTP</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  <p>We have sent an OTP to your email</p>\n                  <p style={{ fontSize: '13px' }}>\n                    <strong className=\"text-wrap\">{values.email}</strong>\n                  </p>\n                  <Form.Group>\n                    <div className=\"d-flex justify-content-between mt-2\">\n                      {otpEmail.map((data, index) => (\n                        <Form.Control\n                          key={index}\n                          type=\"text\"\n                          maxLength=\"1\"\n                          value={data}\n                          onChange={(e) => handleChangeEmail(e.target, index)}\n                          onKeyDown={(e) => handleKeyDownEmail(e, index)}\n                          ref={(el) => (inputEmailRefs.current[index] = el)}\n                          className=\"otp-input mx-1\"\n                          style={{\n                            width: '3rem',\n                            height: '3rem',\n                            margin: '0 0.5rem',\n                            fontSize: '1rem',\n                            borderRadius: 4,\n                            border: '1px solid rgba(0,0,0,0.3)',\n                            textAlign: 'center',\n                          }}\n                          centered\n                        />\n                      ))}\n                    </div>\n                    {otpError && (\n                      <Form.Text className=\"text-danger\">\n                        Please enter the OTP.\n                      </Form.Text>\n                    )}\n                  </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                  <Button\n                    variant=\"secondary\"\n                    onClick={() => setShowEmailOtpModal(false)}\n                  >\n                    Close\n                  </Button>\n\n                  <BasicButton\n                    className=\"c-button c-hover\"\n                    type=\"submit\"\n                    style={{ backgroundColor: color }}\n                    isLoading={otpEmailLoader}\n                    label={'Submit'}\n                    onClick={() => handleEmailOtpSubmit(values)}\n                    disabled={otpEmailLoader}\n                  >\n                    {otpEmailLoader ? (\n                      <>\n                        <Spinner\n                          as=\"span\"\n                          animation=\"border\"\n                          size=\"sm\"\n                          role=\"status\"\n                          aria-hidden=\"true\"\n                          className=\"me-2\"\n                        />\n                        Submiting OTP...\n                      </>\n                    ) : (\n                      'Submit OTP'\n                    )}\n                  </BasicButton>\n                </Modal.Footer>\n              </Modal>\n            </Form>\n          )}\n        </Formik>\n      </Modal>\n      <LoginModal\n        show={isLoginOpen}\n        handleClose={() => setIsLoginOpen(false)}\n      />\n    </Container>\n  );\n};\n\nexport default Cart;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Nav,\n  Form,\n  Modal,\n  Button,\n  Spinner,\n  Accordion,\n  InputGroup,\n} from 'react-bootstrap';\nimport Orders from './Orders';\nimport Addresses from './Addresses';\nimport {\n  useDeleteProfileImageMutation,\n  useGetUserDetailsQuery,\n  useOtpSumbitEmailMutation,\n  useUpdateUserPasswordMutation,\n  useUpdateUserProfileMutation,\n  useVerifyEmailOTPMutation,\n  useVerifyOTPPasswordMutation,\n} from '../../redux/api/ProfileOrdersApi';\nimport BasicButton from '../../components/BasicButton';\nimport Quotes from './Quotes';\nimport { ErrorMessage, Field, Formik } from 'formik';\nimport { ProfileSchema } from '../Profile/ProfileValidation';\nimport SuccessModal from '../../components/SuccessModal';\nimport FetchLoader from '../../components/FetchLoader';\nimport {\n  MdCameraAlt,\n  MdDelete,\n  MdOutlineAddPhotoAlternate,\n  MdPerson,\n  MdShoppingBag,\n} from 'react-icons/md';\nimport Cart from '../Cart/Cart';\nimport { BsChatRightQuoteFill } from 'react-icons/bs';\nimport { FaAddressCard, FaEye, FaEyeSlash } from 'react-icons/fa';\nimport { IoMdCart } from 'react-icons/io';\nimport DeleteModel from '../../components/DeleteModel';\nimport { toast } from 'react-toastify';\nimport { useLocation } from 'react-router-dom';\nimport LoginModal from '../Authentication/LoginModel';\nimport { useTheme } from '../../Contexts/ThemeContext';\nimport { useLoginMutation } from '../../redux/api/AuthApi';\nimport { removePrefix, truncateText } from '../../Constants/constant';\n\nconst Profile = () => {\n  const { color } = useTheme();\n  const location = useLocation();\n  const [activeSection, setActiveSection] = useState('personal-info');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [userPhoneNumber, setUserPhoneNumber] = useState('');\n  const [isEditName, setIsEditName] = useState(false);\n  const [isEditEmail, setIsEditEmail] = useState(false);\n  const [isEditPhoneNumber, setIsEditPhoneNumber] = useState(false);\n  const [updateUserProfile, { isLoading: updateLoader }] =\n    useUpdateUserProfileMutation();\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [imageLink, setImageLink] = useState('');\n  const [deleteShow, setDeleteShow] = useState(false);\n  const [isLoginOpen, setIsLoginOpen] = useState(false);\n  const [showOtpModal, setShowOtpModal] = useState(false);\n  const [showPasswordModal, setShowPasswordModal] = useState(false);\n  const [showEmailOtpModal, setShowEmailOtpModal] = useState(false);\n  const [otp, setOtp] = useState(new Array(4).fill(''));\n  const [isEmailVerified, setIsEmailVerified] = useState(false);\n  const [otpEmail, setOtpEmail] = useState(new Array(4).fill(''));\n  const [otpError, setOtpError] = useState(false);\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const inputRefs = useRef([]);\n  const inputEmailRefs = useRef([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingPassword, setLoadingPassword] = useState(false);\n  const [verificationId, setVerificationId] = useState('');\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [confirmPasswordVisible, setConfirmPasswordVisible] = useState(false);\n  const [showConfirmOtpModal, setShowConfirmOtpModal] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [previewImage, setPreviewImage] = useState('');\n  const [errors, setErrors] = useState({});\n  const [loginApi] = useLoginMutation();\n  const [otpApi, { isLoading: otpLoader }] = useVerifyOTPPasswordMutation();\n  const [otpEmailApi] = useVerifyEmailOTPMutation();\n  const [otpEmailSubmitApi, { isLoading: otpEmailLoader }] =\n    useOtpSumbitEmailMutation();\n\n  const [updateUserPassword] = useUpdateUserPasswordMutation();\n\n  const {\n    data: userData,\n    isLoading,\n    isFetching,\n  } = useGetUserDetailsQuery({\n    phoneNumber: userPhoneNumber,\n  });\n\n  const [deleteProfileImage] = useDeleteProfileImageMutation();\n  useEffect(() => {\n    if (location.state && location.state.path) {\n      setActiveSection(location.state.path);\n    }\n  }, [location.state]);\n\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      const parsedToken = JSON.parse(storedToken);\n      const phoneNumber = parsedToken.phoneNumber;\n      setUserPhoneNumber(phoneNumber);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (userData && userData.data) {\n      setName(userData.data.userName ?? '');\n      setEmail(userData.data.email ?? '');\n      setImageLink(userData.data.profileImage ?? '');\n    }\n  }, [userData, name, email]);\n\n  useEffect(() => {\n    if (showOtpModal) {\n      inputRefs.current[0]?.focus();\n    }\n  }, [showOtpModal]);\n\n  useEffect(() => {\n    if (showEmailOtpModal) {\n      inputEmailRefs.current[0]?.focus();\n    }\n  }, [showEmailOtpModal]);\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setPreviewImage(URL.createObjectURL(file));\n      setSelectedImage(file);\n    }\n  };\n\n  const handleSubmit = async (values, { setSubmitting, setFieldValue }) => {\n    const phoneNumberWithoutPrefix = userPhoneNumber.replace(/^(\\+91)/, '');\n    const newPhoneNumberWithoutPrefix = values.phoneNumber.replace(\n      /^(\\+91)/,\n      ''\n    );\n\n    // Construct the request data based on which fields are being edited\n    let requestData = { phoneNumber: phoneNumberWithoutPrefix };\n\n    // Add name if editing the name\n    if (isEditName) {\n      requestData.userName = values.userName;\n    }\n\n    // Add email if editing the email\n    if (isEditEmail) {\n      requestData.email = values.email;\n    }\n\n    // Add new phone number if editing the phone number\n    if (isEditPhoneNumber) {\n      requestData.newPhoneNumber = newPhoneNumberWithoutPrefix;\n    }\n\n    try {\n      const response = await updateUserProfile(requestData);\n\n      if (response?.data) {\n        // Update phone number in local state if phone number is edited\n        if (isEditPhoneNumber) {\n          setUserPhoneNumber(values.phoneNumber);\n          setFieldValue('phoneNumber', values.phoneNumber);\n        }\n\n        // Show success message and reset editing states based on which field was edited\n        if (isEditName) {\n          toast.success(\n            response?.data?.message || 'Name updated successfully',\n            { autoClose: 1000 }\n          );\n          setIsEditName(false);\n        }\n\n        if (isEditEmail) {\n          toast.success(\n            response?.data?.message || 'Email updated successfully',\n            { autoClose: 1000 }\n          );\n          setIsEditEmail(false);\n        }\n\n        if (isEditPhoneNumber) {\n          toast.success(\n            response?.data?.message || 'Phone number updated successfully',\n            { autoClose: 1000 }\n          );\n          setIsEditPhoneNumber(false);\n        }\n\n        // Update token in local storage if needed\n        localStorage.setItem(\n          'token',\n          JSON.stringify(response.data.userDetails)\n        );\n      } else {\n        toast.error(response?.error?.data?.error || 'Error updating profile', {\n          autoClose: 1000,\n        });\n      }\n    } catch (error) {\n      console.error('Error in handleSubmit:', error);\n      toast.error('Failed to update profile', { autoClose: 1000 });\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const initialValues = {\n    userName: '',\n    email: '',\n  };\n\n  const handleImageEdit = () => {\n    setShowImageModal(true);\n  };\n\n  const handleUpdateImage = async () => {\n    if (!selectedImage) return;\n\n    try {\n      const formData = new FormData();\n      formData.append('image', selectedImage);\n      formData.append('phoneNumber', userPhoneNumber);\n\n      const response = await updateUserProfile(formData);\n\n      if (response?.data) {\n        setShowImageModal(false);\n        setImageLink(response.data.profileImage);\n        setPreviewImage('');\n        toast.success(response?.data?.message, { autoClose: 1000 });\n      } else {\n        setShowImageModal(false);\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const deleteHandleShow = () => {\n    setShowImageModal(false);\n    setDeleteShow(true);\n  };\n\n  const handleDeleteProfile = async () => {\n    try {\n      const response = await deleteProfileImage({\n        phoneNumber: userPhoneNumber,\n      });\n      if (response?.data) {\n        setImageLink('');\n        setDeleteShow(false);\n        setPreviewImage('');\n        toast.success(response?.data?.message, { autoClose: 1000 });\n      } else {\n        setDeleteShow(false);\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const deleteHandleClose = () => {\n    setDeleteShow(false);\n  };\n  const openLoginModal = () => setIsLoginOpen(true);\n  const closeLoginModal = () => setIsLoginOpen(false);\n\n  const handleOtpSend = async () => {\n    const phoneNumberWithoutPrefix = userPhoneNumber.replace(/^(\\+91)/, '');\n    setLoading(true);\n    try {\n      const response = await loginApi({\n        phoneNumber: phoneNumberWithoutPrefix,\n      });\n\n      if (response?.data) {\n        setVerificationId(response.data?.data?.data.verificationId);\n        setShowOtpModal(true);\n        setShowConfirmOtpModal(false);\n      } else {\n        toast.error(response?.error.data.error, {\n          position: 'bottom-center',\n          autoClose: 1000,\n        });\n        setShowConfirmOtpModal(false);\n      }\n    } catch (error) {\n      console.error(error);\n      toast.error('An error occurred', { autoClose: 1000 });\n    } finally {\n      setLoading(false);\n      setShowConfirmOtpModal(false);\n    }\n  };\n\n  const handleOtpSubmit = async () => {\n    const phoneNumberWithoutPrefix = userPhoneNumber.replace(/^(\\+91)/, '');\n\n    true;\n    try {\n      const response = await otpApi({\n        phoneNumber: phoneNumberWithoutPrefix,\n        verificationId: verificationId,\n        code: otp.join(''), // Joining the OTP array to form a single string\n      }).unwrap();\n\n      if (response?.data?.responseCode === 200) {\n        setShowOtpModal(false);\n        setShowPasswordModal(true);\n        setOtp(new Array(4).fill(''));\n      } else {\n        setOtp(new Array(4).fill(''));\n        toast.error(response?.data?.message || 'Failed to verify OTP', {\n          autoClose: 1000,\n        });\n      }\n    } catch (error) {\n      console.error(error);\n      toast.error('An error occurred', { autoClose: 1000 });\n    } finally {\n      false;\n    }\n  };\n\n  const handleKeyDown = (e, index) => {\n    if (e.key === 'Backspace') {\n      const newOtp = [...otp];\n      newOtp[index] = '';\n      setOtp(newOtp);\n      if (index > 0) {\n        inputRefs.current[index - 1].focus();\n      }\n    }\n  };\n\n  const handleChange = (element, index) => {\n    if (isNaN(element.value)) return false;\n    const newOtp = [...otp];\n    newOtp[index] = element.value;\n    setOtp(newOtp);\n\n    // Move to next input if value is entered\n    if (element.nextSibling && element.value) {\n      element.nextSibling.focus();\n    }\n  };\n\n  const handleKeyDownEmail = (e, index) => {\n    if (e.key === 'Backspace') {\n      const newOtp = [...otpEmail];\n      newOtp[index] = '';\n      setOtpEmail(newOtp);\n      if (index > 0) {\n        inputEmailRefs.current[index - 1].focus();\n      }\n    }\n  };\n\n  const handleChangeEmail = (element, index) => {\n    if (isNaN(element.value)) return false;\n    const newOtp = [...otpEmail];\n    newOtp[index] = element.value;\n    setOtpEmail(newOtp);\n\n    // Move to next input if value is entered\n    if (element.nextSibling && element.value) {\n      element.nextSibling.focus();\n    }\n  };\n\n  const togglePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  const toggleConfirmPasswordVisibility = () => {\n    setConfirmPasswordVisible(!confirmPasswordVisible);\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!newPassword) {\n      newErrors.newPassword = 'Enter your new Password';\n    }\n\n    if (!confirmPassword) {\n      newErrors.confirmPassword = 'Enter your Confirm Password';\n    }\n    if (newPassword !== confirmPassword) {\n      newErrors.newPassword = 'PassWord do not match';\n      newErrors.confirmPassword = 'Confirm Password do not match';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handlePasswordSubmit = async () => {\n    const phoneNumberWithoutPrefix = userPhoneNumber.replace(/^(\\+91)/, '');\n\n    if (!validateForm()) {\n      return;\n    }\n\n    setLoadingPassword(true);\n    try {\n      const response = await updateUserPassword({\n        phoneNumber: phoneNumberWithoutPrefix,\n        password: newPassword,\n        confirmPassword: confirmPassword,\n      }).unwrap();\n\n      if (response?.message) {\n        toast.success(response.message, { autoClose: 1000 });\n        setShowPasswordModal(false);\n        setNewPassword('');\n        setConfirmPassword('');\n      } else {\n        toast.error('Failed to change password', { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error(error);\n      toast.error('An error occurred', { autoClose: 1000 });\n    } finally {\n      setLoadingPassword(false);\n    }\n  };\n\n  const isImageUploaded =\n    imageLink?.length > 0 &&\n    imageLink !==\n      'https://p7.hiclipart.com/preview/636/702/321/computer-icons-user-profile-avatar-black-man.jpg';\n  const showUploadButton = !isImageUploaded && selectedImage;\n  const showChangeDeleteButtons =\n    isImageUploaded || (selectedImage && !updateLoader);\n\n  const handleEmailOtpSend = async (values) => {\n    const phoneNumberWithoutPrefix = userPhoneNumber.replace(/^(\\+91)/, '');\n    setLoading(true);\n    try {\n      const response = await otpEmailApi({\n        phoneNumber: phoneNumberWithoutPrefix,\n        email: values.email,\n      });\n\n      if (response?.data) {\n        setShowEmailOtpModal(true);\n      } else {\n        toast.error(response?.error.data.error, {\n          position: 'bottom-center',\n          autoClose: 1000,\n        });\n      }\n    } catch (error) {\n      console.error(error);\n      toast.error('An error occurred', { autoClose: 1000 });\n    } finally {\n      setLoading(false);\n      setShowConfirmOtpModal(false);\n    }\n  };\n\n  const handleEmailOtpSubmit = async (values) => {\n    if (otpEmail.length < 4) {\n      setOtpError(true);\n    }\n\n    const phoneNumberWithoutPrefix = userPhoneNumber.replace(/^(\\+91)/, '');\n    setLoading(true);\n    try {\n      const response = await otpEmailSubmitApi({\n        phoneNumber: phoneNumberWithoutPrefix,\n        email: values.email,\n        code: otpEmail.join(''),\n      });\n\n      if (response?.data) {\n        setShowEmailOtpModal(false);\n        toast.success(response?.data.message, {\n          position: 'bottom-center',\n          autoClose: 1000,\n        });\n        setIsEmailVerified(true);\n        setOtpEmail(new Array(4).fill(''));\n      } else {\n        toast.error(response?.error.data.error, {\n          position: 'bottom-center',\n          autoClose: 1000,\n        });\n        setOtpEmail(new Array(4).fill(''));\n      }\n    } catch (error) {\n      console.error(error);\n      toast.error('An error occurred', { autoClose: 1000 });\n    } finally {\n      setLoading(false);\n      setOtpEmail(new Array(4).fill(''));\n    }\n  };\n\n  return (\n    <Container fluid>\n      {isLoading ? (\n        <FetchLoader />\n      ) : (\n        <Row className=\"mt-4\">\n          <Col lg={3} className={`${!userPhoneNumber ? 'd-none' : ''}`}>\n            <Card className=\"mb-3 p-2\">\n              {userPhoneNumber ? (\n                <Col className=\"d-flex flex-row gap-3 align-items-center\">\n                  <div className=\"position-relative\">\n                    <img\n                      src={\n                        imageLink?.length > 0\n                          ? imageLink\n                          : 'https://p7.hiclipart.com/preview/636/702/321/computer-icons-user-profile-avatar-black-man.jpg'\n                      }\n                      className=\"rounded-circle\"\n                      style={{\n                        width: '60px',\n                        height: '60px',\n                        objectFit: 'cover',\n                        border: `1px solid ${color}`,\n                      }}\n                      alt=\"profileImage\"\n                    />\n\n                    <div\n                      className=\"position-absolute d-flex p-1 justify-content-center pointer align-items-center\"\n                      style={{\n                        bottom: '10px',\n                        right: '10px',\n                        transform: 'translate(50%, 50%)',\n                        overflow: 'hidden',\n                        borderRadius: '50%',\n                        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                      }}\n                      onClick={handleImageEdit}\n                    >\n                      <div\n                        style={{\n                          display: 'flex',\n                          justifyContent: 'center',\n                          alignItems: 'center',\n                        }}\n                      >\n                        {imageLink?.length > 0 ? (\n                          <MdCameraAlt size={16} color={'white'} />\n                        ) : (\n                          <MdOutlineAddPhotoAlternate\n                            size={16}\n                            color={'white'}\n                          />\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  <Col\n                    className=\"d-flex flex-column align-items-start\"\n                    style={{ maxWidth: '200px' }}\n                  >\n                    <span style={{ fontSize: '12px', fontWeight: 300 }}>\n                      Hello\n                    </span>\n                    <p\n                      style={{\n                        margin: '0',\n                        wordWrap: 'break-word',\n                        overflowWrap: 'break-word',\n                        textWrap: 'wrap',\n                        width: '70%',\n                      }}\n                    >\n                      {truncateText(name, 25)}\n                    </p>\n                  </Col>\n                </Col>\n              ) : (\n                <Button\n                  size=\"sm\"\n                  variant=\"light\"\n                  onClick={openLoginModal}\n                  style={{ backgroundColor: color }}\n                >\n                  <span className=\"main d-block text-light\">Login</span>\n                </Button>\n              )}\n            </Card>\n            <Accordion className=\"d-lg-none mb-2\">\n              <Accordion.Item eventKey=\"0\">\n                <Accordion.Header>\n                  {activeSection === 'personal-info'\n                    ? 'Profile Information'\n                    : ''}\n                  {activeSection === 'addresses' ? 'Addresses' : ''}\n                  {activeSection === 'quotes' ? 'Quotes' : ''}\n                  {activeSection === 'orders' ? 'Orders' : ''}\n                  {activeSection === 'cart' ? 'Cart' : ''}\n                </Accordion.Header>\n                <Accordion.Body>\n                  <Nav className=\"flex-column\">\n                    {userPhoneNumber ? (\n                      <Nav.Item>\n                        <Nav.Link\n                          onClick={() => setActiveSection('personal-info')}\n                          className={`nav-link ${activeSection === 'personal-info' ? 'active' : ''} text-nowrap d-flex flex-row flex-nowrap  w-100`}\n                        >\n                          <MdPerson\n                            size={20}\n                            className={`icon ${activeSection === 'personal-info' ? 'active' : ''}`}\n                          />\n                          <span\n                            className={`nav-text ${activeSection === 'personal-info' ? 'active' : '' } text-nowrap`}\n                          >\n                            Personal Information\n                          </span>\n                        </Nav.Link>\n                      </Nav.Item>\n                    ) : (\n                      <></>\n                    )}\n\n                    {userPhoneNumber ? (\n                      <Nav.Item>\n                        <Nav.Link\n                          onClick={() => setActiveSection('addresses')}\n                          className={`nav-link ${activeSection === 'addresses' ? 'active' : ''}`}\n                        >\n                          <FaAddressCard\n                            size={20}\n                            className={`icon ${activeSection === 'addresses' ? 'active' : ''}`}\n                          />\n                          <span\n                            className={`nav-text ${activeSection === 'addresses' ? 'active' : ''}`}\n                          >\n                            Addresses\n                          </span>\n                        </Nav.Link>\n                      </Nav.Item>\n                    ) : (\n                      <></>\n                    )}\n                    <Nav.Item>\n                      <Nav.Link\n                        onClick={() => setActiveSection('cart')}\n                        className={`nav-link ${activeSection === 'cart' ? 'active' : ''}`}\n                      >\n                        <IoMdCart\n                          size={20}\n                          className={`icon ${activeSection === 'cart' ? 'active' : ''}`}\n                        />\n                        <span\n                          className={`nav-text ${activeSection === 'cart' ? 'active' : ''}`}\n                        >\n                          Cart\n                        </span>\n                      </Nav.Link>\n                    </Nav.Item>\n                    {userPhoneNumber ? (\n                      <Nav.Item>\n                        <Nav.Link\n                          onClick={() => setActiveSection('quotes')}\n                          className={`nav-link ${activeSection === 'quotes' ? 'active' : ''}`}\n                        >\n                          <BsChatRightQuoteFill\n                            size={20}\n                            className={`icon ${activeSection === 'quotes' ? 'active' : ''}`}\n                          />\n                          <span\n                            className={`nav-text ${activeSection === 'quotes' ? 'active' : ''}`}\n                          >\n                            Quotes\n                          </span>\n                        </Nav.Link>\n                      </Nav.Item>\n                    ) : (\n                      <></>\n                    )}\n                    {userPhoneNumber ? (\n                      <Nav.Item>\n                        <Nav.Link\n                          onClick={() => setActiveSection('orders')}\n                          className={`nav-link ${activeSection === 'orders' ? 'active' : ''}`}\n                        >\n                          <MdShoppingBag\n                            size={20}\n                            className={`icon ${activeSection === 'orders' ? 'active' : ''}`}\n                          />\n                          <span\n                            className={`nav-text ${activeSection === 'orders' ? 'active' : ''}`}\n                          >\n                            Orders\n                          </span>\n                        </Nav.Link>\n                      </Nav.Item>\n                    ) : (\n                      <></>\n                    )}\n                  </Nav>\n                </Accordion.Body>\n              </Accordion.Item>\n            </Accordion>\n            <Card className=\"d-none d-lg-block p-0 m-0\">\n              <Card.Body>\n                <Nav className=\"flex-column\">\n                  {userPhoneNumber ? (\n                    <Nav.Item>\n                      <Nav.Link\n                        onClick={() => setActiveSection('personal-info')}\n                        className={`nav-link ${activeSection === 'personal-info' ? 'active' : ''} text-nowrap d-flex flex-row flex-nowrap  w-100`}\n                      >\n                        <MdPerson\n                          size={20}\n                          className={`icon ${activeSection === 'personal-info' ? 'active' : ''}`}\n                        />\n                        <span\n                          className={`nav-text ${activeSection === 'personal-info' ? 'active' : ''}`}\n                        >\n                          Personal Information\n                        </span>\n                      </Nav.Link>\n                    </Nav.Item>\n                  ) : (\n                    <></>\n                  )}\n\n                  {userPhoneNumber ? (\n                    <Nav.Item>\n                      <Nav.Link\n                        onClick={() => setActiveSection('addresses')}\n                        className={`nav-link ${activeSection === 'addresses' ? 'active' : ''}`}\n                      >\n                        <FaAddressCard\n                          size={20}\n                          className={`icon ${activeSection === 'addresses' ? 'active' : ''}`}\n                        />\n                        <span\n                          className={`nav-text ${activeSection === 'addresses' ? 'active' : ''}`}\n                        >\n                          Addresses\n                        </span>\n                      </Nav.Link>\n                    </Nav.Item>\n                  ) : (\n                    <></>\n                  )}\n                  <Nav.Item>\n                    <Nav.Link\n                      onClick={() => setActiveSection('cart')}\n                      className={`nav-link ${activeSection === 'cart' ? 'active' : ''}`}\n                    >\n                      <IoMdCart\n                        size={20}\n                        className={`icon ${activeSection === 'cart' ? 'active' : ''}`}\n                      />\n                      <span\n                        className={`nav-text ${activeSection === 'cart' ? 'active' : ''}`}\n                      >\n                        Cart\n                      </span>\n                    </Nav.Link>\n                  </Nav.Item>\n                  {userPhoneNumber ? (\n                    <Nav.Item>\n                      <Nav.Link\n                        onClick={() => setActiveSection('quotes')}\n                        className={`nav-link ${activeSection === 'quotes' ? 'active' : ''}`}\n                      >\n                        <BsChatRightQuoteFill\n                          size={20}\n                          className={`icon ${activeSection === 'quotes' ? 'active' : ''}`}\n                        />\n                        <span\n                          className={`nav-text ${activeSection === 'quotes' ? 'active' : ''}`}\n                        >\n                          Quotes\n                        </span>\n                      </Nav.Link>\n                    </Nav.Item>\n                  ) : (\n                    <></>\n                  )}\n                  {userPhoneNumber ? (\n                    <Nav.Item>\n                      <Nav.Link\n                        onClick={() => setActiveSection('orders')}\n                        className={`nav-link ${activeSection === 'orders' ? 'active' : ''}`}\n                      >\n                        <MdShoppingBag\n                          size={20}\n                          className={`icon ${activeSection === 'orders' ? 'active' : ''}`}\n                        />\n                        <span\n                          className={`nav-text ${activeSection === 'orders' ? 'active' : ''}`}\n                        >\n                          Orders\n                        </span>\n                      </Nav.Link>\n                    </Nav.Item>\n                  ) : (\n                    <></>\n                  )}\n                </Nav>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col lg={userPhoneNumber ? 9 : 12}>\n            <Card className=\"mt-1 p-3 \">\n              {activeSection === 'personal-info' && (\n                <Card.Body className=\"mb-4\">\n                  <Card.Title className=\"text-center text-nowrap\">\n                    Personal Information\n                  </Card.Title>\n\n                  <Col xs={12} lg={6} className='mt-3'>\n                    <Formik\n                      enableReinitialize\n                      initialValues={{\n                        userName: name || '',\n                        email: email || '',\n\n                        phoneNumber: removePrefix(userPhoneNumber) || '',\n                      }}\n                      validationSchema={ProfileSchema(\n                        isEditName,\n                        isEditEmail,\n                        isEditPhoneNumber\n                      )}\n                      onSubmit={handleSubmit}\n                    >\n                      {({ handleSubmit, setFieldValue, values }) => (\n                        <Form onSubmit={handleSubmit}>\n                          {/* Username Section */}\n                          <Form.Group controlId=\"userName\">\n                            <div className=\"d-flex justify-content-between align-items-center\">\n                              <Form.Label>\n                                Name <span className=\"text-danger\">*</span>\n                              </Form.Label>\n                              <Form.Label\n                                onClick={() => {\n                                  setIsEditName(!isEditName);\n                                  setIsEditEmail(false);\n                                  setIsEditPhoneNumber(false);\n                                }}\n                                style={{ cursor: 'pointer' }}\n                              >\n                                {isEditName ? 'Cancel' : 'Edit'}\n                              </Form.Label>\n                            </div>\n                            <div className=\"d-flex align-items-center gap-2\">\n                              <Field\n                                type=\"text\"\n                                name=\"userName\"\n                                placeholder={\n                                  isEditName ? 'Enter Your name' : ''\n                                }\n                                className=\"form-control\"\n                                readOnly={!isEditName}\n                              />\n                              {isEditName && (\n                                <BasicButton\n                                  size=\"md\"\n                                  label={'Save'}\n                                  type=\"submit\"\n                                  isLoading={updateLoader}\n                                />\n                              )}\n                            </div>\n                            <ErrorMessage\n                              name=\"userName\"\n                              component=\"div\"\n                              className=\"text-danger\"\n                            />\n                          </Form.Group>\n                          {/* Email Section */}\n                          <Form.Group controlId=\"email\" className=\"mt-3\">\n                            <div className=\"d-flex justify-content-between align-items-center\">\n                              <Form.Label>\n                                Email <span className=\"text-danger\">*</span>\n                              </Form.Label>\n                              <Form.Label\n                                onClick={() => {\n                                  setIsEditEmail(!isEditEmail);\n                                  setIsEditName(false);\n                                  setIsEditPhoneNumber(false);\n                                }}\n                                style={{ cursor: 'pointer' }}\n                              >\n                                {isEditEmail ? 'Cancel' : 'Edit'}\n                              </Form.Label>\n                            </div>\n                            <div className=\"d-flex align-items-center gap-2\">\n                              <Field\n                                type=\"text\"\n                                name=\"email\"\n                                placeholder={\n                                  isEditEmail ? 'Enter Your email' : ''\n                                }\n                                className=\"form-control\"\n                                readOnly={!isEditEmail}\n                                onChange={(e) => {\n                                  const value = e.target.value.toLowerCase();\n                                  e.target.value = value;\n                                  setFieldValue('email', value);\n                                }}\n                              />\n                              {isEditEmail && !isEmailVerified ? (\n                                <BasicButton\n                                  size=\"md\"\n                                  label=\"Verify\"\n                                  type=\"button\"\n                                  onClick={() => {\n                                    handleEmailOtpSend(values);\n                                  }}\n                                  isLoading={loading}\n                                />\n                              ) : isEditEmail && isEmailVerified ? (\n                                <BasicButton\n                                  size=\"md\"\n                                  label=\"Save\"\n                                  type=\"submit\"\n                                  isLoading={updateLoader}\n                                />\n                              ) : null}\n                            </div>\n                            <ErrorMessage\n                              name=\"email\"\n                              component=\"div\"\n                              className=\"text-danger mt-2\"\n                            />\n                          </Form.Group>\n\n                          {/* Phone Number Section */}\n                          <Form.Group controlId=\"phoneNumber\" className=\"mt-3\">\n                            <div className=\"d-flex justify-content-between align-items-center\">\n                              <Form.Label>\n                                Phone number{' '}\n                                <span className=\"text-danger\">*</span>\n                              </Form.Label>\n                              <Form.Label\n                                onClick={() => {\n                                  setIsEditPhoneNumber(!isEditPhoneNumber);\n                                  setIsEditName(false);\n                                  setIsEditEmail(false);\n                                }}\n                                style={{ cursor: 'pointer' }}\n                              >\n                                {isEditPhoneNumber ? 'Cancel' : 'Edit'}\n                              </Form.Label>\n                            </div>\n\n                            <div className=\"d-flex align-items-center gap-2\">\n                              {isEditPhoneNumber ? (\n                                <InputGroup>\n                                  <InputGroup.Text\n                                    className=\"input-group-prepend\"\n                                    style={{ fontSize: '14px', height: '40px' }}\n                                  >\n                                    +91\n                                  </InputGroup.Text>\n                                  <Field\n                                    type=\"text\"\n                                    name=\"phoneNumber\"\n                                    placeholder=\"Enter your Mobile Number...\"\n                                    className=\"form-control\"\n                                    onInput={(e) => {\n                                      const value = e.target.value.replace(\n                                        /\\D/g,\n                                        ''\n                                      );\n                                      if (value.length <= 10) {\n                                        e.target.value = value;\n                                      } else {\n                                        e.target.value = value.slice(0, 10);\n                                      }\n                                    }}\n                                  />\n                                </InputGroup>\n                              ) : (\n                                <InputGroup className=\"\">\n                                  <InputGroup.Text\n                                    className=\"input-group-prepend\"\n                                    style={{ fontSize: '14px', height: '40px' }}\n                                  >\n                                    +91\n                                  </InputGroup.Text>\n                                  <Field\n                                    type=\"text\"\n                                    name=\"phoneNumber\"\n                                    placeholder=\"\"\n                                    className=\"form-control\"\n                                    readOnly\n                                  />\n                                </InputGroup>\n                              )}\n                              {isEditPhoneNumber && (\n                                <BasicButton\n                                  size=\"md\"\n                                  label={'Save'}\n                                  type=\"submit\"\n                                  isLoading={updateLoader}\n                                />\n                              )}\n                            </div>\n\n                            <ErrorMessage\n                              name=\"phoneNumber\"\n                              component=\"div\"\n                              className=\"text-danger mt-2\"\n                            />\n                          </Form.Group>\n\n                          {/* Change Password Button */}\n                          <div className=\"d-flex justify-content-end mt-2\">\n                            <Button\n                              style={{\n                                backgroundColor: color,\n                                borderColor: color,\n                              }}\n                              onClick={() => setShowConfirmOtpModal(true)}\n                              className=\"mt-3 justify-content-center\"\n                            >\n                              Change Password\n                            </Button>\n                          </div>\n\n                          <Modal\n                            show={showEmailOtpModal}\n                            onHide={() => setShowEmailOtpModal(false)}\n                            centered\n                          >\n                            <Modal.Header closeButton>\n                              <Modal.Title>Enter OTP</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                              <Form.Group>\n                                <Form.Label>\n                                  We have sent an OTP to your email:{' '}\n                                  <strong>{values.email}</strong>\n                                </Form.Label>\n                                <div className=\"d-flex justify-content-between mt-2\">\n                                  {otpEmail.map((data, index) => (\n                                    <Form.Control\n                                      key={index}\n                                      type=\"text\"\n                                      maxLength=\"1\"\n                                      value={data}\n                                      onChange={(e) =>\n                                        handleChangeEmail(e.target, index)\n                                      }\n                                      onKeyDown={(e) =>\n                                        handleKeyDownEmail(e, index)\n                                      }\n                                      ref={(el) =>\n                                        (inputEmailRefs.current[index] = el)\n                                      }\n                                      className=\"otp-input mx-1\"\n                                      style={{\n                                        width: '3rem',\n                                        height: '3rem',\n                                        margin: '0 0.5rem',\n                                        fontSize: '1rem',\n                                        borderRadius: 4,\n                                        border: '1px solid rgba(0,0,0,0.3)',\n                                        textAlign: 'center',\n                                      }}\n                                      centered\n                                    />\n                                  ))}\n                                </div>\n                                {otpError && (\n                                  <Form.Text className=\"text-danger\">\n                                    Please enter the OTP.\n                                  </Form.Text>\n                                )}\n                              </Form.Group>\n                            </Modal.Body>\n                            <Modal.Footer>\n                              <Button\n                                variant=\"secondary\"\n                                onClick={() => setShowEmailOtpModal(false)}\n                              >\n                                Close\n                              </Button>\n\n                              <BasicButton\n                                className=\"c-button c-hover\"\n                                type=\"submit\"\n                                style={{ backgroundColor: color }}\n                                isLoading={otpEmailLoader}\n                                label={'Submit'}\n                                onClick={() => handleEmailOtpSubmit(values)}\n                                disabled={otpEmailLoader}\n                              >\n                                {otpEmailLoader ? (\n                                  <>\n                                    <Spinner\n                                      as=\"span\"\n                                      animation=\"border\"\n                                      size=\"sm\"\n                                      role=\"status\"\n                                      aria-hidden=\"true\"\n                                      className=\"me-2\"\n                                    />\n                                    Submiting OTP...\n                                  </>\n                                ) : (\n                                  'Submit OTP'\n                                )}\n                              </BasicButton>\n                            </Modal.Footer>\n                          </Modal>\n                        </Form>\n                      )}\n                    </Formik>\n                  </Col>\n                </Card.Body>\n              )}\n\n              {activeSection === 'quotes' && <Quotes />}\n              {activeSection === 'orders' && <Orders />}\n              {activeSection === 'addresses' && <Addresses />}\n              {activeSection === 'cart' && <Cart />}\n            </Card>\n          </Col>\n        </Row>\n      )}\n\n      {/* Image Upload Modal */}\n      <Modal\n        show={showImageModal}\n        onHide={() => setShowImageModal(false)}\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Upload Profile Image</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"text-center\">\n          <img\n            src={\n              previewImage ||\n              imageLink ||\n              'https://p7.hiclipart.com/preview/636/702/321/computer-icons-user-profile-avatar-black-man.jpg'\n            }\n            className=\"rounded-circle\"\n            style={{\n              width: '60px',\n              height: '60px',\n              objectFit: 'cover',\n              border: `1px solid ${color}`,\n            }}\n            alt=\"profileImage\"\n          />\n          <Col className=\"mx-1\">\n            <Form>\n              <Form.Group controlId=\"formFile\" className=\"mt-3\">\n                <Form.Label>\n                  Select Profile Image <span className=\"text-danger\">*</span>\n                </Form.Label>\n                <Form.Control\n                  type=\"file\"\n                  accept=\".jpg,.jpeg,.png,.svg,.webp\"\n                  onChange={handleImageUpload}\n                />\n              </Form.Group>\n            </Form>\n          </Col>\n          <Col>\n            {(!imageLink || previewImage) && (\n              <div>\n                <Button\n                  style={{ backgroundColor: color }}\n                  disabled={!previewImage || updateLoader}\n                  onClick={handleUpdateImage}\n                  className=\"mt-4\"\n                >\n                  {updateLoader ? (\n                    <>\n                      <Spinner size=\"sm\" variant=\"light\" className=\"mx-1\" />\n                      Upload Profile Image...\n                    </>\n                  ) : (\n                    'Upload Profile Image'\n                  )}\n                </Button>\n              </div>\n            )}\n            {imageLink && (\n              <Col>\n                <div>\n                  <Button\n                    style={{ backgroundColor: color }}\n                    onClick={deleteHandleShow}\n                    className=\"mt-3\"\n                  >\n                    Delete Profile Image\n                  </Button>\n                </div>\n              </Col>\n            )}\n          </Col>\n        </Modal.Body>\n      </Modal>\n      <LoginModal show={isLoginOpen} handleClose={closeLoginModal} />\n      <DeleteModel\n        YES={handleDeleteProfile}\n        DELETESTATE={deleteShow}\n        ONCLICK={deleteHandleClose}\n        DESCRIPTION=\"Are you sure want to delete Your Profile Image\"\n        DELETETITLE=\"Delete Profile\"\n      />\n\n      {/* otp modal */}\n      <Modal show={showOtpModal} onHide={() => setShowOtpModal(false)} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Enter OTP</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group>\n            <Form.Label>\n              Enter the OTP sent to {userPhoneNumber} Number\n            </Form.Label>\n            <div className=\"d-flex justify-content-between\">\n              {otp.map((data, index) => (\n                <Form.Control\n                  key={index}\n                  type=\"text\"\n                  maxLength=\"1\"\n                  value={data}\n                  onChange={(e) => handleChange(e.target, index)}\n                  onKeyDown={(e) => handleKeyDown(e, index)}\n                  ref={(el) => (inputRefs.current[index] = el)}\n                  className=\"otp-input mx-1\"\n                  style={{\n                    width: '3rem',\n                    height: '3rem',\n                    margin: '0 0.5rem',\n                    fontSize: '1rem',\n                    borderRadius: 4,\n                    border: '1px solid rgba(0,0,0,0.3)',\n                    textAlign: 'center',\n                  }}\n                  centered\n                />\n              ))}\n            </div>\n            {otpError && (\n              <Form.Text className=\"text-danger\">\n                Please enter the OTP.\n              </Form.Text>\n            )}\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowOtpModal(false)}>\n            Close\n          </Button>\n\n          <BasicButton\n            className=\"c-button c-hover\"\n            type=\"submit\"\n            style={{ backgroundColor: color }}\n            isLoading={otpLoader}\n            label={'Submit'}\n            onClick={handleOtpSubmit}\n            disabled={otpLoader}\n          >\n            {otpLoader ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  className=\"me-2\"\n                />\n                Submiting OTP...\n              </>\n            ) : (\n              'Submit OTP'\n            )}\n          </BasicButton>\n        </Modal.Footer>\n      </Modal>\n\n      {/* password modal */}\n      <Modal\n        show={showPasswordModal}\n        onHide={() => setShowPasswordModal(false)}\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Change Password</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"newPassword\" className=\"mt-3\">\n              <Form.Label>\n                New Password <span className=\"text-danger\">*</span>\n              </Form.Label>\n              <div className=\"input-group\">\n                <Form.Control\n                  type={passwordVisible ? 'text' : 'password'}\n                  placeholder=\"Enter new Password\"\n                  value={newPassword}\n                  onChange={(e) => setNewPassword(e.target.value)}\n                  isInvalid={!!errors.newPassword}\n                />\n                <Button\n                  variant=\"outline-secondary\"\n                  onClick={togglePasswordVisibility}\n                >\n                  {passwordVisible ? <FaEye /> : <FaEyeSlash />}\n                </Button>\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.newPassword}\n                </Form.Control.Feedback>\n              </div>\n            </Form.Group>\n            <Form.Group controlId=\"confirmPassword\" className=\"mt-3 mb-3\">\n              <Form.Label>\n                Confirm Password <span className=\"text-danger\">*</span>\n              </Form.Label>\n              <div className=\"input-group\">\n                <Form.Control\n                  type={confirmPasswordVisible ? 'text' : 'password'}\n                  placeholder=\"Enter new Confirm Password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  isInvalid={!!errors.confirmPassword}\n                />\n                <Button\n                  variant=\"outline-secondary\"\n                  onClick={toggleConfirmPasswordVisibility}\n                >\n                  {confirmPasswordVisible ? <FaEye /> : <FaEyeSlash />}\n                </Button>\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.confirmPassword}\n                </Form.Control.Feedback>\n              </div>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => setShowPasswordModal(false)}\n          >\n            Close\n          </Button>\n          <Button\n            style={{ backgroundColor: color }}\n            onClick={handlePasswordSubmit}\n            disabled={loadingPassword}\n          >\n            {loadingPassword ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  className=\"me-2\"\n                />\n                Change Password...\n              </>\n            ) : (\n              'Change Password'\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* Send OTP Modal */}\n      <Modal\n        show={showConfirmOtpModal}\n        onHide={() => setShowConfirmOtpModal(false)}\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Send OTP</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Do you want to send an OTP to this number {userPhoneNumber}?\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => setShowConfirmOtpModal(false)}\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={handleOtpSend}\n            style={{ backgroundColor: color, border: 'none' }}\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  className=\"me-2\"\n                />\n                Confirm...\n              </>\n            ) : (\n              ' Confirm'\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default Profile;\n"],"names":["FetchLoader","_jsxs","Container","className","children","_jsx","src","loader","alt","style","width","height","HeadingWithQuotes","_ref","Heading","_ref2","reviewValidationSchema","Yup","shape","rating","min","max","required","review","images","of","test","value","includes","type","productReviewValidationSchema","OrdersEmpty","options","loop","autoplay","animationData","Ordersnotfound","rendererSettings","preserveAspectRatio","fluid","Lottie","maxWidth","maxHeight","alignItems","color","useTheme","navigate","useNavigate","activities","setActivities","useState","showModal","setShowModal","showAddressModal","setShowAddressModal","selectedActivity","setSelectedActivity","phoneNumber","setPhoneNumber","totalItems","setTotalItems","currentPage","setCurrentPage","reviewModal","setReviewModal","totalPage","setTotalPage","errorLottie","setErrorLottie","successMessage","setSuccessMessage","setRating","setReview","setImages","similarProduct","setSimilarProduct","productReviewModal","setProductReviewModal","data","OrdersData","isLoading","orderLoader","useGetViewUserOrderQuery","page","ReviewsApi","useAddProductReviewMutation","productReview","reviewLoader","useAddProductsReviewMutation","useEffect","storedToken","localStorage","getItem","parsedToken","JSON","parse","pagination","totalPages","extractDate","dateTimeString","datePart","split","year","month","day","concat","handleCloseModal","handleImageChange","e","index","setFieldValue","values","selectedFile","target","files","updatedImages","handleImageRemove","filter","_","idx","navigateToRentDetails","productDetails","laptop","rentalCarousel","state","refurbishedCarousel","Row","_Fragment","length","map","_laptop$image","_laptop$productDetail","_laptop$image2","_laptop$productDetail2","Col","md","sm","lg","Card","Body","xs","createdAt","BsChevronDown","onClick","handleChevronClick","cursor","marginLeft","userName","window","innerWidth","whiteSpace","requestId","initialAmountPaidThrough","status","border","billInfo","FaDownload","size","_id","image","Laptop","backgroundColor","objectFit","Paragraph","fontWeight","fontSize","brand","ram","FaCircle","operatingSystem","model","storage","processor","screenSize","amount","issue","issueDetails","BasicButton","label","Modal","show","onHide","centered","backdrop","keyboard","Header","closeButton","Title","address","Footer","Button","variant","Formik","initialValues","validationSchema","onSubmit","async","resetForm","formData","FormData","append","forEach","response","_response$error","message","setTimeout","error","console","_ref3","handleSubmit","Form","Group","Label","Rating","name","rate","fillColor","ErrorMessage","component","Field","as","placeholder","Array","from","position","IoMdCloseCircle","top","right","zIndex","URL","createObjectURL","controls","htmlFor","FiUploadCloud","id","accept","onChange","display","productType","productId","laptopId","_response$error2","_ref4","FiXCircle","CustomPagination","onPageChange","scrollTo","SuccessModal","Addresses","addresses","setAddresses","userPhoneNumber","setUserPhoneNumber","showForm","setShowForm","currentAddress","setCurrentAddress","currentType","setCurrentType","currentAddressId","setCurrentAddressId","newAddress","setNewAddress","showEditForm","setShowEditForm","deleteShow","setDeleteShow","loading","setLoading","isPrimary","setIsPrimary","updateAddress","updateAddressLoader","useUpdateUserAddressMutation","deleteAddress","useDeleteUserAddressMutation","userData","refetch","useGetUserDetailsQuery","_userData$data$addres","handleEdit","deleteHandleShow","Addressnotfound","FaLocationDot","primaryAddress","textTransform","verticalAlign","padding","borderRadius","marginRight","FaEdit","FaTrash","controlId","Check","inline","checked","Control","rows","trim","addressId","_response$data2","toast","success","autoClose","disabled","Spinner","undefined","_response$data","DeleteModel","YES","_response$data3","_response$error3","DELETESTATE","ONCLICK","deleteHandleClose","DESCRIPTION","DELETETITLE","Quotes","setLaptop","QuotesData","useGetViewMyQuotesQuery","youMayLikeProducts","QuotesNotFound","_laptop$productDetail3","_laptop$productDetail4","SUPPORTED_FORMATS","ProfileSchema","isEditName","isEditEmail","isEditPhoneNumber","matches","val","email","Cart","_address$find","itemsPerPage","setItemsPerPage","cartId","setCartId","totalAmount","setTotalAmount","setUserName","setEmail","setAddress","pinCode","setPinCode","couponAmount","setCouponAmount","initialAmount","setInitialAmount","gSTAmount","setGSTAmount","setData","setRentalCarousel","setRefurbishedCarousel","coupon","setCoupon","showFormModal","setShowFormModal","isLoginOpen","setIsLoginOpen","showVerify","setShowVerify","razorPaySecretKey","setRazorPaySecretKey","razorPayKey","setRazorPayKey","removingProductId","setRemovingProductId","paymentMethod","setPaymentMethod","isEmailVerified","setIsEmailVerified","isPinCodeVerified","setIsPinCodeVerified","loadingPin","setLoadingPin","otpEmail","setOtpEmail","fill","inputEmailRefs","useRef","showEmailOtpModal","setShowEmailOtpModal","otpError","setOtpError","CartData","useGetCartQuery","removeProduct","removeLoader","useRemoveCartMutation","updateProduct","quantityLoader","useUpdateCartMutation","Checkout","checkoutLoader","useCartCheckoutMutation","VerifyCoupon","couponLoader","useVerifyCouponMutation","otpEmailApi","useVerifyEmailOTPMutation","otpEmailSubmitApi","otpEmailLoader","useOtpSumbitEmailMutation","pinCodeApi","useSendPinCodeMutation","_inputEmailRefs$curre","current","focus","secretKey","payKey","_CartData$pagination","_CartData$pagination2","_CartData$pagination3","setItem","stringify","totalAmountBeforeGST","GST","cart","getAllItemsInCart","isArray","totalItemsCount","startIndex","paginatedData","slice","repairTotalAmount","item","reduce","acc","Math","ceil","intervalId","setInterval","clearInterval","storedRentalCarousel","storedRefurbishedCarousel","find","addr","fullName","termsAndConditions","oneOf","cartNotFound","renderIssues","issues","i","transactionId","paymentType","fullAddress","alternatePhoneNumber","aphoneNumber","_response$data5","location","reload","handleProductQuantity","quantity","handleLocalProductQuantity","updateItemInCart","_item$image","Image","rounded","navigateToDetails","Text","FaMinus","InputGroup","FormControl","readOnly","FaPlus","_response$error3$data","handleRemoveProduct","deleteItemFromCart","handleRemoveLocalProduct","CiDiscount1","VscVerifiedFilled","toUpperCase","_response$data4","payableAmount","handleVerifyCoupon","FaCheck","toString","borderColor","removePrefix","key","key_secret","currency","description","handler","razorpay_payment_id","prefill","phone","city","notes","theme","Razorpay","open","handleRazorPay","errors","overflowY","onInput","replace","toLowerCase","phoneNumberWithoutPrefix","handleEmailOtpSend","animation","pincode","handlepinCodeOtpSend","maxLength","handleChangeEmail","element","isNaN","newOtp","nextSibling","onKeyDown","handleKeyDownEmail","ref","el","margin","textAlign","code","join","handleEmailOtpSubmit","role","LoginModal","handleClose","Profile","useLocation","activeSection","setActiveSection","setName","setIsEditName","setIsEditEmail","setIsEditPhoneNumber","updateUserProfile","updateLoader","useUpdateUserProfileMutation","showImageModal","setShowImageModal","imageLink","setImageLink","showOtpModal","setShowOtpModal","showPasswordModal","setShowPasswordModal","otp","setOtp","newPassword","setNewPassword","confirmPassword","setConfirmPassword","inputRefs","loadingPassword","setLoadingPassword","verificationId","setVerificationId","passwordVisible","setPasswordVisible","confirmPasswordVisible","setConfirmPasswordVisible","showConfirmOtpModal","setShowConfirmOtpModal","selectedImage","setSelectedImage","previewImage","setPreviewImage","setErrors","loginApi","useLoginMutation","otpApi","otpLoader","useVerifyOTPPasswordMutation","updateUserPassword","useUpdateUserPasswordMutation","isFetching","deleteProfileImage","useDeleteProfileImageMutation","path","_userData$data$userNa","_userData$data$email","_userData$data$profil","profileImage","_inputRefs$current$","bottom","transform","overflow","handleImageEdit","justifyContent","MdCameraAlt","MdOutlineAddPhotoAlternate","wordWrap","overflowWrap","textWrap","truncateText","openLoginModal","Accordion","Item","eventKey","Nav","Link","MdPerson","FaAddressCard","IoMdCart","BsChatRightQuoteFill","MdShoppingBag","enableReinitialize","setSubmitting","newPhoneNumberWithoutPrefix","requestData","newPhoneNumber","userDetails","_response$error$data","Orders","file","closeLoginModal","handleChange","handleKeyDown","_response$data7","unwrap","_response$data8","responseCode","isInvalid","togglePasswordVisibility","FaEye","FaEyeSlash","Feedback","toggleConfirmPasswordVisibility","validateForm","newErrors","Object","keys","password","_response$data6","_response$data6$data"],"sourceRoot":""}