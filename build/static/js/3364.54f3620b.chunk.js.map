{"version":3,"file":"static/js/3364.54f3620b.chunk.js","mappings":"yMAKA,MAeA,EAfoBA,KAEhBC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,UAAU,sEAAqEC,SAAA,EAExFC,EAAAA,EAAAA,KAAA,OACEC,IAAKC,EACLC,IAAI,aACJC,MAAO,CAAEC,MAAO,QAASC,OAAQ,YAGnCN,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SAAC,kB,mECb1B,MAAMQ,EAAoBC,IAAmB,IAAlB,SAAET,GAAUS,EAC5C,OACEZ,EAAAA,EAAAA,MAAA,MAAIE,UAAU,cAAaC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,SAAC,WACtBA,GACDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,SAAC,aACpB,EAIIU,EAAUC,IAAmB,IAAlB,SAAEX,GAAUW,EAClC,OAAOV,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAaC,SAAEA,GAAc,C,2MCFpD,MA0HA,EA1H6BY,KAC3B,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,MACZ,UAAEC,IAAcC,EAAAA,EAAAA,KAChBC,GAAOC,EAAAA,EAAAA,KACPC,GAAWC,EAAAA,EAAAA,OACX,KAAEC,EAAI,UAAEC,IAAcC,EAAAA,EAAAA,IAAgC,CAC1DR,YACAE,SAKF,GAAIK,EAAW,OAAOrB,EAAAA,EAAAA,KAACL,EAAAA,EAAW,IAElC,MAAM,YACJ4B,EAAW,OACXC,EACAV,UAAWW,EAAY,cACvBC,EAAa,WACbC,EAAU,YACVC,EAAW,KACXC,EAAI,UACJC,IACM,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMA,OAAQ,CAAC,EAEbW,EAAgB,IAAIC,KAAKF,GAAWG,mBAAmB,QAAS,CACpEC,MAAO,QACPC,IAAK,UACLC,KAAM,YAGFC,EAAaR,EAAOA,EAAKS,KAAK,MAAQ,IAE5C,OACE1C,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAAC0C,OAAK,EAACzC,UAAU,OAAMC,SAAA,EAC/BC,EAAAA,EAAAA,KAACwC,EAAAA,EAAG,CAAC1C,UAAU,0BAAyBC,UACtCH,EAAAA,EAAAA,MAAC6C,EAAAA,EAAG,CAAC3C,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,MAAI0C,QA3BSC,IAAMzB,GAAU,GA2BFd,MAAO,CAAEwC,OAAQ,WAAY7C,UACtDC,EAAAA,EAAAA,KAAC6C,EAAAA,IAAkB,OAErB7C,EAAAA,EAAAA,KAAA,MAAIF,UAAU,OAAMC,SAAC,gCAGpB,OAAJqB,QAAI,IAAJA,GAAAA,EAAMA,MACLpB,EAAAA,EAAAA,KAAA8C,EAAAA,SAAA,CAAA/C,UACEH,EAAAA,EAAAA,MAAC4C,EAAAA,EAAG,CAAC1C,UAAU,0BAAyBC,SAAA,EACtCC,EAAAA,EAAAA,KAACyC,EAAAA,EAAG,CAACM,GAAI,GAAIjD,UAAU,mBAAkBC,UACvCH,EAAAA,EAAAA,MAACa,EAAAA,EAAO,CAAAV,SAAA,CAAC,mBACU,KACjBH,EAAAA,EAAAA,MAAA,QAAMQ,MAAO,CAAEQ,MAAOA,GAAQb,SAAA,CAAE2B,EAAc,aAGlD1B,EAAAA,EAAAA,KAACyC,EAAAA,EAAG,CAACM,GAAI,GAAGhD,UACVC,EAAAA,EAAAA,KAACgD,EAAAA,EAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAApD,UAC3BH,EAAAA,EAAAA,MAAA,SAAAG,SAAA,EACEH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,oBAEVC,EAAAA,EAAAA,KAAA,MAAAD,SAAKwB,QAEP3B,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAEVH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,CAAI,UAAGyB,SAET5B,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBAEVC,EAAAA,EAAAA,KAAA,MAAAD,SAAK0B,QAEP7B,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,sBAEVC,EAAAA,EAAAA,KAAA,MAAAD,SAAK2B,QAEP9B,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,mBAEVC,EAAAA,EAAAA,KAAA,MAAAD,SAAK4B,GAAc,UAErB/B,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,oBAEVH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,CAAI,UAAG6B,GAAe,WAExBhC,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,YAEVC,EAAAA,EAAAA,KAAA,MAAAD,SAAKsC,QAEPzC,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBAEVC,EAAAA,EAAAA,KAAA,MAAAD,SAAKgC,oBAQjB/B,EAAAA,EAAAA,KAACwC,EAAAA,EAAG,CAAC1C,UAAU,0BAAyBC,UACtCC,EAAAA,EAAAA,KAACyC,EAAAA,EAAG,CAACM,GAAG,OAAOjD,UAAU,2CAA0CC,UACjEH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAACoD,EAAAA,EAAW,KACZpD,EAAAA,EAAAA,KAACS,EAAAA,EAAO,CAAAV,SAAC,4CAKP,C,4FC3HhB,MA+BA,EA/B2BsD,EAAAA,YAAiB,CAAA7C,EAWzC8C,KAAQ,IAXkC,SAC3CC,EAAQ,UACRzD,EAAS,QACTmD,EAAO,SACPC,EAAQ,WACRM,EAAU,MACVL,EAAK,KACLM,EAAI,QACJC,EAAO,WACPC,KACGC,GACJpD,EACC,MAAMqD,GAAoBC,EAAAA,EAAAA,IAAmBP,EAAU,SACjDQ,EAAUC,IAAWlE,EAAW+D,EAAmBH,GAAW,GAAJO,OAAOJ,EAAiB,KAAAI,OAAIP,GAAWD,GAAQ,GAAJQ,OAAOJ,EAAiB,KAAAI,OAAIR,GAAQR,GAAW,GAAJgB,OAAOJ,EAAiB,KAAAI,OAAuB,kBAAZhB,EAAuB,WAAHgB,OAAchB,GAAY,WAAaC,GAAY,GAAJe,OAAOJ,EAAiB,aAAaL,GAAc,GAAJS,OAAOJ,EAAiB,eAAeV,GAAS,GAAJc,OAAOJ,EAAiB,WACzWK,GAAqBlE,EAAAA,EAAAA,KAAK,QAAS,IACpC4D,EACH9D,UAAWiE,EACXT,IAAKA,IAEP,GAAIK,EAAY,CACd,IAAIQ,EAAkB,GAAHF,OAAMJ,EAAiB,eAI1C,MAH0B,kBAAfF,IACTQ,EAAkB,GAAHF,OAAME,EAAe,KAAAF,OAAIN,KAEtB3D,EAAAA,EAAAA,KAAK,MAAO,CAC9BF,UAAWqE,EACXpE,SAAUmE,GAEd,CACA,OAAOA,CAAK,G","sources":["components/FetchLoader.js","components/Heading.js","pages/Admin/Orders/TransactionID.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { RotatingLines } from 'react-loader-spinner'; \nimport loader from '../assests/images/loader.gif';\n\nconst FetchLoader = () => {\n  return (\n    <Container className=\"vh-100 d-flex flex-column justify-content-center align-items-center\">\n      {/* Add your GIF image below */}\n      <img \n        src={loader} \n        alt=\"Loading...\" \n        style={{ width: '150px', height: '150px' }} \n      />\n      {/* Optional: Use a text loader if needed */}\n      <div className=\"text mt-3\">Loading ...</div>\n    </Container>\n  );\n};\n\nexport default FetchLoader;\n","import React from 'react';\n\nexport const HeadingWithQuotes = ({ children }) => {\n  return (\n    <h4 className=\"text-center\">\n      <span className=\"main\">“</span>\n      {children}\n      <span className=\"main\">”</span>\n    </h4>\n  );\n};\n\nexport const Heading = ({ children }) => {\n  return <h4 className=\"text-center\">{children}</h4>;\n};\n","import React from 'react';\nimport { Col, Container, Row, Table } from 'react-bootstrap';\nimport { useGetTransactionIDDetailsQuery } from '../../../redux/api/TransactionsApi';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getRole } from '../../../Constants/Global';\nimport FetchLoader from '../../../components/FetchLoader';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { useTheme } from '../../../Contexts/ThemeContext';\nimport NoDataFound from '../../../components/NoDataFound';\nimport { Heading } from '../../../components/Heading';\n\nconst TransactionIdDetails = () => {\n  const { color } = useTheme();\n  const { requestId } = useParams();\n  const role = getRole();\n  const navigate = useNavigate();\n  const { data, isLoading } = useGetTransactionIDDetailsQuery({\n    requestId,\n    role,\n  });\n\n  const handleCancel = () => navigate(-1);\n\n  if (isLoading) return <FetchLoader />;\n\n  const {\n    phoneNumber,\n    amount,\n    requestId: apiRequestId,\n    transactionId,\n    couponCode,\n    couponValue,\n    type,\n    createdAt,\n  } = data?.data || {};\n\n  const formattedDate = new Date(createdAt).toLocaleDateString('en-US', {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric',\n  });\n\n  const typeString = type ? type.join(', ') : '-';\n\n  return (\n    <Container fluid className=\"mt-3\">\n      <Row className=\"boxShadow p-4 mb-4 mt-4\">\n        <Col className=\"d-flex justify-content-start mb-3 mt-3\">\n          <h4 onClick={handleCancel} style={{ cursor: 'pointer' }}>\n            <AiOutlineArrowLeft />\n          </h4>\n          <h4 className=\"ms-2\">Transaction ID Details</h4>\n        </Col>\n      </Row>\n      {data?.data ? (\n        <>\n          <Row className=\"boxShadow p-4 mb-4 mt-4\">\n            <Col xs={12} className=\"text-center mb-4\">\n              <Heading>\n                Transaction ID -{' '}\n                <span style={{ color: color }}>{transactionId} </span>\n              </Heading>\n            </Col>\n            <Col xs={12}>\n              <Table striped bordered hover>\n                <tbody>\n                  <tr>\n                    <td>\n                      <strong>Phone Number</strong>\n                    </td>\n                    <td>{phoneNumber}</td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong>Amount</strong>\n                    </td>\n                    <td>₹ {amount}</td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong>Request ID</strong>\n                    </td>\n                    <td>{apiRequestId}</td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong>Transaction ID</strong>\n                    </td>\n                    <td>{transactionId}</td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong>Coupon Code</strong>\n                    </td>\n                    <td>{couponCode || '-'}</td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong>Coupon Value</strong>\n                    </td>\n                    <td>₹ {couponValue || '0'}</td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong>Type</strong>\n                    </td>\n                    <td>{typeString}</td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong>Created At</strong>\n                    </td>\n                    <td>{formattedDate}</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </>\n      ) : (\n        <Row className=\"justify-content-center \">\n          <Col xs=\"auto\" className=\"justify-content-center align-item-center\">\n            <div>\n              <NoDataFound />\n              <Heading>No Data in this Transaction ID</Heading>\n            </div>\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n};\n\nexport default TransactionIdDetails;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["FetchLoader","_jsxs","Container","className","children","_jsx","src","loader","alt","style","width","height","HeadingWithQuotes","_ref","Heading","_ref2","TransactionIdDetails","color","useTheme","requestId","useParams","role","getRole","navigate","useNavigate","data","isLoading","useGetTransactionIDDetailsQuery","phoneNumber","amount","apiRequestId","transactionId","couponCode","couponValue","type","createdAt","formattedDate","Date","toLocaleDateString","month","day","year","typeString","join","fluid","Row","Col","onClick","handleCancel","cursor","AiOutlineArrowLeft","_Fragment","xs","Table","striped","bordered","hover","NoDataFound","React","ref","bsPrefix","borderless","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","concat","table","responsiveClass"],"sourceRoot":""}